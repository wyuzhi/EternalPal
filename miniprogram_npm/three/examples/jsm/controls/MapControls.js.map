{"version":3,"file":"node_modules/three/examples/jsm/controls/MapControls.js","names":["MOUSE","TOUCH","OrbitControls","MapControls","constructor","object","domElement","super","this","screenSpacePanning","mouseButtons","LEFT","PAN","MIDDLE","DOLLY","RIGHT","ROTATE","touches","ONE","TWO","DOLLY_ROTATE"],"sources":["node_modules/three/examples/jsm/controls/MapControls.js"],"sourcesContent":["import { MOUSE, TOUCH } from 'three';\n\nimport { OrbitControls } from './OrbitControls.js';\n\n/**\n * This class is intended for transforming a camera over a map from bird's eye perspective.\n * The class shares its implementation with {@link OrbitControls} but uses a specific preset\n * for mouse/touch interaction and disables screen space panning by default.\n *\n * - Orbit: Right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate.\n * - Zoom: Middle mouse, or mousewheel / touch: two-finger spread or squish.\n * - Pan: Left mouse, or arrow keys / touch: one-finger move.\n *\n * @augments OrbitControls\n * @three_import import { MapControls } from 'three/addons/controls/MapControls.js';\n */\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\t/**\n\t\t * Overwritten and set to `false` to pan orthogonal to world-space direction `camera.up`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.screenSpacePanning = false;\n\n\t\t/**\n\t\t * This object contains references to the mouse actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tLEFT: THREE.MOUSE.PAN,\n\t\t * \tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t * \tRIGHT: THREE.MOUSE.ROTATE\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.mouseButtons = { LEFT: MOUSE.PAN, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.ROTATE };\n\n\t\t/**\n\t\t * This object contains references to the touch actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tONE: THREE.TOUCH.PAN,\n\t\t * \tTWO: THREE.TOUCH.DOLLY_ROTATE\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.touches = { ONE: TOUCH.PAN, TWO: TOUCH.DOLLY_ROTATE };\n\n\t}\n\n}\n\nexport { MapControls };\n"],"mappings":"OAASA,MAAOC,UAAa,eAEpBC,kBAAqB,qBAc9B,MAAMC,oBAAoBD,cAEzB,WAAAE,CAAaC,EAAQC,GAEpBC,MAAOF,EAAQC,GAQfE,KAAKC,oBAAqB,EAc1BD,KAAKE,aAAe,CAAEC,KAAMX,MAAMY,IAAKC,OAAQb,MAAMc,MAAOC,MAAOf,MAAMgB,QAazER,KAAKS,QAAU,CAAEC,IAAKjB,MAAMW,IAAKO,IAAKlB,MAAMmB,aAE7C,SAIQjB","ignoreList":[]}