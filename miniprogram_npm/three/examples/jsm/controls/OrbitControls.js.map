{"version":3,"file":"node_modules/three/examples/jsm/controls/OrbitControls.js","names":["Controls","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","Plane","Ray","MathUtils","_changeEvent","type","_startEvent","_endEvent","_ray","_plane","_TILT_LIMIT","Math","cos","DEG2RAD","_v","_twoPI","PI","_STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","_EPS","OrbitControls","constructor","object","domElement","super","this","state","target","cursor","minDistance","maxDistance","Infinity","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","keyRotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MIDDLE","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","_lastPosition","_lastQuaternion","_lastTargetPosition","_quat","setFromUnitVectors","up","_quatInverse","invert","_spherical","_sphericalDelta","_scale","_panOffset","_rotateStart","_rotateEnd","_rotateDelta","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_dollyDirection","_mouse","_performCursorZoom","_pointers","_pointerPositions","_controlActive","_onPointerMove","onPointerMove","bind","_onPointerDown","onPointerDown","_onPointerUp","onPointerUp","_onContextMenu","onContextMenu","_onMouseWheel","onMouseWheel","_onKeyDown","onKeyDown","_onTouchStart","onTouchStart","_onTouchMove","onTouchMove","_onMouseDown","onMouseDown","_onMouseMove","onMouseMove","_interceptControlDown","interceptControlDown","_interceptControlUp","interceptControlUp","connect","update","element","addEventListener","passive","getRootNode","capture","style","touchAction","disconnect","removeEventListener","stopListenToKeyEvents","dispose","getPolarAngle","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","deltaTime","sub","applyQuaternion","setFromVector3","_rotateLeft","_getAutoRotationAngle","min","max","isFinite","makeSafe","addScaledVector","add","clampLength","zoomChanged","isOrthographicCamera","radius","_clampDistance","prevRadius","setFromSpherical","lookAt","multiplyScalar","set","newRadius","isPerspectiveCamera","length","radiusDelta","updateMatrixWorld","mouseBefore","x","y","unproject","prevZoom","mouseAfter","console","warn","transformDirection","matrix","origin","direction","abs","dot","setFromNormalAndCoplanarPoint","intersectPlane","distanceToSquared","quaternion","_getZoomScale","delta","normalizedDelta","pow","angle","_rotateUp","_panLeft","distance","objectMatrix","setFromMatrixColumn","_panUp","crossVectors","_pan","deltaX","deltaY","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","_dollyOut","dollyScale","_dollyIn","_updateZoomParameters","rect","getBoundingClientRect","dx","dy","w","width","h","height","normalize","dist","_handleMouseDownRotate","event","clientX","clientY","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveRotate","subVectors","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseWheel","_handleKeyDown","needsUpdate","code","ctrlKey","metaKey","shiftKey","preventDefault","_handleTouchStartRotate","pageX","pageY","_getSecondPointerPosition","_handleTouchStartPan","_handleTouchStartDolly","sqrt","_handleTouchStartDollyPan","_handleTouchStartDollyRotate","_handleTouchMoveRotate","_handleTouchMovePan","_handleTouchMoveDolly","centerX","centerY","_handleTouchMoveDollyPan","_handleTouchMoveDollyRotate","_addPointer","push","pointerId","_removePointer","i","splice","_isTrackingPointer","_trackPointer","undefined","_customWheelEvent","mode","deltaMode","newEvent","enabled","setPointerCapture","pointerType","releasePointerCapture","mouseAction","button","DOLLY_ROTATE","key"],"sources":["node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n/**\n * Fires when the camera has been transformed by the controls.\n *\n * @event OrbitControls#change\n * @type {Object}\n */\nconst _changeEvent = { type: 'change' };\n\n/**\n * Fires when an interaction was initiated.\n *\n * @event OrbitControls#start\n * @type {Object}\n */\nconst _startEvent = { type: 'start' };\n\n/**\n * Fires when an interaction has finished.\n *\n * @event OrbitControls#end\n * @type {Object}\n */\nconst _endEvent = { type: 'end' };\n\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\n\n/**\n * Orbit controls allow the camera to orbit around a target.\n *\n * OrbitControls performs orbiting, dollying (zooming), and panning. Unlike {@link TrackballControls},\n * it maintains the \"up\" direction `object.up` (+Y by default).\n *\n * - Orbit: Left mouse / touch: one-finger move.\n * - Zoom: Middle mouse, or mousewheel / touch: two-finger spread or squish.\n * - Pan: Right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move.\n *\n * ```js\n * const controls = new OrbitControls( camera, renderer.domElement );\n *\n * // controls.update() must be called after any manual changes to the camera's transform\n * camera.position.set( 0, 20, 100 );\n * controls.update();\n *\n * function animate() {\n *\n * \t// required if controls.enableDamping or controls.autoRotate are set to true\n * \tcontrols.update();\n *\n * \trenderer.render( scene, camera );\n *\n * }\n * ```\n *\n * @augments Controls\n * @three_import import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n */\nclass OrbitControls extends Controls {\n\n\t/**\n\t * Constructs a new controls instance.\n\t *\n\t * @param {Object3D} object - The object that is managed by the controls.\n\t * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n\t */\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t/**\n\t\t * The focus point of the controls, the `object` orbits around this.\n\t\t * It can be updated manually at any point to change the focus of the controls.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target = new Vector3();\n\n\t\t/**\n\t\t * The focus point of the `minTargetRadius` and `maxTargetRadius` limits.\n\t\t * It can be updated manually at any point to change the center of interest\n\t\t * for the `target`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.cursor = new Vector3();\n\n\t\t/**\n\t\t * How far you can dolly in (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minDistance = 0;\n\n\t\t/**\n\t\t * How far you can dolly out (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxDistance = Infinity;\n\n\t\t/**\n\t\t * How far you can zoom in (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minZoom = 0;\n\n\t\t/**\n\t\t * How far you can zoom out (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxZoom = Infinity;\n\n\t\t/**\n\t\t * How close you can get the target to the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minTargetRadius = 0;\n\n\t\t/**\n\t\t * How far you can move the target from the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t/**\n\t\t * How far you can orbit vertically, lower limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minPolarAngle = 0;\n\n\t\t/**\n\t\t * How far you can orbit vertically, upper limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Math.PI\n\t\t */\n\t\tthis.maxPolarAngle = Math.PI;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, lower limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.minAzimuthAngle = - Infinity;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, upper limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.maxAzimuthAngle = Infinity;\n\n\t\t/**\n\t\t * Set to `true` to enable damping (inertia), which can be used to give a sense of weight\n\t\t * to the controls. Note that if this is enabled, you must call `update()` in your animation\n\t\t * loop.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.enableDamping = false;\n\n\t\t/**\n\t\t * The damping inertia used if `enableDamping` is set to `true`.\n\t\t *\n\t\t * Note that for this to work, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0.05\n\t\t */\n\t\tthis.dampingFactor = 0.05;\n\n\t\t/**\n\t\t * Enable or disable zooming (dollying) of the camera.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableZoom = true;\n\n\t\t/**\n\t\t * Speed of zooming / dollying.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable horizontal and vertical rotation of the camera.\n\t\t *\n\t\t * Note that it is possible to disable a single axis by setting the min and max of the\n\t\t * `minPolarAngle` or `minAzimuthAngle` to the same value, which will cause the vertical\n\t\t * or horizontal rotation to be fixed at that value.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableRotate = true;\n\n\t\t/**\n\t\t * Speed of rotation.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t/**\n\t\t * How fast to rotate the camera when the keyboard is used.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable camera panning.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enablePan = true;\n\n\t\t/**\n\t\t * Speed of panning.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.panSpeed = 1.0;\n\n\t\t/**\n\t\t * Defines how the camera's position is translated when panning. If `true`, the camera pans\n\t\t * in screen space. Otherwise, the camera pans in the plane orthogonal to the camera's up\n\t\t * direction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.screenSpacePanning = true;\n\n\t\t/**\n\t\t * How fast to pan the camera when the keyboard is used in\n\t\t * pixels per keypress.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 7\n\t\t */\n\t\tthis.keyPanSpeed = 7.0;\n\n\t\t/**\n\t\t * Setting this property to `true` allows to zoom to the cursor's position.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.zoomToCursor = false;\n\n\t\t/**\n\t\t * Set to true to automatically rotate around the target\n\t\t *\n\t\t * Note that if this is enabled, you must call `update()` in your animation loop.\n\t\t * If you want the auto-rotate speed to be independent of the frame rate (the refresh\n\t\t * rate of the display), you must pass the time `deltaTime`, in seconds, to `update()`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.autoRotate = false;\n\n\t\t/**\n\t\t * How fast to rotate around the target if `autoRotate` is `true`. The default  equates to 30 seconds\n\t\t * per orbit at 60fps.\n\t\t *\n\t\t * Note that if `autoRotate` is enabled, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 2\n\t\t */\n\t\tthis.autoRotateSpeed = 2.0;\n\n\t\t/**\n\t\t * This object contains references to the keycodes for controlling camera panning.\n\t\t *\n\t\t * ```js\n\t\t * controls.keys = {\n\t\t * \tLEFT: 'ArrowLeft', //left arrow\n\t\t * \tUP: 'ArrowUp', // up arrow\n\t\t * \tRIGHT: 'ArrowRight', // right arrow\n\t\t * \tBOTTOM: 'ArrowDown' // down arrow\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t/**\n\t\t * This object contains references to the mouse actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tLEFT: THREE.MOUSE.ROTATE,\n\t\t * \tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t * \tRIGHT: THREE.MOUSE.PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t/**\n\t\t * This object contains references to the touch actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tONE: THREE.TOUCH.ROTATE,\n\t\t * \tTWO: THREE.TOUCH.DOLLY_PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target0 = this.target.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.position0 = this.object.position.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect( this.domElement );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect( element ) {\n\n\t\tsuper.connect( element );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\t/**\n\t * Get the current vertical rotation, in radians.\n\t *\n\t * @return {number} The current vertical rotation, in radians.\n\t */\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\t/**\n\t * Get the current horizontal rotation, in radians.\n\t *\n\t * @return {number} The current horizontal rotation, in radians.\n\t */\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\t/**\n\t * Returns the distance from the camera to the target.\n\t *\n\t * @return {number} The distance from the camera to the target.\n\t */\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\t/**\n\t * Adds key event listeners to the given DOM element.\n\t * `window` is a recommended argument for using this method.\n\t *\n\t * @param {HTMLDOMElement} domElement - The DOM element\n\t */\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\t/**\n\t * Removes the key event listener previously defined with `listenToKeyEvents()`.\n\t */\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Save the current state of the controls. This can later be recovered with `reset()`.\n\t */\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\t/**\n\t * Reset the controls to their state from either the last time the `saveState()`\n\t * was called, or the initial state.\n\t */\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n"],"mappings":"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","ignoreList":[]}