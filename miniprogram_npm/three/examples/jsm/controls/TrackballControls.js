import{Controls,MathUtils,MOUSE,Quaternion,Vector2,Vector3}from"three";const _changeEvent={type:"change"},_startEvent={type:"start"},_endEvent={type:"end"},_EPS=1e-6,_STATE={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},_v2=new Vector2,_mouseChange=new Vector2,_objectUp=new Vector3,_pan=new Vector3,_axis=new Vector3,_quaternion=new Quaternion,_eyeDirection=new Vector3,_objectUpDirection=new Vector3,_objectSidewaysDirection=new Vector3,_moveDirection=new Vector3;class TrackballControls extends Controls{constructor(t,e=null){super(t,e),this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:MOUSE.ROTATE,MIDDLE:MOUSE.DOLLY,RIGHT:MOUSE.PAN},this.target=new Vector3,this.state=_STATE.NONE,this.keyState=_STATE.NONE,this._lastPosition=new Vector3,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new Vector3,this._movePrev=new Vector2,this._moveCurr=new Vector2,this._lastAxis=new Vector3,this._zoomStart=new Vector2,this._zoomEnd=new Vector2,this._panStart=new Vector2,this._panEnd=new Vector2,this._pointers=[],this._pointerPositions={},this._onPointerMove=onPointerMove.bind(this),this._onPointerDown=onPointerDown.bind(this),this._onPointerUp=onPointerUp.bind(this),this._onPointerCancel=onPointerCancel.bind(this),this._onContextMenu=onContextMenu.bind(this),this._onMouseWheel=onMouseWheel.bind(this),this._onKeyDown=onKeyDown.bind(this),this._onKeyUp=onKeyUp.bind(this),this._onTouchStart=onTouchStart.bind(this),this._onTouchMove=onTouchMove.bind(this),this._onTouchEnd=onTouchEnd.bind(this),this._onMouseDown=onMouseDown.bind(this),this._onMouseMove=onMouseMove.bind(this),this._onMouseUp=onMouseUp.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,null!==e&&(this.connect(e),this.handleResize()),this.update()}connect(t){super.connect(t),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const t=this.domElement.getBoundingClientRect(),e=this.domElement.ownerDocument.documentElement;this.screen.left=t.left+window.pageXOffset-e.clientLeft,this.screen.top=t.top+window.pageYOffset-e.clientTop,this.screen.width=t.width,this.screen.height=t.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>_EPS&&(this.dispatchEvent(_changeEvent),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>_EPS||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(_changeEvent),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=_STATE.NONE,this.keyState=_STATE.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(_changeEvent),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(_mouseChange.copy(this._panEnd).sub(this._panStart),_mouseChange.lengthSq()){if(this.object.isOrthographicCamera){const t=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,e=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;_mouseChange.x*=t,_mouseChange.y*=e}_mouseChange.multiplyScalar(this._eye.length()*this.panSpeed),_pan.copy(this._eye).cross(this.object.up).setLength(_mouseChange.x),_pan.add(_objectUp.copy(this.object.up).setLength(_mouseChange.y)),this.object.position.add(_pan),this.target.add(_pan),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(_mouseChange.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){_moveDirection.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let t=_moveDirection.length();t?(this._eye.copy(this.object.position).sub(this.target),_eyeDirection.copy(this._eye).normalize(),_objectUpDirection.copy(this.object.up).normalize(),_objectSidewaysDirection.crossVectors(_objectUpDirection,_eyeDirection).normalize(),_objectUpDirection.setLength(this._moveCurr.y-this._movePrev.y),_objectSidewaysDirection.setLength(this._moveCurr.x-this._movePrev.x),_moveDirection.copy(_objectUpDirection.add(_objectSidewaysDirection)),_axis.crossVectors(_moveDirection,this._eye).normalize(),t*=this.rotateSpeed,_quaternion.setFromAxisAngle(_axis,t),this._eye.applyQuaternion(_quaternion),this.object.up.applyQuaternion(_quaternion),this._lastAxis.copy(_axis),this._lastAngle=t):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),_quaternion.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(_quaternion),this.object.up.applyQuaternion(_quaternion)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let t;this.state===_STATE.TOUCH_ZOOM_PAN?(t=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(t):this.object.isOrthographicCamera?(this.object.zoom=MathUtils.clamp(this.object.zoom/t,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(t=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,1!==t&&t>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(t):this.object.isOrthographicCamera?(this.object.zoom=MathUtils.clamp(this.object.zoom/t,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(t,e){return _v2.set((t-this.screen.left)/this.screen.width,(e-this.screen.top)/this.screen.height),_v2}_getMouseOnCircle(t,e){return _v2.set((t-.5*this.screen.width-this.screen.left)/(.5*this.screen.width),(this.screen.height+2*(this.screen.top-e))/this.screen.width),_v2}_addPointer(t){this._pointers.push(t)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId==t.pointerId)return void this._pointers.splice(e,1)}_trackPointer(t){let e=this._pointerPositions[t.pointerId];void 0===e&&(e=new Vector2,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[e.pointerId]}_checkDistances(){this.noZoom&&this.noPan||(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function onPointerDown(t){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(t),"touch"===t.pointerType?this._onTouchStart(t):this._onMouseDown(t))}function onPointerMove(t){!1!==this.enabled&&("touch"===t.pointerType?this._onTouchMove(t):this._onMouseMove(t))}function onPointerUp(t){!1!==this.enabled&&("touch"===t.pointerType?this._onTouchEnd(t):this._onMouseUp(),this._removePointer(t),0===this._pointers.length&&(this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function onPointerCancel(t){this._removePointer(t)}function onKeyUp(){!1!==this.enabled&&(this.keyState=_STATE.NONE,window.addEventListener("keydown",this._onKeyDown))}function onKeyDown(t){!1!==this.enabled&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===_STATE.NONE&&(t.code!==this.keys[_STATE.ROTATE]||this.noRotate?t.code!==this.keys[_STATE.ZOOM]||this.noZoom?t.code!==this.keys[_STATE.PAN]||this.noPan||(this.keyState=_STATE.PAN):this.keyState=_STATE.ZOOM:this.keyState=_STATE.ROTATE))}function onMouseDown(t){let e;switch(t.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case MOUSE.DOLLY:this.state=_STATE.ZOOM;break;case MOUSE.ROTATE:this.state=_STATE.ROTATE;break;case MOUSE.PAN:this.state=_STATE.PAN;break;default:this.state=_STATE.NONE}const o=this.keyState!==_STATE.NONE?this.keyState:this.state;o!==_STATE.ROTATE||this.noRotate?o!==_STATE.ZOOM||this.noZoom?o!==_STATE.PAN||this.noPan||(this._panStart.copy(this._getMouseOnScreen(t.pageX,t.pageY)),this._panEnd.copy(this._panStart)):(this._zoomStart.copy(this._getMouseOnScreen(t.pageX,t.pageY)),this._zoomEnd.copy(this._zoomStart)):(this._moveCurr.copy(this._getMouseOnCircle(t.pageX,t.pageY)),this._movePrev.copy(this._moveCurr)),this.dispatchEvent(_startEvent)}function onMouseMove(t){const e=this.keyState!==_STATE.NONE?this.keyState:this.state;e!==_STATE.ROTATE||this.noRotate?e!==_STATE.ZOOM||this.noZoom?e!==_STATE.PAN||this.noPan||this._panEnd.copy(this._getMouseOnScreen(t.pageX,t.pageY)):this._zoomEnd.copy(this._getMouseOnScreen(t.pageX,t.pageY)):(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(t.pageX,t.pageY)))}function onMouseUp(){this.state=_STATE.NONE,this.dispatchEvent(_endEvent)}function onMouseWheel(t){if(!1!==this.enabled&&!0!==this.noZoom){switch(t.preventDefault(),t.deltaMode){case 2:this._zoomStart.y-=.025*t.deltaY;break;case 1:this._zoomStart.y-=.01*t.deltaY;break;default:this._zoomStart.y-=25e-5*t.deltaY}this.dispatchEvent(_startEvent),this.dispatchEvent(_endEvent)}}function onContextMenu(t){!1!==this.enabled&&t.preventDefault()}function onTouchStart(t){if(this._trackPointer(t),1===this._pointers.length)this.state=_STATE.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);else{this.state=_STATE.TOUCH_ZOOM_PAN;const t=this._pointers[0].pageX-this._pointers[1].pageX,e=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(t*t+e*e);const o=(this._pointers[0].pageX+this._pointers[1].pageX)/2,i=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(o,i)),this._panEnd.copy(this._panStart)}this.dispatchEvent(_startEvent)}function onTouchMove(t){if(this._trackPointer(t),1===this._pointers.length)this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(t.pageX,t.pageY));else{const e=this._getSecondPointerPosition(t),o=t.pageX-e.x,i=t.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(o*o+i*i);const s=(t.pageX+e.x)/2,n=(t.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(s,n))}}function onTouchEnd(t){switch(this._pointers.length){case 0:this.state=_STATE.NONE;break;case 1:this.state=_STATE.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(t.pageX,t.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=_STATE.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==t.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}}this.dispatchEvent(_endEvent)}export{TrackballControls};
//# sourceMappingURL=TrackballControls.js.map