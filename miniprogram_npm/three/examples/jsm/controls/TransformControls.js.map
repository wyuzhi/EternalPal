{"version":3,"file":"node_modules/three/examples/jsm/controls/TransformControls.js","names":["BoxGeometry","BufferGeometry","Controls","CylinderGeometry","DoubleSide","Euler","Float32BufferAttribute","Line","LineBasicMaterial","Matrix4","Mesh","MeshBasicMaterial","Object3D","OctahedronGeometry","PlaneGeometry","Quaternion","Raycaster","SphereGeometry","TorusGeometry","Vector3","_raycaster","_tempVector","_tempVector2","_tempQuaternion","_unit","X","Y","Z","_changeEvent","type","_mouseDownEvent","mode","_mouseUpEvent","_objectChangeEvent","TransformControls","constructor","camera","domElement","super","undefined","root","TransformControlsRoot","this","_root","gizmo","TransformControlsGizmo","_gizmo","add","plane","TransformControlsPlane","_plane","scope","defineProperty","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","Infinity","worldPosition","worldPositionStart","worldQuaternion","worldQuaternionStart","cameraPosition","cameraQuaternion","pointStart","pointEnd","rotationAxis","eye","_offset","_startNorm","_endNorm","_cameraScale","_parentPosition","_parentQuaternion","_parentQuaternionInv","_parentScale","_worldScaleStart","_worldQuaternionInv","_worldScale","_positionStart","_quaternionStart","_scaleStart","_getPointer","getPointer","bind","_onPointerDown","onPointerDown","_onPointerHover","onPointerHover","_onPointerMove","onPointerMove","_onPointerUp","onPointerUp","connect","element","addEventListener","style","touchAction","disconnect","removeEventListener","getHelper","pointerHover","pointer","object","dragging","setFromCamera","intersect","intersectObjectWithRay","picker","axis","name","pointerDown","button","planeIntersect","updateMatrixWorld","parent","copy","position","quaternion","scale","matrixWorld","decompose","point","sub","pointerMove","space","applyQuaternion","indexOf","x","y","z","divide","translationSnap","invert","search","Math","round","setFromMatrixPosition","max","minX","min","maxX","minY","maxY","minZ","maxZ","d","length","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","_inPlaneRotation","cross","normalize","rotationAngle","angleTo","rotationSnap","setFromAxisAngle","pointerUp","dispose","attach","visible","detach","reset","enabled","getRaycaster","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","setColors","xAxis","yAxis","zAxis","active","materialLib","color","xAxisTransparent","yAxisTransparent","zAxisTransparent","activeTransparent","_color","event","ownerDocument","pointerLockElement","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","pointerType","document","setPointerCapture","pointerId","releasePointerCapture","raycaster","includeInvisible","allIntersections","intersectObject","i","_tempEuler","_alignVector","_zeroVector","_lookAtMatrix","_tempQuaternion2","_identityQuaternion","_dirVector","_tempMatrix","_unitX","_unitY","_unitZ","_v1","_v2","_v3","controls","isTransformControlsRoot","force","console","error","isOrthographicCamera","getWorldDirection","negate","traverse","child","geometry","material","isTransformControlsGizmo","gizmoMaterial","depthTest","depthWrite","fog","toneMapped","transparent","gizmoLineMaterial","matInvisible","clone","opacity","matHelper","matRed","setHex","matGreen","matBlue","matRedTransparent","matGreenTransparent","matBlueTransparent","matWhiteTransparent","matYellowTransparent","matYellow","matGray","arrowGeometry","translate","scaleHandleGeometry","lineGeometry","setAttribute","lineGeometry2","CircleGeometry","radius","arc","PI","rotateY","rotateX","gizmoTranslate","XYZ","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","TranslateHelperGeometry","gizmoRotate","XYZE","E","helperRotate","AXIS","pickerRotate","gizmoScale","pickerScale","helperScale","setupGizmo","gizmoMap","rotation","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","helper","handles","concat","children","handle","factor","bottom","zoom","tan","fov","multiplyScalar","AXIS_HIDE_THRESHOLD","PLANE_HIDE_THRESHOLD","abs","setFromRotationMatrix","lookAt","atan2","multiplyQuaternions","showX","showY","showZ","_opacity","split","some","a","setFromEuler","wireframe","side","isTransformControlsPlane"],"sources":["node_modules/three/examples/jsm/controls/TransformControls.js"],"sourcesContent":["import {\n\tBoxGeometry,\n\tBufferGeometry,\n\tControls,\n\tCylinderGeometry,\n\tDoubleSide,\n\tEuler,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOctahedronGeometry,\n\tPlaneGeometry,\n\tQuaternion,\n\tRaycaster,\n\tSphereGeometry,\n\tTorusGeometry,\n\tVector3\n} from 'three';\n\nconst _raycaster = new Raycaster();\n\nconst _tempVector = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempQuaternion = new Quaternion();\nconst _unit = {\n\tX: new Vector3( 1, 0, 0 ),\n\tY: new Vector3( 0, 1, 0 ),\n\tZ: new Vector3( 0, 0, 1 )\n};\n\n/**\n * Fires if any type of change (object or property change) is performed. Property changes\n * are separate events you can add event listeners to. The event type is \"propertyname-changed\".\n *\n * @event TransformControls#change\n * @type {Object}\n */\nconst _changeEvent = { type: 'change' };\n\n/**\n * Fires if a pointer (mouse/touch) becomes active.\n *\n * @event TransformControls#mouseDown\n * @type {Object}\n */\nconst _mouseDownEvent = { type: 'mouseDown', mode: null };\n\n/**\n * Fires if a pointer (mouse/touch) is no longer active.\n *\n * @event TransformControls#mouseUp\n * @type {Object}\n */\nconst _mouseUpEvent = { type: 'mouseUp', mode: null };\n\n/**\n * Fires if the controlled 3D object is changed.\n *\n * @event TransformControls#objectChange\n * @type {Object}\n */\nconst _objectChangeEvent = { type: 'objectChange' };\n\n/**\n * This class can be used to transform objects in 3D space by adapting a similar interaction model\n * of DCC tools like Blender. Unlike other controls, it is not intended to transform the scene's camera.\n *\n * `TransformControls` expects that its attached 3D object is part of the scene graph.\n *\n * @augments Controls\n * @three_import import { TransformControls } from 'three/addons/controls/TransformControls.js';\n */\nclass TransformControls extends Controls {\n\n\t/**\n\t * Constructs a new controls instance.\n\t *\n\t * @param {Camera} camera - The camera of the rendered scene.\n\t * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n\t */\n\tconstructor( camera, domElement = null ) {\n\n\t\tsuper( undefined, domElement );\n\n\t\tconst root = new TransformControlsRoot( this );\n\t\tthis._root = root;\n\n\t\tconst gizmo = new TransformControlsGizmo();\n\t\tthis._gizmo = gizmo;\n\t\troot.add( gizmo );\n\n\t\tconst plane = new TransformControlsPlane();\n\t\tthis._plane = plane;\n\t\troot.add( plane );\n\n\t\tconst scope = this;\n\n\t\t// Defined getter, setter and store for a property\n\t\tfunction defineProperty( propName, defaultValue ) {\n\n\t\t\tlet propValue = defaultValue;\n\n\t\t\tObject.defineProperty( scope, propName, {\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\t\tpropValue = value;\n\t\t\t\t\t\tplane[ propName ] = value;\n\t\t\t\t\t\tgizmo[ propName ] = value;\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: propName + '-changed', value: value } );\n\t\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tscope[ propName ] = defaultValue;\n\t\t\tplane[ propName ] = defaultValue;\n\t\t\tgizmo[ propName ] = defaultValue;\n\n\t\t}\n\n\t\t// Define properties with getters/setter\n\t\t// Setting the defined property will automatically trigger change event\n\t\t// Defined properties are passed down to gizmo and plane\n\n\t\t/**\n\t\t * The camera of the rendered scene.\n\t\t *\n\t\t * @name TransformControls#camera\n\t\t * @type {Camera}\n\t\t */\n\t\tdefineProperty( 'camera', camera );\n\t\tdefineProperty( 'object', undefined );\n\t\tdefineProperty( 'enabled', true );\n\n\t\t/**\n\t\t * The current transformation axis.\n\t\t *\n\t\t * @name TransformControls#axis\n\t\t * @type {string}\n\t\t */\n\t\tdefineProperty( 'axis', null );\n\n\t\t/**\n\t\t * The current transformation axis.\n\t\t *\n\t\t * @name TransformControls#mode\n\t\t * @type {('translate'|'rotate'|'scale')}\n\t\t * @default 'translate'\n\t\t */\n\t\tdefineProperty( 'mode', 'translate' );\n\n\t\t/**\n\t\t * By default, 3D objects are continuously translated. If you set this property to a numeric\n\t\t * value (world units), you can define in which steps the 3D object should be translated.\n\t\t *\n\t\t * @name TransformControls#translationSnap\n\t\t * @type {?number}\n\t\t * @default null\n\t\t */\n\t\tdefineProperty( 'translationSnap', null );\n\n\t\t/**\n\t\t * By default, 3D objects are continuously rotated. If you set this property to a numeric\n\t\t * value (radians), you can define in which steps the 3D object should be rotated.\n\t\t *\n\t\t * @name TransformControls#rotationSnap\n\t\t * @type {?number}\n\t\t * @default null\n\t\t */\n\t\tdefineProperty( 'rotationSnap', null );\n\n\t\t/**\n\t\t * By default, 3D objects are continuously scaled. If you set this property to a numeric\n\t\t * value, you can define in which steps the 3D object should be scaled.\n\t\t *\n\t\t * @name TransformControls#scaleSnap\n\t\t * @type {?number}\n\t\t * @default null\n\t\t */\n\t\tdefineProperty( 'scaleSnap', null );\n\n\t\t/**\n\t\t * Defines in which coordinate space transformations should be performed.\n\t\t *\n\t\t * @name TransformControls#space\n\t\t * @type {('world'|'local')}\n\t\t * @default 'world'\n\t\t */\n\t\tdefineProperty( 'space', 'world' );\n\n\t\t/**\n\t\t * The size of the helper UI (axes/planes).\n\t\t *\n\t\t * @name TransformControls#size\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tdefineProperty( 'size', 1 );\n\n\t\t/**\n\t\t * Whether dragging is currently performed or not.\n\t\t *\n\t\t * @name TransformControls#dragging\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default false\n\t\t */\n\t\tdefineProperty( 'dragging', false );\n\n\t\t/**\n\t\t * Whether the x-axis helper should be visible or not.\n\t\t *\n\t\t * @name TransformControls#showX\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tdefineProperty( 'showX', true );\n\n\t\t/**\n\t\t * Whether the y-axis helper should be visible or not.\n\t\t *\n\t\t * @name TransformControls#showY\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tdefineProperty( 'showY', true );\n\n\t\t/**\n\t\t * Whether the z-axis helper should be visible or not.\n\t\t *\n\t\t * @name TransformControls#showZ\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tdefineProperty( 'showZ', true );\n\n\t\t/**\n\t\t * The minimum allowed X position during translation.\n\t\t *\n\t\t * @name TransformControls#minX\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tdefineProperty( 'minX', - Infinity );\n\n\t\t/**\n\t\t * The maximum allowed X position during translation.\n\t\t *\n\t\t * @name TransformControls#maxX\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tdefineProperty( 'maxX', Infinity );\n\n\t\t/**\n\t\t * The minimum allowed y position during translation.\n\t\t *\n\t\t * @name TransformControls#minY\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tdefineProperty( 'minY', - Infinity );\n\n\t\t/**\n\t\t * The maximum allowed Y position during translation.\n\t\t *\n\t\t * @name TransformControls#maxY\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tdefineProperty( 'maxY', Infinity );\n\n\t\t/**\n\t\t * The minimum allowed z position during translation.\n\t\t *\n\t\t * @name TransformControls#minZ\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tdefineProperty( 'minZ', - Infinity );\n\n\t\t/**\n\t\t * The maximum allowed Z position during translation.\n\t\t *\n\t\t * @name TransformControls#maxZ\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tdefineProperty( 'maxZ', Infinity );\n\n\t\t// Reusable utility variables\n\n\t\tconst worldPosition = new Vector3();\n\t\tconst worldPositionStart = new Vector3();\n\t\tconst worldQuaternion = new Quaternion();\n\t\tconst worldQuaternionStart = new Quaternion();\n\t\tconst cameraPosition = new Vector3();\n\t\tconst cameraQuaternion = new Quaternion();\n\t\tconst pointStart = new Vector3();\n\t\tconst pointEnd = new Vector3();\n\t\tconst rotationAxis = new Vector3();\n\t\tconst rotationAngle = 0;\n\t\tconst eye = new Vector3();\n\n\t\t// TODO: remove properties unused in plane and gizmo\n\n\t\tdefineProperty( 'worldPosition', worldPosition );\n\t\tdefineProperty( 'worldPositionStart', worldPositionStart );\n\t\tdefineProperty( 'worldQuaternion', worldQuaternion );\n\t\tdefineProperty( 'worldQuaternionStart', worldQuaternionStart );\n\t\tdefineProperty( 'cameraPosition', cameraPosition );\n\t\tdefineProperty( 'cameraQuaternion', cameraQuaternion );\n\t\tdefineProperty( 'pointStart', pointStart );\n\t\tdefineProperty( 'pointEnd', pointEnd );\n\t\tdefineProperty( 'rotationAxis', rotationAxis );\n\t\tdefineProperty( 'rotationAngle', rotationAngle );\n\t\tdefineProperty( 'eye', eye );\n\n\t\tthis._offset = new Vector3();\n\t\tthis._startNorm = new Vector3();\n\t\tthis._endNorm = new Vector3();\n\t\tthis._cameraScale = new Vector3();\n\n\t\tthis._parentPosition = new Vector3();\n\t\tthis._parentQuaternion = new Quaternion();\n\t\tthis._parentQuaternionInv = new Quaternion();\n\t\tthis._parentScale = new Vector3();\n\n\t\tthis._worldScaleStart = new Vector3();\n\t\tthis._worldQuaternionInv = new Quaternion();\n\t\tthis._worldScale = new Vector3();\n\n\t\tthis._positionStart = new Vector3();\n\t\tthis._quaternionStart = new Quaternion();\n\t\tthis._scaleStart = new Vector3();\n\n\t\tthis._getPointer = getPointer.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerHover = onPointerHover.bind( this );\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\n\t\tif ( domElement !== null ) {\n\n\t\t\tthis.connect( domElement );\n\n\t\t}\n\n\t}\n\n\tconnect( element ) {\n\n\t\tsuper.connect( element );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\t/**\n\t * Returns the visual representation of the controls. Add the helper to your scene to\n\t * visually transform the attached  3D object.\n\t *\n\t * @return {TransformControlsRoot} The helper.\n\t */\n\tgetHelper() {\n\n\t\treturn this._root;\n\n\t}\n\n\tpointerHover( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true ) return;\n\n\t\tif ( pointer !== null ) _raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst intersect = intersectObjectWithRay( this._gizmo.picker[ this.mode ], _raycaster );\n\n\t\tif ( intersect ) {\n\n\t\t\tthis.axis = intersect.object.name;\n\n\t\t} else {\n\n\t\t\tthis.axis = null;\n\n\t\t}\n\n\t}\n\n\tpointerDown( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || ( pointer != null && pointer.button !== 0 ) ) return;\n\n\t\tif ( this.axis !== null ) {\n\n\t\t\tif ( pointer !== null ) _raycaster.setFromCamera( pointer, this.camera );\n\n\t\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\t\tif ( planeIntersect ) {\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\tthis._positionStart.copy( this.object.position );\n\t\t\t\tthis._quaternionStart.copy( this.object.quaternion );\n\t\t\t\tthis._scaleStart.copy( this.object.scale );\n\n\t\t\t\tthis.object.matrixWorld.decompose( this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart );\n\n\t\t\t\tthis.pointStart.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\t\t}\n\n\t\t\tthis.dragging = true;\n\t\t\t_mouseDownEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseDownEvent );\n\n\t\t}\n\n\t}\n\n\tpointerMove( pointer ) {\n\n\t\tconst axis = this.axis;\n\t\tconst mode = this.mode;\n\t\tconst object = this.object;\n\t\tlet space = this.space;\n\n\t\tif ( mode === 'scale' ) {\n\n\t\t\tspace = 'local';\n\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\tspace = 'world';\n\n\t\t}\n\n\t\tif ( object === undefined || axis === null || this.dragging === false || ( pointer !== null && pointer.button !== - 1 ) ) return;\n\n\t\tif ( pointer !== null ) _raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\tif ( ! planeIntersect ) return;\n\n\t\tthis.pointEnd.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\tif ( mode === 'translate' ) {\n\n\t\t\t// Apply translate\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t}\n\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) this._offset.x = 0;\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) this._offset.y = 0;\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) this._offset.z = 0;\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._quaternionStart ).divide( this._parentScale );\n\n\t\t\t} else {\n\n\t\t\t\tthis._offset.applyQuaternion( this._parentQuaternionInv ).divide( this._parentScale );\n\n\t\t\t}\n\n\t\t\tobject.position.copy( this._offset ).add( this._positionStart );\n\n\t\t\t// Apply translation snap\n\n\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( this._quaternionStart ).invert() );\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.position.applyQuaternion( this._quaternionStart );\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobject.position.x = Math.max( this.minX, Math.min( this.maxX, object.position.x ) );\n\t\t\tobject.position.y = Math.max( this.minY, Math.min( this.maxY, object.position.y ) );\n\t\t\tobject.position.z = Math.max( this.minZ, Math.min( this.maxZ, object.position.z ) );\n\n\t\t} else if ( mode === 'scale' ) {\n\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\tlet d = this.pointEnd.length() / this.pointStart.length();\n\n\t\t\t\tif ( this.pointEnd.dot( this.pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t} else {\n\n\t\t\t\t_tempVector.copy( this.pointStart );\n\t\t\t\t_tempVector2.copy( this.pointEnd );\n\n\t\t\t\t_tempVector.applyQuaternion( this._worldQuaternionInv );\n\t\t\t\t_tempVector2.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply scale\n\n\t\t\tobject.scale.copy( this._scaleStart ).multiply( _tempVector2 );\n\n\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tconst ROTATION_SPEED = 20 / this.worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\tlet _inPlaneRotation = false;\n\n\t\t\tif ( axis === 'XYZE' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this._offset ).cross( this.eye ).normalize();\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.copy( this.rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\tthis.rotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\t_tempVector.cross( this.eye );\n\n\t\t\t\t// When _tempVector is 0 after cross with this.eye the vectors are parallel and should use in-plane rotation logic.\n\t\t\t\tif ( _tempVector.length() === 0 ) {\n\n\t\t\t\t\t_inPlaneRotation = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.normalize() ) * ROTATION_SPEED;\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tif ( axis === 'E' || _inPlaneRotation ) {\n\n\t\t\t\tthis.rotationAxis.copy( this.eye );\n\t\t\t\tthis.rotationAngle = this.pointEnd.angleTo( this.pointStart );\n\n\t\t\t\tthis._startNorm.copy( this.pointStart ).normalize();\n\t\t\t\tthis._endNorm.copy( this.pointEnd ).normalize();\n\n\t\t\t\tthis.rotationAngle *= ( this._endNorm.cross( this._startNorm ).dot( this.eye ) < 0 ? 1 : - 1 );\n\n\t\t\t}\n\n\t\t\t// Apply rotation snap\n\n\t\t\tif ( this.rotationSnap ) this.rotationAngle = Math.round( this.rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\t// Apply rotate\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\tobject.quaternion.copy( this._quaternionStart );\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\tthis.rotationAxis.applyQuaternion( this._parentQuaternionInv );\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) );\n\t\t\t\tobject.quaternion.multiply( this._quaternionStart ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( _changeEvent );\n\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t}\n\n\tpointerUp( pointer ) {\n\n\t\tif ( pointer !== null && pointer.button !== 0 ) return;\n\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\t_mouseUpEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseUpEvent );\n\n\t\t}\n\n\t\tthis.dragging = false;\n\t\tthis.axis = null;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t\tthis._root.dispose();\n\n\t}\n\n\t/**\n\t * Sets the 3D object that should be transformed and ensures the controls UI is visible.\n\t *\n\t * @param {Object3D} object -  The 3D object that should be transformed.\n\t * @return {TransformControls} A reference to this controls.\n\t */\n\tattach( object ) {\n\n\t\tthis.object = object;\n\t\tthis._root.visible = true;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Removes the current 3D object from the controls and makes the helper UI invisible.\n\t *\n\t * @return {TransformControls} A reference to this controls.\n\t */\n\tdetach() {\n\n\t\tthis.object = undefined;\n\t\tthis.axis = null;\n\n\t\tthis._root.visible = false;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Resets the object's position, rotation and scale to when the current transform began.\n\t */\n\treset() {\n\n\t\tif ( ! this.enabled ) return;\n\n\t\tif ( this.dragging ) {\n\n\t\t\tthis.object.position.copy( this._positionStart );\n\t\t\tthis.object.quaternion.copy( this._quaternionStart );\n\t\t\tthis.object.scale.copy( this._scaleStart );\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\t\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t\t\tthis.pointStart.copy( this.pointEnd );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the raycaster that is used for user interaction. This object is shared between all\n\t * instances of `TransformControls`.\n\t *\n\t * @returns {Raycaster} The internal raycaster.\n\t */\n\tgetRaycaster() {\n\n\t\treturn _raycaster;\n\n\t}\n\n\t/**\n\t * Returns the transformation mode.\n\t *\n\t * @returns {'translate'|'rotate'|'scale'} The transformation mode.\n\t */\n\tgetMode() {\n\n\t\treturn this.mode;\n\n\t}\n\n\t/**\n\t * Sets the given transformation mode.\n\t *\n\t * @param {'translate'|'rotate'|'scale'} mode - The transformation mode to set.\n\t */\n\tsetMode( mode ) {\n\n\t\tthis.mode = mode;\n\n\t}\n\n\t/**\n\t * Sets the translation snap.\n\t *\n\t * @param {?number} translationSnap - The translation snap to set.\n\t */\n\tsetTranslationSnap( translationSnap ) {\n\n\t\tthis.translationSnap = translationSnap;\n\n\t}\n\n\t/**\n\t * Sets the rotation snap.\n\t *\n\t * @param {?number} rotationSnap - The rotation snap to set.\n\t */\n\tsetRotationSnap( rotationSnap ) {\n\n\t\tthis.rotationSnap = rotationSnap;\n\n\t}\n\n\t/**\n\t * Sets the scale snap.\n\t *\n\t * @param {?number} scaleSnap - The scale snap to set.\n\t */\n\tsetScaleSnap( scaleSnap ) {\n\n\t\tthis.scaleSnap = scaleSnap;\n\n\t}\n\n\t/**\n\t * Sets the size of the helper UI.\n\t *\n\t * @param {number} size - The size to set.\n\t */\n\tsetSize( size ) {\n\n\t\tthis.size = size;\n\n\t}\n\n\t/**\n\t * Sets the coordinate space in which transformations are applied.\n\t *\n\t * @param {'world'|'local'} space - The space to set.\n\t */\n\tsetSpace( space ) {\n\n\t\tthis.space = space;\n\n\t}\n\n\t/**\n\t * Sets the colors of the control's gizmo.\n\t *\n\t * @param {number|Color|string} xAxis - The x-axis color.\n\t * @param {number|Color|string} yAxis - The y-axis color.\n\t * @param {number|Color|string} zAxis - The z-axis color.\n\t * @param {number|Color|string} active - The color for active elements.\n\t */\n\tsetColors( xAxis, yAxis, zAxis, active ) {\n\n\t\tconst materialLib = this._gizmo.materialLib;\n\n\t\tmaterialLib.xAxis.color.set( xAxis );\n\t\tmaterialLib.yAxis.color.set( yAxis );\n\t\tmaterialLib.zAxis.color.set( zAxis );\n\t\tmaterialLib.active.color.set( active );\n\t\tmaterialLib.xAxisTransparent.color.set( xAxis );\n\t\tmaterialLib.yAxisTransparent.color.set( yAxis );\n\t\tmaterialLib.zAxisTransparent.color.set( zAxis );\n\t\tmaterialLib.activeTransparent.color.set( active );\n\n\t\t// update color caches\n\n\t\tif ( materialLib.xAxis._color ) materialLib.xAxis._color.set( xAxis );\n\t\tif ( materialLib.yAxis._color ) materialLib.yAxis._color.set( yAxis );\n\t\tif ( materialLib.zAxis._color ) materialLib.zAxis._color.set( zAxis );\n\t\tif ( materialLib.active._color ) materialLib.active._color.set( active );\n\t\tif ( materialLib.xAxisTransparent._color ) materialLib.xAxisTransparent._color.set( xAxis );\n\t\tif ( materialLib.yAxisTransparent._color ) materialLib.yAxisTransparent._color.set( yAxis );\n\t\tif ( materialLib.zAxisTransparent._color ) materialLib.zAxisTransparent._color.set( zAxis );\n\t\tif ( materialLib.activeTransparent._color ) materialLib.activeTransparent._color.set( active );\n\n\t}\n\n}\n\n// mouse / touch event handlers\n\nfunction getPointer( event ) {\n\n\tif ( this.domElement.ownerDocument.pointerLockElement ) {\n\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tbutton: event.button\n\t\t};\n\n\t} else {\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\n\t\treturn {\n\t\t\tx: ( event.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\ty: - ( event.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\tbutton: event.button\n\t\t};\n\n\t}\n\n}\n\nfunction onPointerHover( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tswitch ( event.pointerType ) {\n\n\t\tcase 'mouse':\n\t\tcase 'pen':\n\t\t\tthis.pointerHover( this._getPointer( event ) );\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tif ( ! document.pointerLockElement ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t}\n\n\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerHover( this._getPointer( event ) );\n\tthis.pointerDown( this._getPointer( event ) );\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.pointerMove( this._getPointer( event ) );\n\n}\n\nfunction onPointerUp( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerUp( this._getPointer( event ) );\n\n}\n\nfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n\tconst allIntersections = raycaster.intersectObject( object, true );\n\n\tfor ( let i = 0; i < allIntersections.length; i ++ ) {\n\n\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n\t\t\treturn allIntersections[ i ];\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\n//\n\n// Reusable utility variables\n\nconst _tempEuler = new Euler();\nconst _alignVector = new Vector3( 0, 1, 0 );\nconst _zeroVector = new Vector3( 0, 0, 0 );\nconst _lookAtMatrix = new Matrix4();\nconst _tempQuaternion2 = new Quaternion();\nconst _identityQuaternion = new Quaternion();\nconst _dirVector = new Vector3();\nconst _tempMatrix = new Matrix4();\n\nconst _unitX = new Vector3( 1, 0, 0 );\nconst _unitY = new Vector3( 0, 1, 0 );\nconst _unitZ = new Vector3( 0, 0, 1 );\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _v3 = new Vector3();\n\nclass TransformControlsRoot extends Object3D {\n\n\tconstructor( controls ) {\n\n\t\tsuper();\n\n\t\tthis.isTransformControlsRoot = true;\n\n\t\tthis.controls = controls;\n\t\tthis.visible = false;\n\n\t}\n\n\t// updateMatrixWorld updates key transformation variables\n\tupdateMatrixWorld( force ) {\n\n\t\tconst controls = this.controls;\n\n\t\tif ( controls.object !== undefined ) {\n\n\t\t\tcontrols.object.updateMatrixWorld();\n\n\t\t\tif ( controls.object.parent === null ) {\n\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t} else {\n\n\t\t\t\tcontrols.object.parent.matrixWorld.decompose( controls._parentPosition, controls._parentQuaternion, controls._parentScale );\n\n\t\t\t}\n\n\t\t\tcontrols.object.matrixWorld.decompose( controls.worldPosition, controls.worldQuaternion, controls._worldScale );\n\n\t\t\tcontrols._parentQuaternionInv.copy( controls._parentQuaternion ).invert();\n\t\t\tcontrols._worldQuaternionInv.copy( controls.worldQuaternion ).invert();\n\n\t\t}\n\n\t\tcontrols.camera.updateMatrixWorld();\n\t\tcontrols.camera.matrixWorld.decompose( controls.cameraPosition, controls.cameraQuaternion, controls._cameraScale );\n\n\t\tif ( controls.camera.isOrthographicCamera ) {\n\n\t\t\tcontrols.camera.getWorldDirection( controls.eye ).negate();\n\n\t\t} else {\n\n\t\t\tcontrols.eye.copy( controls.cameraPosition ).sub( controls.worldPosition ).normalize();\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t} );\n\n\t}\n\n}\n\nclass TransformControlsGizmo extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isTransformControlsGizmo = true;\n\n\t\tthis.type = 'TransformControlsGizmo';\n\n\t\t// shared materials\n\n\t\tconst gizmoMaterial = new MeshBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tconst gizmoLineMaterial = new LineBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\t// Make unique material for each axis/color\n\n\t\tconst matInvisible = gizmoMaterial.clone();\n\t\tmatInvisible.opacity = 0.15;\n\n\t\tconst matHelper = gizmoLineMaterial.clone();\n\t\tmatHelper.opacity = 0.5;\n\n\t\tconst matRed = gizmoMaterial.clone();\n\t\tmatRed.color.setHex( 0xff0000 );\n\n\t\tconst matGreen = gizmoMaterial.clone();\n\t\tmatGreen.color.setHex( 0x00ff00 );\n\n\t\tconst matBlue = gizmoMaterial.clone();\n\t\tmatBlue.color.setHex( 0x0000ff );\n\n\t\tconst matRedTransparent = gizmoMaterial.clone();\n\t\tmatRedTransparent.color.setHex( 0xff0000 );\n\t\tmatRedTransparent.opacity = 0.5;\n\n\t\tconst matGreenTransparent = gizmoMaterial.clone();\n\t\tmatGreenTransparent.color.setHex( 0x00ff00 );\n\t\tmatGreenTransparent.opacity = 0.5;\n\n\t\tconst matBlueTransparent = gizmoMaterial.clone();\n\t\tmatBlueTransparent.color.setHex( 0x0000ff );\n\t\tmatBlueTransparent.opacity = 0.5;\n\n\t\tconst matWhiteTransparent = gizmoMaterial.clone();\n\t\tmatWhiteTransparent.opacity = 0.25;\n\n\t\tconst matYellowTransparent = gizmoMaterial.clone();\n\t\tmatYellowTransparent.color.setHex( 0xffff00 );\n\t\tmatYellowTransparent.opacity = 0.25;\n\n\t\tconst matYellow = gizmoMaterial.clone();\n\t\tmatYellow.color.setHex( 0xffff00 );\n\n\t\tconst matGray = gizmoMaterial.clone();\n\t\tmatGray.color.setHex( 0x787878 );\n\n\t\t// materials in the below property are configurable via setColors()\n\n\t\tthis.materialLib = {\n\t\t\txAxis: matRed,\n\t\t\tyAxis: matGreen,\n\t\t\tzAxis: matBlue,\n\t\t\tactive: matYellow,\n\t\t\txAxisTransparent: matRedTransparent,\n\t\t\tyAxisTransparent: matGreenTransparent,\n\t\t\tzAxisTransparent: matBlueTransparent,\n\t\t\tactiveTransparent: matYellowTransparent\n\t\t};\n\n\t\t// reusable geometry\n\n\t\tconst arrowGeometry = new CylinderGeometry( 0, 0.04, 0.1, 12 );\n\t\tarrowGeometry.translate( 0, 0.05, 0 );\n\n\t\tconst scaleHandleGeometry = new BoxGeometry( 0.08, 0.08, 0.08 );\n\t\tscaleHandleGeometry.translate( 0, 0.04, 0 );\n\n\t\tconst lineGeometry = new BufferGeometry();\n\t\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\t\tconst lineGeometry2 = new CylinderGeometry( 0.0075, 0.0075, 0.5, 3 );\n\t\tlineGeometry2.translate( 0, 0.25, 0 );\n\n\t\tfunction CircleGeometry( radius, arc ) {\n\n\t\t\tconst geometry = new TorusGeometry( radius, 0.0075, 3, 64, arc * Math.PI * 2 );\n\t\t\tgeometry.rotateY( Math.PI / 2 );\n\t\t\tgeometry.rotateX( Math.PI / 2 );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\t\tfunction TranslateHelperGeometry() {\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\t\tconst gizmoTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, - 0.5, 0 ], [ Math.PI, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), null, [ Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.1, 0 ), matWhiteTransparent ), [ 0, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperTranslate = {\n\t\t\tSTART: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tEND: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tDELTA: [\n\t\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 1 ), matGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matRed ) ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matGreen ), null, [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matBlue ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.75, 1 ), matYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperRotate = {\n\t\t\tAXIS: [\n\t\t\t\t[ new Line( lineGeometry, matHelper ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( new SphereGeometry( 0.25, 10, 8 ), matInvisible ) ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.75, 0.1, 2, 24 ), matInvisible ) ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, - 0.5, 0 ], [ 0, 0, Math.PI ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.1, 0.1, 0.1 ), matWhiteTransparent ) ],\n\t\t\t]\n\t\t};\n\n\t\tconst pickerScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]],\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 0 ]],\n\t\t\t]\n\t\t};\n\n\t\tconst helperScale = {\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\t\tfunction setupGizmo( gizmoMap ) {\n\n\t\t\tconst gizmo = new Object3D();\n\n\t\t\tfor ( const name in gizmoMap ) {\n\n\t\t\t\tfor ( let i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\t\tconst object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\t\tconst position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\t\tconst rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\t\tconst scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\t\tconst tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\t\tobject.name = name;\n\t\t\t\t\tobject.tag = tag;\n\n\t\t\t\t\tif ( position ) {\n\n\t\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scale ) {\n\n\t\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tconst tempGeometry = object.geometry.clone();\n\t\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\t\tgizmo.add( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn gizmo;\n\n\t\t}\n\n\t\t// Gizmo creation\n\n\t\tthis.gizmo = {};\n\t\tthis.picker = {};\n\t\tthis.helper = {};\n\n\t\tthis.add( this.gizmo[ 'translate' ] = setupGizmo( gizmoTranslate ) );\n\t\tthis.add( this.gizmo[ 'rotate' ] = setupGizmo( gizmoRotate ) );\n\t\tthis.add( this.gizmo[ 'scale' ] = setupGizmo( gizmoScale ) );\n\t\tthis.add( this.picker[ 'translate' ] = setupGizmo( pickerTranslate ) );\n\t\tthis.add( this.picker[ 'rotate' ] = setupGizmo( pickerRotate ) );\n\t\tthis.add( this.picker[ 'scale' ] = setupGizmo( pickerScale ) );\n\t\tthis.add( this.helper[ 'translate' ] = setupGizmo( helperTranslate ) );\n\t\tthis.add( this.helper[ 'rotate' ] = setupGizmo( helperRotate ) );\n\t\tthis.add( this.helper[ 'scale' ] = setupGizmo( helperScale ) );\n\n\t\t// Pickers should be hidden always\n\n\t\tthis.picker[ 'translate' ].visible = false;\n\t\tthis.picker[ 'rotate' ].visible = false;\n\t\tthis.picker[ 'scale' ].visible = false;\n\n\t}\n\n\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst space = ( this.mode === 'scale' ) ? 'local' : this.space; // scale always oriented to local rotation\n\n\t\tconst quaternion = ( space === 'local' ) ? this.worldQuaternion : _identityQuaternion;\n\n\t\t// Show only gizmos for current transform mode\n\n\t\tthis.gizmo[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.gizmo[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.gizmo[ 'scale' ].visible = this.mode === 'scale';\n\n\t\tthis.helper[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.helper[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.helper[ 'scale' ].visible = this.mode === 'scale';\n\n\n\t\tlet handles = [];\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\tfor ( let i = 0; i < handles.length; i ++ ) {\n\n\t\t\tconst handle = handles[ i ];\n\n\t\t\t// hide aligned to camera\n\n\t\t\thandle.visible = true;\n\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\tlet factor;\n\n\t\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n\t\t\t} else {\n\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n\t\t\t}\n\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 4 );\n\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\thandle.visible = false;\n\n\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\t_alignVector.copy( this.rotationAxis );\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( _zeroVector, _alignVector, _unitY ) );\n\t\t\t\t\t\thandle.quaternion.multiply( _tempQuaternion );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\t_tempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\n\t\t\t\t\thandle.scale.copy( _tempVector );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Align handles to current local or world rotation\n\n\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\tconst AXIS_HIDE_THRESHOLD = 0.99;\n\t\t\t\tconst PLANE_HIDE_THRESHOLD = 0.2;\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_THRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\t_tempQuaternion2.copy( quaternion );\n\t\t\t\t_alignVector.copy( this.eye ).applyQuaternion( _tempQuaternion.copy( quaternion ).invert() );\n\n\t\t\t\tif ( handle.name.search( 'E' ) !== - 1 ) {\n\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( this.eye, _zeroVector, _unitY ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitX, Math.atan2( - _alignVector.y, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitY, Math.atan2( _alignVector.x, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitZ, Math.atan2( _alignVector.y, _alignVector.x ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Hide disabled axes\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'X' ) === - 1 || this.showX );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Y' ) === - 1 || this.showY );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Z' ) === - 1 || this.showZ );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'E' ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t// highlight selected axis\n\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\n\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\tif ( this.enabled && this.axis ) {\n\n\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\thandle.material.color.copy( this.materialLib.active.color );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t} ) ) {\n\n\t\t\t\t\thandle.material.color.copy( this.materialLib.active.color );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n//\n\nclass TransformControlsPlane extends Mesh {\n\n\tconstructor() {\n\n\t\tsuper(\n\t\t\tnew PlaneGeometry( 100000, 100000, 2, 2 ),\n\t\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\n\t\t);\n\n\t\tthis.isTransformControlsPlane = true;\n\n\t\tthis.type = 'TransformControlsPlane';\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet space = this.space;\n\n\t\tthis.position.copy( this.worldPosition );\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\t_v1.copy( _unitX ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v2.copy( _unitY ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v3.copy( _unitZ ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\n\t\t// Align the plane for current transform mode, axis and space.\n\n\t\t_alignVector.copy( _v2 );\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v1 );\n\t\t\t\t\t\t_dirVector.copy( _v1 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v2 );\n\t\t\t\t\t\t_dirVector.copy( _v2 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v3 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\t_dirVector.copy( _v3 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\t_dirVector.copy( _v1 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\t_alignVector.copy( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v2 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\t_dirVector.set( 0, 0, 0 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\tdefault:\n\t\t\t\t// special case for rotate\n\t\t\t\t_dirVector.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( _dirVector.length() === 0 ) {\n\n\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t} else {\n\n\t\t\t_tempMatrix.lookAt( _tempVector.set( 0, 0, 0 ), _dirVector, _alignVector );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _tempMatrix );\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"],"mappings":"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","ignoreList":[]}