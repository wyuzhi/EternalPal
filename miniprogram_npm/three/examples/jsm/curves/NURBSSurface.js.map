{"version":3,"file":"node_modules/three/examples/jsm/curves/NURBSSurface.js","names":["Vector4","NURBSUtils","NURBSSurface","constructor","degree1","degree2","knots1","knots2","controlPoints","this","len1","length","len2","i","j","point","x","y","z","w","getPoint","t1","t2","target","u","v","calcSurfacePoint"],"sources":["node_modules/three/examples/jsm/curves/NURBSSurface.js"],"sourcesContent":["import {\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * This class represents a NURBS surface.\n *\n * Implementation is based on `(x, y [, z=0 [, w=1]])` control points with `w=weight`.\n *\n * @three_import import { NURBSSurface } from 'three/addons/curves/NURBSSurface.js';\n */\nclass NURBSSurface {\n\n\t/**\n\t * Constructs a new NURBS surface.\n\t *\n\t * @param {number} degree1 - The first NURBS degree.\n\t * @param {number} degree2 - The second NURBS degree.\n\t * @param {Array<number>} knots1 - The first knots as a flat array of numbers.\n\t * @param {Array<number>} knots2 - The second knots as a flat array of numbers.\n\t * @param {Array<Array<Vector2|Vector3|Vector4>>} controlPoints - An array^2 holding control points.\n\t */\n\tconstructor( degree1, degree2, knots1, knots2, controlPoints ) {\n\n\t\t/**\n\t\t * The first NURBS degree.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.degree1 = degree1;\n\n\t\t/**\n\t\t * The second NURBS degree.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.degree2 = degree2;\n\n\t\t/**\n\t\t * The first knots as a flat array of numbers.\n\t\t *\n\t\t * @type {Array<number>}\n\t\t */\n\t\tthis.knots1 = knots1;\n\n\t\t/**\n\t\t * The second knots as a flat array of numbers.\n\t\t *\n\t\t * @type {Array<number>}\n\t\t */\n\t\tthis.knots2 = knots2;\n\n\t\t/**\n\t\t *  An array holding arrays of control points.\n\t\t *\n\t\t * @type {Array<Array<Vector2|Vector3|Vector4>>}\n\t\t */\n\t\tthis.controlPoints = [];\n\n\t\tconst len1 = knots1.length - degree1 - 1;\n\t\tconst len2 = knots2.length - degree2 - 1;\n\n\t\t// ensure Vector4 for control points\n\t\tfor ( let i = 0; i < len1; ++ i ) {\n\n\t\t\tthis.controlPoints[ i ] = [];\n\n\t\t\tfor ( let j = 0; j < len2; ++ j ) {\n\n\t\t\t\tconst point = controlPoints[ i ][ j ];\n\t\t\t\tthis.controlPoints[ i ][ j ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * This method returns a vector in 3D space for the given interpolation factor. This vector lies on the NURBS surface.\n\t *\n\t * @param {number} t1 - The first interpolation factor representing the `u` position on the surface. Must be in the range `[0,1]`.\n\t * @param {number} t2 - The second interpolation factor representing the `v` position on the surface. Must be in the range `[0,1]`.\n\t * @param {Vector3} target - The target vector the result is written to.\n\t */\n\tgetPoint( t1, t2, target ) {\n\n\t\tconst u = this.knots1[ 0 ] + t1 * ( this.knots1[ this.knots1.length - 1 ] - this.knots1[ 0 ] ); // linear mapping t1->u\n\t\tconst v = this.knots2[ 0 ] + t2 * ( this.knots2[ this.knots2.length - 1 ] - this.knots2[ 0 ] ); // linear mapping t2->u\n\n\t\tNURBSUtils.calcSurfacePoint( this.degree1, this.degree2, this.knots1, this.knots2, this.controlPoints, u, v, target );\n\n\t}\n\n}\n\nexport { NURBSSurface };\n"],"mappings":"OACCA,YACM,kBACKC,eAAgB,0BAS5B,MAAMC,aAWL,WAAAC,CAAaC,EAASC,EAASC,EAAQC,EAAQC,GAO9CC,KAAKL,QAAUA,EAOfK,KAAKJ,QAAUA,EAOfI,KAAKH,OAASA,EAOdG,KAAKF,OAASA,EAOdE,KAAKD,cAAgB,GAErB,MAAME,EAAOJ,EAAOK,OAASP,EAAU,EACjCQ,EAAOL,EAAOI,OAASN,EAAU,EAGvC,IAAM,IAAIQ,EAAI,EAAGA,EAAIH,IAASG,EAAI,CAEjCJ,KAAKD,cAAeK,GAAM,GAE1B,IAAM,IAAIC,EAAI,EAAGA,EAAIF,IAASE,EAAI,CAEjC,MAAMC,EAAQP,EAAeK,GAAKC,GAClCL,KAAKD,cAAeK,GAAKC,GAAM,IAAId,QAASe,EAAMC,EAAGD,EAAME,EAAGF,EAAMG,EAAGH,EAAMI,EAE9E,CAED,CAED,CASA,QAAAC,CAAUC,EAAIC,EAAIC,GAEjB,MAAMC,EAAIf,KAAKH,OAAQ,GAAMe,GAAOZ,KAAKH,OAAQG,KAAKH,OAAOK,OAAS,GAAMF,KAAKH,OAAQ,IACnFmB,EAAIhB,KAAKF,OAAQ,GAAMe,GAAOb,KAAKF,OAAQE,KAAKF,OAAOI,OAAS,GAAMF,KAAKF,OAAQ,IAEzFN,WAAWyB,iBAAkBjB,KAAKL,QAASK,KAAKJ,QAASI,KAAKH,OAAQG,KAAKF,OAAQE,KAAKD,cAAegB,EAAGC,EAAGF,EAE9G,SAIQrB","ignoreList":[]}