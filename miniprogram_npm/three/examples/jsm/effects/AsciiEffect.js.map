{"version":3,"file":"node_modules/three/examples/jsm/effects/AsciiEffect.js","names":["AsciiEffect","constructor","renderer","charSet","options","fResolution","iScale","bColor","bAlpha","bBlock","bInvert","strResolution","width","height","domElement","document","createElement","style","cursor","oAscii","iWidth","iHeight","oImg","appendChild","this","setSize","w","h","Math","floor","oCanvas","backgroundColor","rows","cells","color","cellSpacing","cellPadding","oStyle","whiteSpace","margin","padding","letterSpacing","fLetterSpacing","fontFamily","strFont","fontSize","fFontSize","lineHeight","fLineHeight","textAlign","textDecoration","initAsciiSize","render","scene","camera","oCtx","clearRect","drawImage","oCanvasImg","oImgData","getImageData","data","strChars","y","x","iOffset","iRed","iGreen","iBlue","iAlpha","iCharIdx","fBrightness","aCharList","length","strThisChar","undefined","innerHTML","asciifyImage","getContext","split","aDefaultCharList","aDefaultColorCharList"],"sources":["node_modules/three/examples/jsm/effects/AsciiEffect.js"],"sourcesContent":["/**\n * A class that creates an ASCII effect.\n *\n * The ASCII generation is based on [jsascii]{@link https://github.com/hassadee/jsascii/blob/master/jsascii.js}.\n *\n * @three_import import { AsciiEffect } from 'three/addons/effects/AsciiEffect.js';\n */\nclass AsciiEffect {\n\n\t/**\n\t * Constructs a new ASCII effect.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {string} [charSet=' .:-=+*#%@'] - The char set.\n\t * @param {AsciiEffect~Options} [options] - The configuration parameter.\n\t */\n\tconstructor( renderer, charSet = ' .:-=+*#%@', options = {} ) {\n\n\t\t// ' .,:;=|iI+hHOE#`$';\n\t\t// darker bolder character set from https://github.com/saw/Canvas-ASCII-Art/\n\t\t// ' .\\'`^\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$'.split('');\n\n\t\t// Some ASCII settings\n\n\t\tconst fResolution = options[ 'resolution' ] || 0.15;\n\t\tconst iScale = options[ 'scale' ] || 1;\n\t\tconst bColor = options[ 'color' ] || false;\n\t\tconst bAlpha = options[ 'alpha' ] || false;\n\t\tconst bBlock = options[ 'block' ] || false;\n\t\tconst bInvert = options[ 'invert' ] || false;\n\t\tconst strResolution = options[ 'strResolution' ] || 'low';\n\n\t\tlet width, height;\n\n\t\tconst domElement = document.createElement( 'div' );\n\t\tdomElement.style.cursor = 'default';\n\n\t\tconst oAscii = document.createElement( 'table' );\n\t\tdomElement.appendChild( oAscii );\n\n\t\tlet iWidth, iHeight;\n\t\tlet oImg;\n\n\t\t/**\n\t\t * Resizes the effect.\n\t\t *\n\t\t * @param {number} w - The width of the effect in logical pixels.\n\t\t * @param {number} h - The height of the effect in logical pixels.\n\t\t */\n\t\tthis.setSize = function ( w, h ) {\n\n\t\t\twidth = w;\n\t\t\theight = h;\n\n\t\t\trenderer.setSize( w, h );\n\n\t\t\tinitAsciiSize();\n\n\t\t};\n\n\t\t/**\n\t\t * When using this effect, this method should be called instead of the\n\t\t * default {@link WebGLRenderer#render}.\n\t\t *\n\t\t * @param {Object3D} scene - The scene to render.\n\t\t * @param {Camera} camera - The camera.\n\t\t */\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\trenderer.render( scene, camera );\n\t\t\tasciifyImage( oAscii );\n\n\t\t};\n\n\t\t/**\n\t\t * The DOM element of the effect. This element must be used instead of the\n\t\t * default {@link WebGLRenderer#domElement}.\n\t\t *\n\t\t * @type {HTMLDivElement}\n\t\t */\n\t\tthis.domElement = domElement;\n\n\n\t\t// Throw in ascii library from https://github.com/hassadee/jsascii/blob/master/jsascii.js (MIT License)\n\n\t\tfunction initAsciiSize() {\n\n\t\t\tiWidth = Math.floor( width * fResolution );\n\t\t\tiHeight = Math.floor( height * fResolution );\n\n\t\t\toCanvas.width = iWidth;\n\t\t\toCanvas.height = iHeight;\n\t\t\t// oCanvas.style.display = \"none\";\n\t\t\t// oCanvas.style.width = iWidth;\n\t\t\t// oCanvas.style.height = iHeight;\n\n\t\t\toImg = renderer.domElement;\n\n\t\t\tif ( oImg.style.backgroundColor ) {\n\n\t\t\t\toAscii.rows[ 0 ].cells[ 0 ].style.backgroundColor = oImg.style.backgroundColor;\n\t\t\t\toAscii.rows[ 0 ].cells[ 0 ].style.color = oImg.style.color;\n\n\t\t\t}\n\n\t\t\toAscii.cellSpacing = '0';\n\t\t\toAscii.cellPadding = '0';\n\n\t\t\tconst oStyle = oAscii.style;\n\t\t\toStyle.whiteSpace = 'pre';\n\t\t\toStyle.margin = '0px';\n\t\t\toStyle.padding = '0px';\n\t\t\toStyle.letterSpacing = fLetterSpacing + 'px';\n\t\t\toStyle.fontFamily = strFont;\n\t\t\toStyle.fontSize = fFontSize + 'px';\n\t\t\toStyle.lineHeight = fLineHeight + 'px';\n\t\t\toStyle.textAlign = 'left';\n\t\t\toStyle.textDecoration = 'none';\n\n\t\t}\n\n\n\t\tconst strFont = 'courier new, monospace';\n\n\t\tconst oCanvasImg = renderer.domElement;\n\n\t\tconst oCanvas = document.createElement( 'canvas' );\n\t\tif ( ! oCanvas.getContext ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst oCtx = oCanvas.getContext( '2d' );\n\t\tif ( ! oCtx.getImageData ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet aCharList;\n\t\tif ( charSet ) {\n\n\t\t\taCharList = ( charSet ).split( '' );\n\n\t\t} else {\n\n\t\t\tconst aDefaultCharList = ( ' .,:;i1tfLCG08@' ).split( '' );\n\t\t\tconst aDefaultColorCharList = ( ' CGO08@' ).split( '' );\n\t\t\taCharList = ( bColor ? aDefaultColorCharList : aDefaultCharList );\n\n\t\t}\n\n\n\t\t// Setup dom\n\n\t\tconst fFontSize = ( 2 / fResolution ) * iScale;\n\t\tconst fLineHeight = ( 2 / fResolution ) * iScale;\n\n\t\t// adjust letter-spacing for all combinations of scale and resolution to get it to fit the image width.\n\n\t\tlet fLetterSpacing = 0;\n\n\t\tif ( strResolution == 'low' ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 : fLetterSpacing = - 1; break;\n\t\t\t\tcase 2 :\n\t\t\t\tcase 3 : fLetterSpacing = - 2.1; break;\n\t\t\t\tcase 4 : fLetterSpacing = - 3.1; break;\n\t\t\t\tcase 5 : fLetterSpacing = - 4.15; break;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( strResolution == 'medium' ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 : fLetterSpacing = 0; break;\n\t\t\t\tcase 2 : fLetterSpacing = - 1; break;\n\t\t\t\tcase 3 : fLetterSpacing = - 1.04; break;\n\t\t\t\tcase 4 :\n\t\t\t\tcase 5 : fLetterSpacing = - 2.1; break;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( strResolution == 'high' ) {\n\n\t\t\tswitch ( iScale ) {\n\n\t\t\t\tcase 1 :\n\t\t\t\tcase 2 : fLetterSpacing = 0; break;\n\t\t\t\tcase 3 :\n\t\t\t\tcase 4 :\n\t\t\t\tcase 5 : fLetterSpacing = - 1; break;\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// can't get a span or div to flow like an img element, but a table works?\n\n\n\t\t// convert img element to ascii\n\n\t\tfunction asciifyImage( oAscii ) {\n\n\t\t\toCtx.clearRect( 0, 0, iWidth, iHeight );\n\t\t\toCtx.drawImage( oCanvasImg, 0, 0, iWidth, iHeight );\n\t\t\tconst oImgData = oCtx.getImageData( 0, 0, iWidth, iHeight ).data;\n\n\t\t\t// Coloring loop starts now\n\t\t\tlet strChars = '';\n\n\t\t\t// console.time('rendering');\n\n\t\t\tfor ( let y = 0; y < iHeight; y += 2 ) {\n\n\t\t\t\tfor ( let x = 0; x < iWidth; x ++ ) {\n\n\t\t\t\t\tconst iOffset = ( y * iWidth + x ) * 4;\n\n\t\t\t\t\tconst iRed = oImgData[ iOffset ];\n\t\t\t\t\tconst iGreen = oImgData[ iOffset + 1 ];\n\t\t\t\t\tconst iBlue = oImgData[ iOffset + 2 ];\n\t\t\t\t\tconst iAlpha = oImgData[ iOffset + 3 ];\n\t\t\t\t\tlet iCharIdx;\n\n\t\t\t\t\tlet fBrightness;\n\n\t\t\t\t\tfBrightness = ( 0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue ) / 255;\n\t\t\t\t\t// fBrightness = (0.3*iRed + 0.5*iGreen + 0.3*iBlue) / 255;\n\n\t\t\t\t\tif ( iAlpha == 0 ) {\n\n\t\t\t\t\t\t// should calculate alpha instead, but quick hack :)\n\t\t\t\t\t\t//fBrightness *= (iAlpha / 255);\n\t\t\t\t\t\tfBrightness = 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tiCharIdx = Math.floor( ( 1 - fBrightness ) * ( aCharList.length - 1 ) );\n\n\t\t\t\t\tif ( bInvert ) {\n\n\t\t\t\t\t\tiCharIdx = aCharList.length - iCharIdx - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// good for debugging\n\t\t\t\t\t//fBrightness = Math.floor(fBrightness * 10);\n\t\t\t\t\t//strThisChar = fBrightness;\n\n\t\t\t\t\tlet strThisChar = aCharList[ iCharIdx ];\n\n\t\t\t\t\tif ( strThisChar === undefined || strThisChar == ' ' )\n\t\t\t\t\t\tstrThisChar = '&nbsp;';\n\n\t\t\t\t\tif ( bColor ) {\n\n\t\t\t\t\t\tstrChars += '<span style=\\''\n\t\t\t\t\t\t\t+ 'color:rgb(' + iRed + ',' + iGreen + ',' + iBlue + ');'\n\t\t\t\t\t\t\t+ ( bBlock ? 'background-color:rgb(' + iRed + ',' + iGreen + ',' + iBlue + ');' : '' )\n\t\t\t\t\t\t\t+ ( bAlpha ? 'opacity:' + ( iAlpha / 255 ) + ';' : '' )\n\t\t\t\t\t\t\t+ '\\'>' + strThisChar + '</span>';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstrChars += strThisChar;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstrChars += '<br/>';\n\n\t\t\t}\n\n\t\t\toAscii.innerHTML = `<tr><td style=\"display:block;width:${width}px;height:${height}px;overflow:hidden\">${strChars}</td></tr>`;\n\n\t\t\t// console.timeEnd('rendering');\n\n\t\t\t// return oAscii;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * This type represents configuration settings of `AsciiEffect`.\n *\n * @typedef {Object} AsciiEffect~Options\n * @property {number} [resolution=0.15] - A higher value leads to more details.\n * @property {number} [scale=1] - The scale of the effect.\n * @property {boolean} [color=false] - Whether colors should be enabled or not. Better quality but slows down rendering.\n * @property {boolean} [alpha=false] - Whether transparency should be enabled or not.\n * @property {boolean} [block=false] - Whether blocked characters should be enabled or not.\n * @property {boolean} [invert=false] - Whether colors should be inverted or not.\n * @property {('low'|'medium'|'high')} [strResolution='low'] - The string resolution.\n **/\n\nexport { AsciiEffect };\n"],"mappings":"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","ignoreList":[]}