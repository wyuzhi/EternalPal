import{BackSide,Color,ShaderMaterial,UniformsLib,UniformsUtils}from"three";class OutlineEffect{constructor(e,i={}){this.enabled=!0;const t=void 0!==i.defaultThickness?i.defaultThickness:.003,n=(new Color).fromArray(void 0!==i.defaultColor?i.defaultColor:[0,0,0]),l=void 0!==i.defaultAlpha?i.defaultAlpha:1,a=void 0!==i.defaultKeepAlive&&i.defaultKeepAlive,r={},o={},u={},s={outlineThickness:{value:t},outlineColor:{value:n},outlineAlpha:{value:l}},d=["#include <common>","#include <uv_pars_vertex>","#include <displacementmap_pars_vertex>","#include <fog_pars_vertex>","#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","#include <logdepthbuf_pars_vertex>","#include <clipping_planes_pars_vertex>","uniform float outlineThickness;","vec4 calculateOutline( vec4 pos, vec3 normal, vec4 skinned ) {","\tfloat thickness = outlineThickness;","\tconst float ratio = 1.0;","\tvec4 pos2 = projectionMatrix * modelViewMatrix * vec4( skinned.xyz + normal, 1.0 );","\tvec4 norm = normalize( pos - pos2 );","\treturn pos + norm * thickness * pos.w * ratio;","}","void main() {","\t#include <uv_vertex>","\t#include <beginnormal_vertex>","\t#include <morphnormal_vertex>","\t#include <skinbase_vertex>","\t#include <skinnormal_vertex>","\t#include <begin_vertex>","\t#include <morphtarget_vertex>","\t#include <skinning_vertex>","\t#include <displacementmap_vertex>","\t#include <project_vertex>","\tvec3 outlineNormal = - objectNormal;","\tgl_Position = calculateOutline( gl_Position, outlineNormal, vec4( transformed, 1.0 ) );","\t#include <logdepthbuf_vertex>","\t#include <clipping_planes_vertex>","\t#include <fog_vertex>","}"].join("\n"),c=["#include <common>","#include <fog_pars_fragment>","#include <logdepthbuf_pars_fragment>","#include <clipping_planes_pars_fragment>","uniform vec3 outlineColor;","uniform float outlineAlpha;","void main() {","\t#include <clipping_planes_fragment>","\t#include <logdepthbuf_fragment>","\tgl_FragColor = vec4( outlineColor, outlineAlpha );","\t#include <tonemapping_fragment>","\t#include <colorspace_fragment>","\t#include <fog_fragment>","\t#include <premultiplied_alpha_fragment>","}"].join("\n");function p(e){const i=function(e){let i=r[e.uuid];return void 0===i&&(i={material:new ShaderMaterial({type:"OutlineEffect",uniforms:UniformsUtils.merge([UniformsLib.fog,UniformsLib.displacementmap,s]),vertexShader:d,fragmentShader:c,side:BackSide}),used:!0,keepAlive:a,count:0},r[e.uuid]=i),i.used=!0,i.material}(e);return o[i.uuid]=e,function(e,i){if("invisible"===e.name)return;const t=i.userData.outlineParameters;e.fog=i.fog,e.toneMapped=i.toneMapped,e.premultipliedAlpha=i.premultipliedAlpha,e.displacementMap=i.displacementMap,void 0!==t?(!1===i.visible?e.visible=!1:e.visible=void 0===t.visible||t.visible,e.transparent=void 0!==t.alpha&&t.alpha<1||i.transparent,void 0!==t.keepAlive&&(r[i.uuid].keepAlive=t.keepAlive)):(e.transparent=i.transparent,e.visible=i.visible);!0!==i.wireframe&&!1!==i.depthTest||(e.visible=!1);i.clippingPlanes&&(e.clipping=!0,e.clippingPlanes=i.clippingPlanes,e.clipIntersection=i.clipIntersection,e.clipShadows=i.clipShadows);e.version=i.version}(i,e),i}function m(e){const i=e.geometry,t=void 0!==i&&void 0!==i.attributes.normal;return!0===e.isMesh&&void 0!==e.material&&!0===t}function f(e){if(!1!==m(e)){if(Array.isArray(e.material))for(let i=0,t=e.material.length;i<t;i++)e.material[i]=p(e.material[i]);else e.material=p(e.material);u[e.uuid]=e.onBeforeRender,e.onBeforeRender=h}}function v(e){if(!1!==m(e)){if(Array.isArray(e.material))for(let i=0,t=e.material.length;i<t;i++)e.material[i]=o[e.material[i].uuid];else e.material=o[e.material.uuid];e.onBeforeRender=u[e.uuid]}}function h(e,i,t,n,l){const a=o[l.uuid];void 0!==a&&function(e,i){const t=i.userData.outlineParameters;e.uniforms.outlineAlpha.value=i.opacity,void 0!==t&&(void 0!==t.thickness&&(e.uniforms.outlineThickness.value=t.thickness),void 0!==t.color&&e.uniforms.outlineColor.value.fromArray(t.color),void 0!==t.alpha&&(e.uniforms.outlineAlpha.value=t.alpha));i.displacementMap&&(e.uniforms.displacementMap.value=i.displacementMap,e.uniforms.displacementScale.value=i.displacementScale,e.uniforms.displacementBias.value=i.displacementBias)}(l,a)}this.render=function(i,t){if(!1===this.enabled)return void e.render(i,t);const n=e.autoClear;e.autoClear=this.autoClear,e.render(i,t),e.autoClear=n,this.renderOutline(i,t)},this.renderOutline=function(i,t){const n=e.autoClear,l=i.matrixWorldAutoUpdate,a=i.background,s=e.shadowMap.enabled;i.matrixWorldAutoUpdate=!1,i.background=null,e.autoClear=!1,e.shadowMap.enabled=!1,i.traverse(f),e.render(i,t),i.traverse(v),function(){let e;e=Object.keys(o);for(let i=0,t=e.length;i<t;i++)o[e[i]]=void 0;e=Object.keys(u);for(let i=0,t=e.length;i<t;i++)u[e[i]]=void 0;e=Object.keys(r);for(let i=0,t=e.length;i<t;i++){const t=e[i];!1===r[t].used?(r[t].count++,!1===r[t].keepAlive&&r[t].count>60&&delete r[t]):(r[t].used=!1,r[t].count=0)}}(),i.matrixWorldAutoUpdate=l,i.background=a,e.autoClear=n,e.shadowMap.enabled=s},this.setSize=function(i,t){e.setSize(i,t)}}}export{OutlineEffect};
//# sourceMappingURL=OutlineEffect.js.map