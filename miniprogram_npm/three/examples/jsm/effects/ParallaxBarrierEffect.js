import{LinearFilter,NearestFilter,RGBAFormat,ShaderMaterial,StereoCamera,WebGLRenderTarget}from"three";import{FullScreenQuad}from"../postprocessing/Pass.js";class ParallaxBarrierEffect{constructor(e){const r=new StereoCamera,t={minFilter:LinearFilter,magFilter:NearestFilter,format:RGBAFormat},a=new WebGLRenderTarget(512,512,t),i=new WebGLRenderTarget(512,512,t),n=new ShaderMaterial({uniforms:{mapLeft:{value:a.texture},mapRight:{value:i.texture}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = vec2( uv.x, uv.y );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D mapLeft;","uniform sampler2D mapRight;","varying vec2 vUv;","void main() {","\tvec2 uv = vUv;","\tif ( ( mod( gl_FragCoord.y, 2.0 ) ) > 1.00 ) {","\t\tgl_FragColor = texture2D( mapLeft, uv );","\t} else {","\t\tgl_FragColor = texture2D( mapRight, uv );","\t}","\t#include <tonemapping_fragment>","\t#include <colorspace_fragment>","}"].join("\n")}),o=new FullScreenQuad(n);this.setSize=function(r,t){e.setSize(r,t);const n=e.getPixelRatio();a.setSize(r*n,t*n),i.setSize(r*n,t*n)},this.render=function(t,n){const l=e.getRenderTarget();!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===n.parent&&!0===n.matrixWorldAutoUpdate&&n.updateMatrixWorld(),r.update(n),e.setRenderTarget(a),e.clear(),e.render(t,r.cameraL),e.setRenderTarget(i),e.clear(),e.render(t,r.cameraR),e.setRenderTarget(null),o.render(e),e.setRenderTarget(l)},this.dispose=function(){a.dispose(),i.dispose(),n.dispose(),o.dispose()}}}export{ParallaxBarrierEffect};
//# sourceMappingURL=ParallaxBarrierEffect.js.map