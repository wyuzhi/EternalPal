{"version":3,"file":"node_modules/three/examples/jsm/geometries/ParametricFunctions.js","names":["klein","v","u","target","x","z","Math","PI","cos","sin","y","set","plane","mobius","t","mobius3d","phi"],"sources":["node_modules/three/examples/jsm/geometries/ParametricFunctions.js"],"sourcesContent":["\n/**\n * @module ParametricFunctions\n * @three_import import * as ParametricFunctions from 'three/addons/geometries/ParametricFunctions.js';\n */\n\n/**\n * A parametric function representing the Klein bottle.\n *\n * @param {number} v - The `v` coordinate on the surface in the range `[0,1]`.\n * @param {number} u - The `u` coordinate on the surface in the range `[0,1]`.\n * @param {Vector3} target - The target vector that is used to store the method's result.\n */\nfunction klein( v, u, target ) {\n\n\tu *= Math.PI;\n\tv *= 2 * Math.PI;\n\n\tu = u * 2;\n\tlet x, z;\n\tif ( u < Math.PI ) {\n\n\t\tx = 3 * Math.cos( u ) * ( 1 + Math.sin( u ) ) + ( 2 * ( 1 - Math.cos( u ) / 2 ) ) * Math.cos( u ) * Math.cos( v );\n\t\tz = - 8 * Math.sin( u ) - 2 * ( 1 - Math.cos( u ) / 2 ) * Math.sin( u ) * Math.cos( v );\n\n\t} else {\n\n\t\tx = 3 * Math.cos( u ) * ( 1 + Math.sin( u ) ) + ( 2 * ( 1 - Math.cos( u ) / 2 ) ) * Math.cos( v + Math.PI );\n\t\tz = - 8 * Math.sin( u );\n\n\t}\n\n\tconst y = - 2 * ( 1 - Math.cos( u ) / 2 ) * Math.sin( v );\n\n\ttarget.set( x, y, z );\n\n}\n\n/**\n * A parametric function representing a flat plane.\n *\n * @param {number} u - The `u` coordinate on the surface in the range `[0,1]`.\n * @param {number} v - The `v` coordinate on the surface in the range `[0,1]`.\n * @param {Vector3} target - The target vector that is used to store the method's result.\n */\nfunction plane( u, v, target ) {\n\n\ttarget.set( u, 0, v );\n\n}\n\n/**\n * A parametric function representing a flat mobius strip.\n *\n * @param {number} u - The `u` coordinate on the surface in the range `[0,1]`.\n * @param {number} t - The `v` coordinate on the surface in the range `[0,1]`.\n * @param {Vector3} target - The target vector that is used to store the method's result.\n */\nfunction mobius( u, t, target ) {\n\n\t// http://www.wolframalpha.com/input/?i=M%C3%B6bius+strip+parametric+equations&lk=1&a=ClashPrefs_*Surface.MoebiusStrip.SurfaceProperty.ParametricEquations-\n\tu = u - 0.5;\n\tconst v = 2 * Math.PI * t;\n\n\tconst a = 2;\n\n\tconst x = Math.cos( v ) * ( a + u * Math.cos( v / 2 ) );\n\tconst y = Math.sin( v ) * ( a + u * Math.cos( v / 2 ) );\n\tconst z = u * Math.sin( v / 2 );\n\n\ttarget.set( x, y, z );\n\n}\n\n/**\n * A parametric function representing a volumetric mobius strip.\n *\n * @param {number} u - The `u` coordinate on the surface in the range `[0,1]`.\n * @param {number} t - The `v` coordinate on the surface in the range `[0,1]`.\n * @param {Vector3} target - The target vector that is used to store the method's result.\n */\nfunction mobius3d( u, t, target ) {\n\n\tu *= Math.PI;\n\tt *= 2 * Math.PI;\n\n\tu = u * 2;\n\tconst phi = u / 2;\n\tconst major = 2.25, a = 0.125, b = 0.65;\n\n\tlet x = a * Math.cos( t ) * Math.cos( phi ) - b * Math.sin( t ) * Math.sin( phi );\n\tconst z = a * Math.cos( t ) * Math.sin( phi ) + b * Math.sin( t ) * Math.cos( phi );\n\tconst y = ( major + x ) * Math.sin( u );\n\tx = ( major + x ) * Math.cos( u );\n\n\ttarget.set( x, y, z );\n\n}\n\nexport { klein, plane, mobius, mobius3d };\n"],"mappings":"AAaA,SAASA,MAAOC,EAAGC,EAAGC,GAMrB,IAAIC,EAAGC,EAJPH,GAAKI,KAAKC,GACVN,GAAK,EAAIK,KAAKC,IAEdL,GAAQ,GAECI,KAAKC,IAEbH,EAAI,EAAIE,KAAKE,IAAKN,IAAQ,EAAII,KAAKG,IAAKP,IAAU,GAAM,EAAII,KAAKE,IAAKN,GAAM,GAAQI,KAAKE,IAAKN,GAAMI,KAAKE,IAAKP,GAC9GI,GAAM,EAAIC,KAAKG,IAAKP,GAAM,GAAM,EAAII,KAAKE,IAAKN,GAAM,GAAMI,KAAKG,IAAKP,GAAMI,KAAKE,IAAKP,KAIpFG,EAAI,EAAIE,KAAKE,IAAKN,IAAQ,EAAII,KAAKG,IAAKP,IAAU,GAAM,EAAII,KAAKE,IAAKN,GAAM,GAAQI,KAAKE,IAAKP,EAAIK,KAAKC,IACvGF,GAAM,EAAIC,KAAKG,IAAKP,IAIrB,MAAMQ,GAAM,GAAM,EAAIJ,KAAKE,IAAKN,GAAM,GAAMI,KAAKG,IAAKR,GAEtDE,EAAOQ,IAAKP,EAAGM,EAAGL,EAEnB,CASA,SAASO,MAAOV,EAAGD,EAAGE,GAErBA,EAAOQ,IAAKT,EAAG,EAAGD,EAEnB,CASA,SAASY,OAAQX,EAAGY,EAAGX,GAGtBD,GAAQ,GACR,MAAMD,EAAI,EAAIK,KAAKC,GAAKO,EAIlBV,EAAIE,KAAKE,IAAKP,IAFV,EAEsBC,EAAII,KAAKE,IAAKP,EAAI,IAC5CS,EAAIJ,KAAKG,IAAKR,IAHV,EAGsBC,EAAII,KAAKE,IAAKP,EAAI,IAC5CI,EAAIH,EAAII,KAAKG,IAAKR,EAAI,GAE5BE,EAAOQ,IAAKP,EAAGM,EAAGL,EAEnB,CASA,SAASU,SAAUb,EAAGY,EAAGX,GAExBD,GAAKI,KAAKC,GACVO,GAAK,EAAIR,KAAKC,GAGd,MAAMS,GADNd,GAAQ,GACQ,EAGhB,IAAIE,EAFoB,KAEZE,KAAKE,IAAKM,GAAMR,KAAKE,IAAKQ,GAFH,IAEeV,KAAKG,IAAKK,GAAMR,KAAKG,IAAKO,GAC5E,MAAMX,EAHkB,KAGVC,KAAKE,IAAKM,GAAMR,KAAKG,IAAKO,GAHL,IAGiBV,KAAKG,IAAKK,GAAMR,KAAKE,IAAKQ,GACxEN,GAJQ,KAIMN,GAAME,KAAKG,IAAKP,GACpCE,GALc,KAKAA,GAAME,KAAKE,IAAKN,GAE9BC,EAAOQ,IAAKP,EAAGM,EAAGL,EAEnB,QAESL,MAAOY,MAAOC,OAAQE","ignoreList":[]}