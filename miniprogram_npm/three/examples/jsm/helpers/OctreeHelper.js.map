{"version":3,"file":"node_modules/three/examples/jsm/helpers/OctreeHelper.js","names":["LineSegments","BufferGeometry","Float32BufferAttribute","LineBasicMaterial","OctreeHelper","constructor","octree","color","super","toneMapped","this","type","update","vertices","traverse","tree","i","length","min","box","max","push","x","y","z","subTrees","geometry","dispose","setAttribute","material"],"sources":["node_modules/three/examples/jsm/helpers/OctreeHelper.js"],"sourcesContent":["import {\n\tLineSegments,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tLineBasicMaterial\n} from 'three';\n\n/**\n * A helper for visualizing an Octree.\n *\n * ```js\n * const helper = new OctreeHelper( octree );\n * scene.add( helper );\n * ```\n *\n * @augments LineSegments\n * @three_import import { OctreeHelper } from 'three/addons/helpers/OctreeHelper.js';\n */\nclass OctreeHelper extends LineSegments {\n\n\t/**\n\t * Constructs a new Octree helper.\n\t *\n\t * @param {Octree} octree - The octree to visualize.\n\t * @param {number|Color|string} [color=0xffff00] - The helper's color.\n\t */\n\tconstructor( octree, color = 0xffff00 ) {\n\n\t\tsuper( new BufferGeometry(), new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\t/**\n\t\t * The octree to visualize.\n\t\t *\n\t\t * @type {Octree}\n\t\t */\n\t\tthis.octree = octree;\n\n\t\t/**\n\t\t * The helper's color.\n\t\t *\n\t\t * @type {number|Color|string}\n\t\t */\n\t\tthis.color = color;\n\n\t\tthis.type = 'OctreeHelper';\n\n\t\tthis.update();\n\n\t}\n\n\t/**\n\t * Updates the helper. This method must be called whenever the Octree's\n\t * structure is changed.\n\t */\n\tupdate() {\n\n\t\tconst vertices = [];\n\n\t\tfunction traverse( tree ) {\n\n\t\t\tfor ( let i = 0; i < tree.length; i ++ ) {\n\n\t\t\t\tconst min = tree[ i ].box.min;\n\t\t\t\tconst max = tree[ i ].box.max;\n\n\t\t\t\tvertices.push( max.x, max.y, max.z ); vertices.push( min.x, max.y, max.z ); // 0, 1\n\t\t\t\tvertices.push( min.x, max.y, max.z ); vertices.push( min.x, min.y, max.z ); // 1, 2\n\t\t\t\tvertices.push( min.x, min.y, max.z ); vertices.push( max.x, min.y, max.z ); // 2, 3\n\t\t\t\tvertices.push( max.x, min.y, max.z ); vertices.push( max.x, max.y, max.z ); // 3, 0\n\n\t\t\t\tvertices.push( max.x, max.y, min.z ); vertices.push( min.x, max.y, min.z ); // 4, 5\n\t\t\t\tvertices.push( min.x, max.y, min.z ); vertices.push( min.x, min.y, min.z ); // 5, 6\n\t\t\t\tvertices.push( min.x, min.y, min.z ); vertices.push( max.x, min.y, min.z ); // 6, 7\n\t\t\t\tvertices.push( max.x, min.y, min.z ); vertices.push( max.x, max.y, min.z ); // 7, 4\n\n\t\t\t\tvertices.push( max.x, max.y, max.z ); vertices.push( max.x, max.y, min.z ); // 0, 4\n\t\t\t\tvertices.push( min.x, max.y, max.z ); vertices.push( min.x, max.y, min.z ); // 1, 5\n\t\t\t\tvertices.push( min.x, min.y, max.z ); vertices.push( min.x, min.y, min.z ); // 2, 6\n\t\t\t\tvertices.push( max.x, min.y, max.z ); vertices.push( max.x, min.y, min.z ); // 3, 7\n\n\t\t\t\ttraverse( tree[ i ].subTrees );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttraverse( this.octree.subTrees );\n\n\t\tthis.geometry.dispose();\n\n\t\tthis.geometry = new BufferGeometry();\n\t\tthis.geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever this instance is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nexport { OctreeHelper };\n"],"mappings":"OACCA,aACAC,eACAC,uBACAC,sBACM,QAaP,MAAMC,qBAAqBJ,aAQ1B,WAAAK,CAAaC,EAAQC,EAAQ,UAE5BC,MAAO,IAAIP,eAAkB,IAAIE,kBAAmB,CAAEI,MAAOA,EAAOE,YAAY,KAOhFC,KAAKJ,OAASA,EAOdI,KAAKH,MAAQA,EAEbG,KAAKC,KAAO,eAEZD,KAAKE,QAEN,CAMA,MAAAA,GAEC,MAAMC,EAAW,IAEjB,SAASC,EAAUC,GAElB,IAAM,IAAIC,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAO,CAExC,MAAME,EAAMH,EAAMC,GAAIG,IAAID,IACpBE,EAAML,EAAMC,GAAIG,IAAIC,IAE1BP,EAASQ,KAAMD,EAAIE,EAAGF,EAAIG,EAAGH,EAAII,GAAKX,EAASQ,KAAMH,EAAII,EAAGF,EAAIG,EAAGH,EAAII,GACvEX,EAASQ,KAAMH,EAAII,EAAGF,EAAIG,EAAGH,EAAII,GAAKX,EAASQ,KAAMH,EAAII,EAAGJ,EAAIK,EAAGH,EAAII,GACvEX,EAASQ,KAAMH,EAAII,EAAGJ,EAAIK,EAAGH,EAAII,GAAKX,EAASQ,KAAMD,EAAIE,EAAGJ,EAAIK,EAAGH,EAAII,GACvEX,EAASQ,KAAMD,EAAIE,EAAGJ,EAAIK,EAAGH,EAAII,GAAKX,EAASQ,KAAMD,EAAIE,EAAGF,EAAIG,EAAGH,EAAII,GAEvEX,EAASQ,KAAMD,EAAIE,EAAGF,EAAIG,EAAGL,EAAIM,GAAKX,EAASQ,KAAMH,EAAII,EAAGF,EAAIG,EAAGL,EAAIM,GACvEX,EAASQ,KAAMH,EAAII,EAAGF,EAAIG,EAAGL,EAAIM,GAAKX,EAASQ,KAAMH,EAAII,EAAGJ,EAAIK,EAAGL,EAAIM,GACvEX,EAASQ,KAAMH,EAAII,EAAGJ,EAAIK,EAAGL,EAAIM,GAAKX,EAASQ,KAAMD,EAAIE,EAAGJ,EAAIK,EAAGL,EAAIM,GACvEX,EAASQ,KAAMD,EAAIE,EAAGJ,EAAIK,EAAGL,EAAIM,GAAKX,EAASQ,KAAMD,EAAIE,EAAGF,EAAIG,EAAGL,EAAIM,GAEvEX,EAASQ,KAAMD,EAAIE,EAAGF,EAAIG,EAAGH,EAAII,GAAKX,EAASQ,KAAMD,EAAIE,EAAGF,EAAIG,EAAGL,EAAIM,GACvEX,EAASQ,KAAMH,EAAII,EAAGF,EAAIG,EAAGH,EAAII,GAAKX,EAASQ,KAAMH,EAAII,EAAGF,EAAIG,EAAGL,EAAIM,GACvEX,EAASQ,KAAMH,EAAII,EAAGJ,EAAIK,EAAGH,EAAII,GAAKX,EAASQ,KAAMH,EAAII,EAAGJ,EAAIK,EAAGL,EAAIM,GACvEX,EAASQ,KAAMD,EAAIE,EAAGJ,EAAIK,EAAGH,EAAII,GAAKX,EAASQ,KAAMD,EAAIE,EAAGJ,EAAIK,EAAGL,EAAIM,GAEvEV,EAAUC,EAAMC,GAAIS,SAErB,CAED,CAEAX,CAAUJ,KAAKJ,OAAOmB,UAEtBf,KAAKgB,SAASC,UAEdjB,KAAKgB,SAAW,IAAIzB,eACpBS,KAAKgB,SAASE,aAAc,WAAY,IAAI1B,uBAAwBW,EAAU,GAE/E,CAMA,OAAAc,GAECjB,KAAKgB,SAASC,UACdjB,KAAKmB,SAASF,SAEf,SAIQvB","ignoreList":[]}