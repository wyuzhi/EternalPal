{"version":3,"file":"node_modules/three/examples/jsm/helpers/PositionalAudioHelper.js","names":["BufferGeometry","BufferAttribute","LineBasicMaterial","Line","MathUtils","PositionalAudioHelper","constructor","audio","range","divisionsInnerAngle","divisionsOuterAngle","geometry","positions","Float32Array","setAttribute","materialInnerAngle","color","super","this","type","update","coneInnerAngle","degToRad","panner","coneOuterAngle","halfConeInnerAngle","halfConeOuterAngle","i","stride","start","count","positionAttribute","attributes","position","generateSegment","from","to","divisions","materialIndex","step","setXYZ","Math","sin","cos","min","addGroup","clearGroups","needsUpdate","material","visible","dispose"],"sources":["node_modules/three/examples/jsm/helpers/PositionalAudioHelper.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tBufferAttribute,\n\tLineBasicMaterial,\n\tLine,\n\tMathUtils\n} from 'three';\n\n/**\n * This helper displays the directional cone of a positional audio.\n *\n * `PositionalAudioHelper` must be added as a child of the positional audio.\n *\n * ```js\n * const positionalAudio = new THREE.PositionalAudio( listener );\n * positionalAudio.setDirectionalCone( 180, 230, 0.1 );\n * scene.add( positionalAudio );\n *\n * const helper = new PositionalAudioHelper( positionalAudio );\n * positionalAudio.add( helper );\n * ```\n *\n * @augments Line\n * @three_import import { PositionalAudioHelper } from 'three/addons/helpers/PositionalAudioHelper.js';\n */\nclass PositionalAudioHelper extends Line {\n\n\t/**\n\t * Constructs a new positional audio helper.\n\t *\n\t * @param {PositionalAudio} audio - The audio to visualize.\n\t * @param {number} [range=1] - The range of the directional cone.\n\t * @param {number} [divisionsInnerAngle=16] - The number of divisions of the inner part of the directional cone.\n\t * @param {number} [divisionsOuterAngle=2] The number of divisions of the outer part of the directional cone.\n\t */\n\tconstructor( audio, range = 1, divisionsInnerAngle = 16, divisionsOuterAngle = 2 ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst divisions = divisionsInnerAngle + divisionsOuterAngle * 2;\n\t\tconst positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tconst materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\n\t\tconst materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\n\n\t\tsuper( geometry, [ materialOuterAngle, materialInnerAngle ] );\n\n\t\t/**\n\t\t * The audio to visualize.\n\t\t *\n\t\t * @type {PositionalAudio}\n\t\t */\n\t\tthis.audio = audio;\n\n\t\t/**\n\t\t * The range of the directional cone.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.range = range;\n\n\t\t/**\n\t\t * The number of divisions of the inner part of the directional cone.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 16\n\t\t */\n\t\tthis.divisionsInnerAngle = divisionsInnerAngle;\n\n\t\t/**\n\t\t * The number of divisions of the outer part of the directional cone.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 2\n\t\t */\n\t\tthis.divisionsOuterAngle = divisionsOuterAngle;\n\n\t\tthis.type = 'PositionalAudioHelper';\n\n\t\tthis.update();\n\n\t}\n\n\t/**\n\t * Updates the helper. This method must be called whenever the directional cone\n\t * of the positional audio is changed.\n\t */\n\tupdate() {\n\n\t\tconst audio = this.audio;\n\t\tconst range = this.range;\n\t\tconst divisionsInnerAngle = this.divisionsInnerAngle;\n\t\tconst divisionsOuterAngle = this.divisionsOuterAngle;\n\n\t\tconst coneInnerAngle = MathUtils.degToRad( audio.panner.coneInnerAngle );\n\t\tconst coneOuterAngle = MathUtils.degToRad( audio.panner.coneOuterAngle );\n\n\t\tconst halfConeInnerAngle = coneInnerAngle / 2;\n\t\tconst halfConeOuterAngle = coneOuterAngle / 2;\n\n\t\tlet start = 0;\n\t\tlet count = 0;\n\t\tlet i;\n\t\tlet stride;\n\n\t\tconst geometry = this.geometry;\n\t\tconst positionAttribute = geometry.attributes.position;\n\n\t\tgeometry.clearGroups();\n\n\t\t//\n\n\t\tfunction generateSegment( from, to, divisions, materialIndex ) {\n\n\t\t\tconst step = ( to - from ) / divisions;\n\n\t\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\n\t\t\tcount ++;\n\n\t\t\tfor ( i = from; i < to; i += step ) {\n\n\t\t\t\tstride = start + count;\n\n\t\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\n\t\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\n\t\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\n\n\t\t\t\tcount += 3;\n\n\t\t\t}\n\n\t\t\tgeometry.addGroup( start, count, materialIndex );\n\n\t\t\tstart += count;\n\t\t\tcount = 0;\n\n\t\t}\n\n\t\t//\n\n\t\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\n\t\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\n\t\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\n\n\t\t//\n\n\t\tpositionAttribute.needsUpdate = true;\n\n\t\tif ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false;\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever this instance is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material[ 0 ].dispose();\n\t\tthis.material[ 1 ].dispose();\n\n\t}\n\n}\n\n\nexport { PositionalAudioHelper };\n"],"mappings":"OACCA,eACAC,gBACAC,kBACAC,KACAC,cACM,QAmBP,MAAMC,8BAA8BF,KAUnC,WAAAG,CAAaC,EAAOC,EAAQ,EAAGC,EAAsB,GAAIC,EAAsB,GAE9E,MAAMC,EAAW,IAAIX,eAEfY,EAAY,IAAIC,aAAsC,GAAV,GADhCJ,EAA4C,EAAtBC,GACc,IACtDC,EAASG,aAAc,WAAY,IAAIb,gBAAiBW,EAAW,IAEnE,MAAMG,EAAqB,IAAIb,kBAAmB,CAAEc,MAAO,QAG3DC,MAAON,EAAU,CAFU,IAAIT,kBAAmB,CAAEc,MAAO,WAEpBD,IAOvCG,KAAKX,MAAQA,EAQbW,KAAKV,MAAQA,EAQbU,KAAKT,oBAAsBA,EAQ3BS,KAAKR,oBAAsBA,EAE3BQ,KAAKC,KAAO,wBAEZD,KAAKE,QAEN,CAMA,MAAAA,GAEC,MAAMb,EAAQW,KAAKX,MACbC,EAAQU,KAAKV,MACbC,EAAsBS,KAAKT,oBAC3BC,EAAsBQ,KAAKR,oBAE3BW,EAAiBjB,UAAUkB,SAAUf,EAAMgB,OAAOF,gBAClDG,EAAiBpB,UAAUkB,SAAUf,EAAMgB,OAAOC,gBAElDC,EAAqBJ,EAAiB,EACtCK,EAAqBF,EAAiB,EAE5C,IAEIG,EACAC,EAHAC,EAAQ,EACRC,EAAQ,EAIZ,MAAMnB,EAAWO,KAAKP,SAChBoB,EAAoBpB,EAASqB,WAAWC,SAM9C,SAASC,EAAiBC,EAAMC,EAAIC,EAAWC,GAE9C,MAAMC,GAASH,EAAKD,GAASE,EAK7B,IAHAN,EAAkBS,OAAQX,EAAO,EAAG,EAAG,GACvCC,IAEMH,EAAIQ,EAAMR,EAAIS,EAAIT,GAAKY,EAE5BX,EAASC,EAAQC,EAEjBC,EAAkBS,OAAQZ,EAAQa,KAAKC,IAAKf,GAAMnB,EAAO,EAAGiC,KAAKE,IAAKhB,GAAMnB,GAC5EuB,EAAkBS,OAAQZ,EAAS,EAAGa,KAAKC,IAAKD,KAAKG,IAAKjB,EAAIY,EAAMH,IAAS5B,EAAO,EAAGiC,KAAKE,IAAKF,KAAKG,IAAKjB,EAAIY,EAAMH,IAAS5B,GAC9HuB,EAAkBS,OAAQZ,EAAS,EAAG,EAAG,EAAG,GAE5CE,GAAS,EAIVnB,EAASkC,SAAUhB,EAAOC,EAAOQ,GAEjCT,GAASC,EACTA,EAAQ,CAET,CA5BAnB,EAASmC,cAgCTZ,GAAmBR,GAAsBD,EAAoBf,EAAqB,GAClFwB,GAAmBT,EAAoBA,EAAoBhB,EAAqB,GAChFyB,EAAiBT,EAAoBC,EAAoBhB,EAAqB,GAI9EqB,EAAkBgB,aAAc,EAE3B1B,IAAmBG,IAAiBN,KAAK8B,SAAU,GAAIC,SAAU,EAEvE,CAMA,OAAAC,GAEChC,KAAKP,SAASuC,UACdhC,KAAK8B,SAAU,GAAIE,UACnBhC,KAAK8B,SAAU,GAAIE,SAEpB,SAKQ7C","ignoreList":[]}