{"version":3,"file":"node_modules/three/examples/jsm/helpers/RectAreaLightHelper.js","names":["BackSide","BufferGeometry","Float32BufferAttribute","Line","LineBasicMaterial","Mesh","MeshBasicMaterial","RectAreaLightHelper","constructor","light","color","geometry","setAttribute","computeBoundingSphere","super","fog","this","type","geometry2","add","side","updateMatrixWorld","scale","set","width","height","undefined","material","children","copy","multiplyScalar","intensity","c","max","Math","r","g","b","matrixWorld","extractRotation","copyPosition","dispose"],"sources":["node_modules/three/examples/jsm/helpers/RectAreaLightHelper.js"],"sourcesContent":["import {\n\tBackSide,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMesh,\n\tMeshBasicMaterial\n} from 'three';\n\n/**\n * Creates a visual aid for rect area lights.\n *\n * `RectAreaLightHelper` must be added as a child of the light.\n *\n * ```js\n * const light = new THREE.RectAreaLight( 0xffffbb, 1.0, 5, 5 );\n * const helper = new RectAreaLightHelper( light );\n * light.add( helper );\n * ```\n *\n * @augments Line\n * @three_import import { RectAreaLightHelper } from 'three/addons/helpers/RectAreaLightHelper.js';\n */\nclass RectAreaLightHelper extends Line {\n\n\t/**\n\t * Constructs a new rect area light helper.\n\t *\n\t * @param {RectAreaLight} light - The light to visualize.\n\t * @param {number|Color|string} [color] - The helper's color.\n\t * If this is not the set, the helper will take the color of the light.\n\t */\n\tconstructor( light, color ) {\n\n\t\tconst positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tconst material = new LineBasicMaterial( { fog: false } );\n\n\t\tsuper( geometry, material );\n\n\t\t/**\n\t\t * The light to visualize.\n\t\t *\n\t\t * @type {RectAreaLight}\n\t\t */\n\t\tthis.light = light;\n\n\t\t/**\n\t\t * The helper's color. If `undefined`, the helper will take the color of the light.\n\t\t *\n\t\t * @type {number|Color|string|undefined}\n\t\t */\n\t\tthis.color = color;\n\n\t\tthis.type = 'RectAreaLightHelper';\n\n\t\t//\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld() {\n\n\t\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\t\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t\t// prevent hue shift\n\t\t\tconst c = this.material.color;\n\t\t\tconst max = Math.max( c.r, c.g, c.b );\n\t\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\n\n\t\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t\t}\n\n\t\t// ignore world scale on light\n\t\tthis.matrixWorld.extractRotation( this.light.matrixWorld ).scale( this.scale ).copyPosition( this.light.matrixWorld );\n\n\t\tthis.children[ 0 ].matrixWorld.copy( this.matrixWorld );\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever this instance is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nexport { RectAreaLightHelper };\n"],"mappings":"OACCA,SACAC,eACAC,uBACAC,KACAC,kBACAC,KACAC,sBACM,QAgBP,MAAMC,4BAA4BJ,KASjC,WAAAK,CAAaC,EAAOC,GAEnB,MAEMC,EAAW,IAAIV,eACrBU,EAASC,aAAc,WAAY,IAAIV,uBAHrB,CAAE,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAGI,IAC1ES,EAASE,wBAITC,MAAOH,EAFU,IAAIP,kBAAmB,CAAEW,KAAK,KAS/CC,KAAKP,MAAQA,EAObO,KAAKN,MAAQA,EAEbM,KAAKC,KAAO,sBAIZ,MAEMC,EAAY,IAAIjB,eACtBiB,EAAUN,aAAc,WAAY,IAAIV,uBAHrB,CAAE,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,GAGR,IAC5EgB,EAAUL,wBAEVG,KAAKG,IAAK,IAAId,KAAMa,EAAW,IAAIZ,kBAAmB,CAAEc,KAAMpB,SAAUe,KAAK,KAE9E,CAEA,iBAAAM,GAIC,GAFAL,KAAKM,MAAMC,IAAK,GAAMP,KAAKP,MAAMe,MAAO,GAAMR,KAAKP,MAAMgB,OAAQ,QAE7CC,IAAfV,KAAKN,MAETM,KAAKW,SAASjB,MAAMa,IAAKP,KAAKN,OAC9BM,KAAKY,SAAU,GAAID,SAASjB,MAAMa,IAAKP,KAAKN,WAEtC,CAENM,KAAKW,SAASjB,MAAMmB,KAAMb,KAAKP,MAAMC,OAAQoB,eAAgBd,KAAKP,MAAMsB,WAGxE,MAAMC,EAAIhB,KAAKW,SAASjB,MAClBuB,EAAMC,KAAKD,IAAKD,EAAEG,EAAGH,EAAEI,EAAGJ,EAAEK,GAC7BJ,EAAM,GAAID,EAAEF,eAAgB,EAAIG,GAErCjB,KAAKY,SAAU,GAAID,SAASjB,MAAMmB,KAAMb,KAAKW,SAASjB,MAEvD,CAGAM,KAAKsB,YAAYC,gBAAiBvB,KAAKP,MAAM6B,aAAchB,MAAON,KAAKM,OAAQkB,aAAcxB,KAAKP,MAAM6B,aAExGtB,KAAKY,SAAU,GAAIU,YAAYT,KAAMb,KAAKsB,YAE3C,CAMA,OAAAG,GAECzB,KAAKL,SAAS8B,UACdzB,KAAKW,SAASc,UACdzB,KAAKY,SAAU,GAAIjB,SAAS8B,UAC5BzB,KAAKY,SAAU,GAAID,SAASc,SAE7B,SAIQlC","ignoreList":[]}