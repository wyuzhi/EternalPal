{"version":3,"file":"node_modules/three/examples/jsm/interactive/InteractiveGroup.js","names":["Group","Raycaster","Vector2","_pointer","_event","type","data","_events","move","select","selectstart","selectend","_raycaster","InteractiveGroup","constructor","super","this","raycaster","element","camera","controllers","_onPointerEvent","onPointerEvent","bind","_onXRControllerEvent","onXRControllerEvent","event","stopPropagation","rect","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","setFromCamera","intersects","intersectObjects","children","length","intersection","object","uv","set","dispatchEvent","controller","target","setFromXRController","intersections","listenToPointerEvents","renderer","domElement","addEventListener","disconnectionPointerEvents","removeEventListener","listenToXRControllerEvents","push","disconnectXrControllerEvents","disconnect"],"sources":["node_modules/three/examples/jsm/interactive/InteractiveGroup.js"],"sourcesContent":["import {\n\tGroup,\n\tRaycaster,\n\tVector2\n} from 'three';\n\nconst _pointer = new Vector2();\nconst _event = { type: '', data: _pointer };\n\n// The XR events that are mapped to \"standard\" pointer events.\nconst _events = {\n\t'move': 'mousemove',\n\t'select': 'click',\n\t'selectstart': 'mousedown',\n\t'selectend': 'mouseup'\n};\n\nconst _raycaster = new Raycaster();\n\n/**\n * This class can be used to group 3D objects in an interactive group.\n * The group itself can listen to Pointer, Mouse or XR controller events to\n * detect selections of descendant 3D objects. If a 3D object is selected,\n * the respective event is going to dispatched to it.\n *\n * ```js\n * const group = new InteractiveGroup();\n * group.listenToPointerEvents( renderer, camera );\n * group.listenToXRControllerEvents( controller1 );\n * group.listenToXRControllerEvents( controller2 );\n * scene.add( group );\n *\n * // now add objects that should be interactive\n * group.add( mesh1, mesh2, mesh3 );\n * ```\n * @augments Group\n * @three_import import { InteractiveGroup } from 'three/addons/interactive/InteractiveGroup.js';\n */\nclass InteractiveGroup extends Group {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The internal raycaster.\n\t\t *\n\t\t * @type {Raycaster}\n\t\t */\n\t\tthis.raycaster = new Raycaster();\n\n\t\t/**\n\t\t * The internal raycaster.\n\t\t *\n\t\t * @type {?HTMLDOMElement}\n\t\t * @default null\n\t\t */\n\t\tthis.element = null;\n\n\t\t/**\n\t\t * The camera used for raycasting.\n\t\t *\n\t\t * @type {?Camera}\n\t\t * @default null\n\t\t */\n\t\tthis.camera = null;\n\n\t\t/**\n\t\t * An array of XR controllers.\n\t\t *\n\t\t * @type {Array<Group>}\n\t\t */\n\t\tthis.controllers = [];\n\n\t\tthis._onPointerEvent = this.onPointerEvent.bind( this );\n\t\tthis._onXRControllerEvent = this.onXRControllerEvent.bind( this );\n\n\t}\n\n\tonPointerEvent( event ) {\n\n\t\tevent.stopPropagation();\n\n\t\tconst rect = this.element.getBoundingClientRect();\n\n\t\t_pointer.x = ( event.clientX - rect.left ) / rect.width * 2 - 1;\n\t\t_pointer.y = - ( event.clientY - rect.top ) / rect.height * 2 + 1;\n\n\t\tthis.raycaster.setFromCamera( _pointer, this.camera );\n\n\t\tconst intersects = this.raycaster.intersectObjects( this.children, false );\n\n\t\tif ( intersects.length > 0 ) {\n\n\t\t\tconst intersection = intersects[ 0 ];\n\n\t\t\tconst object = intersection.object;\n\t\t\tconst uv = intersection.uv;\n\n\t\t\t_event.type = event.type;\n\t\t\t_event.data.set( uv.x, 1 - uv.y );\n\n\t\t\tobject.dispatchEvent( _event );\n\n\t\t}\n\n\t}\n\n\tonXRControllerEvent( event ) {\n\n\t\tconst controller = event.target;\n\n\t\t_raycaster.setFromXRController( controller );\n\n\t\tconst intersections = _raycaster.intersectObjects( this.children, false );\n\n\t\tif ( intersections.length > 0 ) {\n\n\t\t\tconst intersection = intersections[ 0 ];\n\n\t\t\tconst object = intersection.object;\n\t\t\tconst uv = intersection.uv;\n\n\t\t\t_event.type = _events[ event.type ];\n\t\t\t_event.data.set( uv.x, 1 - uv.y );\n\n\t\t\tobject.dispatchEvent( _event );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Calling this method makes sure the interactive group listens to Pointer and Mouse events.\n\t * The target is the `domElement` of the given renderer. The camera is required for the internal\n\t * raycasting so 3D objects can be detected based on the events.\n\t *\n\t * @param {(WebGPURenderer|WebGLRenderer)} renderer - The renderer.\n\t * @param {Camera} camera - The camera.\n\t */\n\tlistenToPointerEvents( renderer, camera ) {\n\n\t\tthis.camera = camera;\n\t\tthis.element = renderer.domElement;\n\n\t\tthis.element.addEventListener( 'pointerdown', this._onPointerEvent );\n\t\tthis.element.addEventListener( 'pointerup', this._onPointerEvent );\n\t\tthis.element.addEventListener( 'pointermove', this._onPointerEvent );\n\t\tthis.element.addEventListener( 'mousedown', this._onPointerEvent );\n\t\tthis.element.addEventListener( 'mouseup', this._onPointerEvent );\n\t\tthis.element.addEventListener( 'mousemove', this._onPointerEvent );\n\t\tthis.element.addEventListener( 'click', this._onPointerEvent );\n\n\t}\n\n\t/**\n\t * Disconnects this interactive group from all Pointer and Mouse Events.\n\t */\n\tdisconnectionPointerEvents() {\n\n\t\tif ( this.element !== null ) {\n\n\t\t\tthis.element.removeEventListener( 'pointerdown', this._onPointerEvent );\n\t\t\tthis.element.removeEventListener( 'pointerup', this._onPointerEvent );\n\t\t\tthis.element.removeEventListener( 'pointermove', this._onPointerEvent );\n\t\t\tthis.element.removeEventListener( 'mousedown', this._onPointerEvent );\n\t\t\tthis.element.removeEventListener( 'mouseup', this._onPointerEvent );\n\t\t\tthis.element.removeEventListener( 'mousemove', this._onPointerEvent );\n\t\t\tthis.element.removeEventListener( 'click', this._onPointerEvent );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Calling this method makes sure the interactive group listens to events of\n\t * the given XR controller.\n\t *\n\t * @param {Group} controller - The XR controller.\n\t */\n\tlistenToXRControllerEvents( controller ) {\n\n\t\tthis.controllers.push( controller );\n\t\tcontroller.addEventListener( 'move', this._onXRControllerEvent );\n\t\tcontroller.addEventListener( 'select', this._onXRControllerEvent );\n\t\tcontroller.addEventListener( 'selectstart', this._onXRControllerEvent );\n\t\tcontroller.addEventListener( 'selectend', this._onXRControllerEvent );\n\n\t}\n\n\t/**\n\t * Disconnects this interactive group from all XR controllers.\n\t */\n\tdisconnectXrControllerEvents() {\n\n\t\tfor ( const controller of this.controllers ) {\n\n\t\t\tcontroller.removeEventListener( 'move', this._onXRControllerEvent );\n\t\t\tcontroller.removeEventListener( 'select', this._onXRControllerEvent );\n\t\t\tcontroller.removeEventListener( 'selectstart', this._onXRControllerEvent );\n\t\t\tcontroller.removeEventListener( 'selectend', this._onXRControllerEvent );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disconnects this interactive group from the DOM and all XR controllers.\n\t */\n\tdisconnect() {\n\n\t\tthis.disconnectionPointerEvents();\n\t\tthis.disconnectXrControllerEvents();\n\n\t\tthis.camera = null;\n\t\tthis.element = null;\n\n\t\tthis.controllers = [];\n\n\t}\n\n}\n\nexport { InteractiveGroup };\n"],"mappings":"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","ignoreList":[]}