{"version":3,"file":"node_modules/three/examples/jsm/interactive/SelectionBox.js","names":["Frustum","Vector3","Matrix4","Quaternion","_frustum","_center","_tmpPoint","_vecNear","_vecTopLeft","_vecTopRight","_vecDownRight","_vecDownLeft","_vecFarTopLeft","_vecFarTopRight","_vecFarDownRight","_vecFarDownLeft","_vectemp1","_vectemp2","_vectemp3","_matrix","_quaternion","_scale","SelectionBox","constructor","camera","scene","deep","Number","MAX_VALUE","this","startPoint","endPoint","collection","instances","select","_updateFrustum","_searchChildInFrustum","x","EPSILON","y","updateProjectionMatrix","updateMatrixWorld","isPerspectiveCamera","copy","Math","min","max","setFromMatrixPosition","matrixWorld","set","unproject","sub","normalize","multiplyScalar","add","planes","setFromCoplanarPoints","normal","isOrthographicCamera","left","top","right","down","console","error","frustum","object","isMesh","isLine","isPoints","isInstancedMesh","uuid","instanceId","count","getMatrixAt","decompose","applyMatrix4","containsPoint","push","geometry","boundingSphere","computeBoundingSphere","center","children","length"],"sources":["node_modules/three/examples/jsm/interactive/SelectionBox.js"],"sourcesContent":["import {\n\tFrustum,\n\tVector3,\n\tMatrix4,\n\tQuaternion,\n} from 'three';\n\nconst _frustum = new Frustum();\nconst _center = new Vector3();\n\nconst _tmpPoint = new Vector3();\n\nconst _vecNear = new Vector3();\nconst _vecTopLeft = new Vector3();\nconst _vecTopRight = new Vector3();\nconst _vecDownRight = new Vector3();\nconst _vecDownLeft = new Vector3();\n\nconst _vecFarTopLeft = new Vector3();\nconst _vecFarTopRight = new Vector3();\nconst _vecFarDownRight = new Vector3();\nconst _vecFarDownLeft = new Vector3();\n\nconst _vectemp1 = new Vector3();\nconst _vectemp2 = new Vector3();\nconst _vectemp3 = new Vector3();\n\nconst _matrix = new Matrix4();\nconst _quaternion = new Quaternion();\nconst _scale = new Vector3();\n\n/**\n * This class can be used to select 3D objects in a scene with a selection box.\n * It is recommended to visualize the selected area with the help of {@link SelectionHelper}.\n *\n * ```js\n * const selectionBox = new SelectionBox( camera, scene );\n * const selectedObjects = selectionBox.select( startPoint, endPoint );\n * ```\n *\n * @three_import import { SelectionBox } from 'three/addons/interactive/SelectionBox.js';\n */\nclass SelectionBox {\n\n\t/**\n\t * Constructs a new selection box.\n\t *\n\t * @param {Camera} camera - The camera the scene is rendered with.\n\t * @param {Scene} scene - The scene.\n\t * @param {number} [deep=Number.MAX_VALUE] - How deep the selection frustum of perspective cameras should extend.\n\t */\n\tconstructor( camera, scene, deep = Number.MAX_VALUE ) {\n\n\t\t/**\n\t\t * The camera the scene is rendered with.\n\t\t *\n\t\t * @type {Camera}\n\t\t */\n\t\tthis.camera = camera;\n\n\t\t/**\n\t\t * The camera the scene is rendered with.\n\t\t *\n\t\t * @type {Scene}\n\t\t */\n\t\tthis.scene = scene;\n\n\t\t/**\n\t\t * The start point of the selection.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.startPoint = new Vector3();\n\n\t\t/**\n\t\t * The end point of the selection.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.endPoint = new Vector3();\n\n\t\t/**\n\t\t * The selected 3D objects.\n\t\t *\n\t\t * @type {Array<Object3D>}\n\t\t */\n\t\tthis.collection = [];\n\n\t\t/**\n\t\t * The selected instance IDs of instanced meshes.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tthis.instances = {};\n\n\t\t/**\n\t\t * How deep the selection frustum of perspective cameras should extend.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Number.MAX_VALUE\n\t\t */\n\t\tthis.deep = deep;\n\n\t}\n\n\t/**\n\t * This method selects 3D objects in the scene based on the given start\n\t * and end point. If no parameters are provided, the method uses the start\n\t * and end values of the respective members.\n\t *\n\t * @param {Vector3} [startPoint] - The start point.\n\t * @param {Vector3} [endPoint] - The end point.\n\t * @return {Array<Object3D>} The selected 3D objects.\n\t */\n\tselect( startPoint, endPoint ) {\n\n\t\tthis.startPoint = startPoint || this.startPoint;\n\t\tthis.endPoint = endPoint || this.endPoint;\n\t\tthis.collection = [];\n\n\t\tthis._updateFrustum( this.startPoint, this.endPoint );\n\t\tthis._searchChildInFrustum( _frustum, this.scene );\n\n\t\treturn this.collection;\n\n\t}\n\n\t// private\n\n\t_updateFrustum( startPoint, endPoint ) {\n\n\t\tstartPoint = startPoint || this.startPoint;\n\t\tendPoint = endPoint || this.endPoint;\n\n\t\t// Avoid invalid frustum\n\n\t\tif ( startPoint.x === endPoint.x ) {\n\n\t\t\tendPoint.x += Number.EPSILON;\n\n\t\t}\n\n\t\tif ( startPoint.y === endPoint.y ) {\n\n\t\t\tendPoint.y += Number.EPSILON;\n\n\t\t}\n\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.camera.updateMatrixWorld();\n\n\t\tif ( this.camera.isPerspectiveCamera ) {\n\n\t\t\t_tmpPoint.copy( startPoint );\n\t\t\t_tmpPoint.x = Math.min( startPoint.x, endPoint.x );\n\t\t\t_tmpPoint.y = Math.max( startPoint.y, endPoint.y );\n\t\t\tendPoint.x = Math.max( startPoint.x, endPoint.x );\n\t\t\tendPoint.y = Math.min( startPoint.y, endPoint.y );\n\n\t\t\t_vecNear.setFromMatrixPosition( this.camera.matrixWorld );\n\t\t\t_vecTopLeft.copy( _tmpPoint );\n\t\t\t_vecTopRight.set( endPoint.x, _tmpPoint.y, 0 );\n\t\t\t_vecDownRight.copy( endPoint );\n\t\t\t_vecDownLeft.set( _tmpPoint.x, endPoint.y, 0 );\n\n\t\t\t_vecTopLeft.unproject( this.camera );\n\t\t\t_vecTopRight.unproject( this.camera );\n\t\t\t_vecDownRight.unproject( this.camera );\n\t\t\t_vecDownLeft.unproject( this.camera );\n\n\t\t\t_vectemp1.copy( _vecTopLeft ).sub( _vecNear );\n\t\t\t_vectemp2.copy( _vecTopRight ).sub( _vecNear );\n\t\t\t_vectemp3.copy( _vecDownRight ).sub( _vecNear );\n\t\t\t_vectemp1.normalize();\n\t\t\t_vectemp2.normalize();\n\t\t\t_vectemp3.normalize();\n\n\t\t\t_vectemp1.multiplyScalar( this.deep );\n\t\t\t_vectemp2.multiplyScalar( this.deep );\n\t\t\t_vectemp3.multiplyScalar( this.deep );\n\t\t\t_vectemp1.add( _vecNear );\n\t\t\t_vectemp2.add( _vecNear );\n\t\t\t_vectemp3.add( _vecNear );\n\n\t\t\tconst planes = _frustum.planes;\n\n\t\t\tplanes[ 0 ].setFromCoplanarPoints( _vecNear, _vecTopLeft, _vecTopRight );\n\t\t\tplanes[ 1 ].setFromCoplanarPoints( _vecNear, _vecTopRight, _vecDownRight );\n\t\t\tplanes[ 2 ].setFromCoplanarPoints( _vecDownRight, _vecDownLeft, _vecNear );\n\t\t\tplanes[ 3 ].setFromCoplanarPoints( _vecDownLeft, _vecTopLeft, _vecNear );\n\t\t\tplanes[ 4 ].setFromCoplanarPoints( _vecTopRight, _vecDownRight, _vecDownLeft );\n\t\t\tplanes[ 5 ].setFromCoplanarPoints( _vectemp3, _vectemp2, _vectemp1 );\n\t\t\tplanes[ 5 ].normal.multiplyScalar( - 1 );\n\n\t\t} else if ( this.camera.isOrthographicCamera ) {\n\n\t\t\tconst left = Math.min( startPoint.x, endPoint.x );\n\t\t\tconst top = Math.max( startPoint.y, endPoint.y );\n\t\t\tconst right = Math.max( startPoint.x, endPoint.x );\n\t\t\tconst down = Math.min( startPoint.y, endPoint.y );\n\n\t\t\t_vecTopLeft.set( left, top, - 1 );\n\t\t\t_vecTopRight.set( right, top, - 1 );\n\t\t\t_vecDownRight.set( right, down, - 1 );\n\t\t\t_vecDownLeft.set( left, down, - 1 );\n\n\t\t\t_vecFarTopLeft.set( left, top, 1 );\n\t\t\t_vecFarTopRight.set( right, top, 1 );\n\t\t\t_vecFarDownRight.set( right, down, 1 );\n\t\t\t_vecFarDownLeft.set( left, down, 1 );\n\n\t\t\t_vecTopLeft.unproject( this.camera );\n\t\t\t_vecTopRight.unproject( this.camera );\n\t\t\t_vecDownRight.unproject( this.camera );\n\t\t\t_vecDownLeft.unproject( this.camera );\n\n\t\t\t_vecFarTopLeft.unproject( this.camera );\n\t\t\t_vecFarTopRight.unproject( this.camera );\n\t\t\t_vecFarDownRight.unproject( this.camera );\n\t\t\t_vecFarDownLeft.unproject( this.camera );\n\n\t\t\tconst planes = _frustum.planes;\n\n\t\t\tplanes[ 0 ].setFromCoplanarPoints( _vecTopLeft, _vecFarTopLeft, _vecFarTopRight );\n\t\t\tplanes[ 1 ].setFromCoplanarPoints( _vecTopRight, _vecFarTopRight, _vecFarDownRight );\n\t\t\tplanes[ 2 ].setFromCoplanarPoints( _vecFarDownRight, _vecFarDownLeft, _vecDownLeft );\n\t\t\tplanes[ 3 ].setFromCoplanarPoints( _vecFarDownLeft, _vecFarTopLeft, _vecTopLeft );\n\t\t\tplanes[ 4 ].setFromCoplanarPoints( _vecTopRight, _vecDownRight, _vecDownLeft );\n\t\t\tplanes[ 5 ].setFromCoplanarPoints( _vecFarDownRight, _vecFarTopRight, _vecFarTopLeft );\n\t\t\tplanes[ 5 ].normal.multiplyScalar( - 1 );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.SelectionBox: Unsupported camera type.' );\n\n\t\t}\n\n\t}\n\n\t_searchChildInFrustum( frustum, object ) {\n\n\t\tif ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\tthis.instances[ object.uuid ] = [];\n\n\t\t\t\tfor ( let instanceId = 0; instanceId < object.count; instanceId ++ ) {\n\n\t\t\t\t\tobject.getMatrixAt( instanceId, _matrix );\n\t\t\t\t\t_matrix.decompose( _center, _quaternion, _scale );\n\t\t\t\t\t_center.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\tif ( frustum.containsPoint( _center ) ) {\n\n\t\t\t\t\t\tthis.instances[ object.uuid ].push( instanceId );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.geometry.boundingSphere === null ) object.geometry.computeBoundingSphere();\n\n\t\t\t\t_center.copy( object.geometry.boundingSphere.center );\n\n\t\t\t\t_center.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tif ( frustum.containsPoint( _center ) ) {\n\n\t\t\t\t\tthis.collection.push( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.children.length > 0 ) {\n\n\t\t\tfor ( let x = 0; x < object.children.length; x ++ ) {\n\n\t\t\t\tthis._searchChildInFrustum( frustum, object.children[ x ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { SelectionBox };\n"],"mappings":"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","ignoreList":[]}