{"version":3,"file":"node_modules/three/examples/jsm/lighting/TiledLighting.js","names":["Lighting","tiledLights","TiledLighting","constructor","super","createNode","lights","setLights"],"sources":["node_modules/three/examples/jsm/lighting/TiledLighting.js"],"sourcesContent":["import { Lighting } from 'three/webgpu';\nimport { tiledLights } from '../tsl/lighting/TiledLightsNode.js';\n\n/**\n * A custom lighting implementation based on Tiled-Lighting that overwrites the default\n * implementation in {@link WebGPURenderer}.\n *\n * ```js\n * const lighting = new TiledLighting();\n * renderer.lighting = lighting; // set lighting system\n * ```\n *\n * @augments Lighting\n * @three_import import { TiledLighting } from 'three/addons/lighting/TiledLighting.js';\n */\nexport class TiledLighting extends Lighting {\n\n\t/**\n\t * Constructs a new lighting system.\n\t */\n\tconstructor() {\n\n\t\tsuper();\n\n\t}\n\n\t/**\n\t * Creates a new tiled lights node for the given array of lights.\n\t *\n\t * This method is called internally by the renderer and must be overwritten by\n\t * all custom lighting implementations.\n\t *\n\t * @param {Array<Light>} lights - The render object.\n\t * @return {TiledLightsNode} The tiled lights node.\n\t */\n\tcreateNode( lights = [] ) {\n\n\t\treturn tiledLights().setLights( lights );\n\n\t}\n\n}\n"],"mappings":"OAASA,aAAgB,sBAChBC,gBAAmB,4CAcrB,MAAMC,sBAAsBF,SAKlC,WAAAG,GAECC,OAED,CAWA,UAAAC,CAAYC,EAAS,IAEpB,OAAOL,cAAcM,UAAWD,EAEjC","ignoreList":[]}