{"version":3,"file":"node_modules/three/examples/jsm/loaders/3DMLoader.js","names":["BufferGeometryLoader","CanvasTexture","ClampToEdgeWrapping","Color","DirectionalLight","DoubleSide","FileLoader","LinearFilter","Line","LineBasicMaterial","Loader","Matrix4","Mesh","MeshPhysicalMaterial","MeshStandardMaterial","Object3D","PointLight","Points","PointsMaterial","RectAreaLight","RepeatWrapping","SpotLight","Sprite","SpriteMaterial","TextureLoader","EXRLoader","_taskCache","WeakMap","Rhino3dmLoader","constructor","manager","super","this","libraryPath","libraryPending","libraryBinary","libraryConfig","url","workerLimit","workerPool","workerNextTaskID","workerSourceURL","workerConfig","materials","warnings","setLibraryPath","path","setWorkerLimit","load","onLoad","onProgress","onError","loader","setPath","setResponseType","setRequestHeader","requestHeader","buffer","has","get","promise","then","catch","decodeObjects","result","userData","e","debug","console","log","map","worker","_taskLoad","taskID","taskCost","byteLength","objectPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","type","id","message","_createGeometry","data","_releaseTask","set","parse","_compareMaterials","material","mat","name","color","r","g","b","vertexColors","json","JSON","stringify","i","length","m","_mat","push","_createMaterial","renderEnvironment","undefined","metalness","DEFAULT_MATERIAL_NAME","side","diffuseColor","emissive","emissionColor","flatShading","disableLighting","ior","indexOfRefraction","reflectivity","opacity","transparency","specularColor","transparent","pbrSupported","pbr","anisotropy","anisotropic","anisotropyRotation","anisotropicRotation","baseColor","clearcoat","clearcoatRoughness","metallic","transmission","roughness","sheen","specularIntensity","specular","thickness","subsurface","textureLoader","textures","texture","image","bumpMap","envMap","transmissionMap","alphaMap","aoMap","anisotropyMap","clearcoatMap","clearcoatNormalMap","clearcoatRoughnessMap","displacementMap","emissiveMap","metalnessMap","roughnessMap","sheenColorMap","specularColorMap","thicknessMap","wrapS","wrapU","wrapT","wrapV","repeat","mapping","THREE","EquirectangularReflectionMapping","object","instanceDefinitionObjects","instanceDefinitions","instanceReferences","layers","groups","settings","renderSettings","objects","obj","attributes","objectType","matId","materialSource","layerIndex","renderMaterialIndex","materialIndex","rMaterial","_object","_createObject","layer","visible","isInstanceDefinitionObject","add","iDef","j","objectIds","objId","p","iRef","geometry","parentIdefId","iRefObject","xf","xform","array","matrix","applyMatrix4","clone","_color","hasOwnProperty","sizeAttenuation","size","drawColor","points","mesh","castShadow","castsShadows","receiveShadow","receivesShadows","lines","ctx","document","createElement","getContext","font","fontHeight","fontFace","width","measureText","text","height","window","devicePixelRatio","canvas","style","setTransform","textBaseline","textAlign","fillStyle","a","fillRect","fillText","minFilter","generateMipmaps","depthTest","sprite","position","point","scale","light","lightStyle","location","shadow","normalBias","target","direction","angle","spotAngleRadians","Math","abs","lookAt","intensity","diffuse","_initLibrary","jsLoader","jsContent","binaryLoader","binaryContent","all","wasmBinary","fn","Rhino3dmWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","Worker","_taskCosts","onmessage","warn","error","sort","dispose","terminate","rhino","extractTextures","tTypes","d","_texture","getTexture","textureType","extractTextureData","delete","t","tType","getEmbeddedFileAsBase64","fileName","wrapW","uvw","uvwTransform","toFloatArray","self","extractObjectData","doc","_geometry","_attributes","ObjectType","Curve","pts","curveToPoints","itemSize","Point","pt","PointSet","toThreejsJSON","Brep","faces","faceIndex","count","face","_mesh","getMesh","MeshType","Any","append","compact","Extrusion","TextDot","extractProperties","Light","guid","InstanceReference","SubD","subdivide","createFromSubDControlNet","groupCount","groupIds","getGroupList","userStringCount","userStrings","getUserStrings","decals","property","value","curve","pointLimit","pointCount","rc","ts","LineCurve","pointAtStart","pointAtEnd","PolylineCurve","PolyCurve","segmentCount","segment","segmentCurve","segmentArray","concat","ArcCurve","floor","angleDegrees","NurbsCurve","degree","pLine","tryGetPolyline","domain","divisions","tan","tangentAt","prevTan","slice","tS","ptS","denominator","sqrt","PI","theta","x","y","z","acos","max","min","pointAt","RhinoModule","onRuntimeInitialized","rhino3dm","arr","Uint8Array","File3dm","fromByteArray","views","namedViews","strings","objs","cnt","idef","idefAttributes","getObjectIds","textureTypes","TextureType","Diffuse","Bump","Transparency","Opacity","Emap","pbrTextureTypes","PBR_BaseColor","PBR_Subsurface","PBR_SubsurfaceScattering","PBR_SubsurfaceScatteringRadius","PBR_Metallic","PBR_Specular","PBR_SpecularTint","PBR_Roughness","PBR_Anisotropic","PBR_Anisotropic_Rotation","PBR_Sheen","PBR_SheenTint","PBR_Clearcoat","PBR_ClearcoatBump","PBR_ClearcoatRoughness","PBR_OpacityIor","PBR_OpacityRoughness","PBR_Emission","PBR_AmbientOcclusion","PBR_Displacement","_material","physicallyBased","supported","_layer","_view","view","_namedView","namedView","_group","group","strings_count","reflectionId","renderEnvironments","renderContent","content","kind","findChild","embeddedFiles","ambientLight","backgroundColorTop","backgroundColorBottom","useHiddenLights","depthCue","flatShade","renderBackFaces","renderPoints","renderCurves","renderIsoParams","renderMeshEdges","renderAnnotations","useViewportSize","scaleBackgroundToFit","transparentBackground","imageDpi","shadowMapLevel","snapShot","specificViewport","groundPlane","safeFrame","dithering","skylight","linearWorkflow","renderChannels","sun","postEffects"],"sources":["node_modules/three/examples/jsm/loaders/3DMLoader.js"],"sourcesContent":["import {\n\tBufferGeometryLoader,\n\tCanvasTexture,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tLinearFilter,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tMatrix4,\n\tMesh,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tObject3D,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tRectAreaLight,\n\tRepeatWrapping,\n\tSpotLight,\n\tSprite,\n\tSpriteMaterial,\n\tTextureLoader\n} from 'three';\n\nimport { EXRLoader } from '../loaders/EXRLoader.js';\n\nconst _taskCache = new WeakMap();\n\n/**\n * A loader for Rhinoceros 3D files and objects.\n *\n * Rhinoceros is a 3D modeler used to create, edit, analyze, document, render,\n * animate, and translate NURBS curves, surfaces, breps, extrusions, point clouds,\n * as well as polygon meshes and SubD objects. `rhino3dm.js` is compiled to WebAssembly\n * from the open source geometry library `openNURBS`. The loader currently uses\n * `rhino3dm.js 8.4.0`.\n *\n * ```js\n * const loader = new Rhino3dmLoader();\n * loader.setLibraryPath( 'https://cdn.jsdelivr.net/npm/rhino3dm@8.0.1' );\n *\n * const object = await loader.loadAsync( 'models/3dm/Rhino_Logo.3dm' );\n * scene.add( object );\n * ```\n *\n * @augments Loader\n * @three_import import { Rhino3dmLoader } from 'three/addons/loaders/3DMLoader.js';\n */\nclass Rhino3dmLoader extends Loader {\n\n\t/**\n\t * Constructs a new Rhino 3DM loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\t// internals\n\n\t\tthis.libraryPath = '';\n\t\tthis.libraryPending = null;\n\t\tthis.libraryBinary = null;\n\t\tthis.libraryConfig = {};\n\n\t\tthis.url = '';\n\n\t\tthis.workerLimit = 4;\n\t\tthis.workerPool = [];\n\t\tthis.workerNextTaskID = 1;\n\t\tthis.workerSourceURL = '';\n\t\tthis.workerConfig = {};\n\n\t\tthis.materials = [];\n\t\tthis.warnings = [];\n\n\t}\n\n\t/**\n\t * Path to a folder containing the JS and WASM libraries.\n\t *\n\t * @param {string} path - The library path to set.\n\t * @return {Rhino3dmLoader} A reference to this loader.\n\t */\n\tsetLibraryPath( path ) {\n\n\t\tthis.libraryPath = path;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the maximum number of Web Workers to be used during decoding.\n\t * A lower limit may be preferable if workers are also for other\n\t * tasks in the application.\n\t *\n\t * @param {number} workerLimit - The worker limit.\n\t * @return {Rhino3dmLoader} A reference to this loader.\n\t */\n\tsetWorkerLimit( workerLimit ) {\n\n\t\tthis.workerLimit = workerLimit;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded 3DM asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(Object3D)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\n\t\tthis.url = url;\n\n\t\tloader.load( url, ( buffer ) => {\n\n\t\t\t// Check for an existing task using this buffer. A transferred buffer cannot be transferred\n\t\t\t// again from this thread.\n\t\t\tif ( _taskCache.has( buffer ) ) {\n\n\t\t\t\tconst cachedTask = _taskCache.get( buffer );\n\n\t\t\t\treturn cachedTask.promise.then( onLoad ).catch( onError );\n\n\t\t\t}\n\n\t\t\tthis.decodeObjects( buffer, url )\n\t\t\t\t.then( result => {\n\n\t\t\t\t\tresult.userData.warnings = this.warnings;\n\t\t\t\t\tonLoad( result );\n\n\t\t\t\t } )\n\t\t\t\t.catch( e => onError( e ) );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Prints debug messages to the browser console.\n\t */\n\tdebug() {\n\n\t\tconsole.log( 'Task load: ', this.workerPool.map( ( worker ) => worker._taskLoad ) );\n\n\t}\n\n\t/**\n\t * Decodes the 3DM asset data with a Web Worker.\n\t *\n\t * @param {ArrayBuffer} buffer - The raw 3DM asset data as an array buffer.\n\t * @param {string} url - The asset URL.\n\t * @return {Promise<Object3D>} A Promise that resolved with the decoded 3D object.\n\t */\n\tdecodeObjects( buffer, url ) {\n\n\t\tlet worker;\n\t\tlet taskID;\n\n\t\tconst taskCost = buffer.byteLength;\n\n\t\tconst objectPending = this._getWorker( taskCost )\n\t\t\t.then( ( _worker ) => {\n\n\t\t\t\tworker = _worker;\n\t\t\t\ttaskID = this.workerNextTaskID ++;\n\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\n\n\t\t\t\t\tworker.postMessage( { type: 'decode', id: taskID, buffer }, [ buffer ] );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t} );\n\n\t\t\t} )\n\t\t\t.then( ( message ) => this._createGeometry( message.data ) )\n\t\t\t.catch( e => {\n\n\t\t\t\tthrow e;\n\n\t\t\t} );\n\n\t\t// Remove task from the task list.\n\t\t// Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\t\tobjectPending\n\t\t\t.catch( () => true )\n\t\t\t.then( () => {\n\n\t\t\t\tif ( worker && taskID ) {\n\n\t\t\t\t\tthis._releaseTask( worker, taskID );\n\n\t\t\t\t\t//this.debug();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t// Cache the task result.\n\t\t_taskCache.set( buffer, {\n\n\t\t\turl: url,\n\t\t\tpromise: objectPending\n\n\t\t} );\n\n\t\treturn objectPending;\n\n\t}\n\n\t/**\n\t * Parses the given 3DM data and passes the loaded 3DM asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {ArrayBuffer} data - The raw 3DM asset data as an array buffer.\n\t * @param {function(Object3D)} onLoad - Executed when the loading process has been finished.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tparse( data, onLoad, onError ) {\n\n\t\tthis.decodeObjects( data, '' )\n\t\t\t.then( result => {\n\n\t\t\t\tresult.userData.warnings = this.warnings;\n\t\t\t\tonLoad( result );\n\n\t\t\t} )\n\t\t\t.catch( e => onError( e ) );\n\n\t}\n\n\t_compareMaterials( material ) {\n\n\t\tconst mat = {};\n\t\tmat.name = material.name;\n\t\tmat.color = {};\n\t\tmat.color.r = material.color.r;\n\t\tmat.color.g = material.color.g;\n\t\tmat.color.b = material.color.b;\n\t\tmat.type = material.type;\n\t\tmat.vertexColors = material.vertexColors;\n\n\t\tconst json = JSON.stringify( mat );\n\n\t\tfor ( let i = 0; i < this.materials.length; i ++ ) {\n\n\t\t\tconst m = this.materials[ i ];\n\t\t\tconst _mat = {};\n\t\t\t_mat.name = m.name;\n\t\t\t_mat.color = {};\n\t\t\t_mat.color.r = m.color.r;\n\t\t\t_mat.color.g = m.color.g;\n\t\t\t_mat.color.b = m.color.b;\n\t\t\t_mat.type = m.type;\n\t\t\t_mat.vertexColors = m.vertexColors;\n\n\t\t\tif ( JSON.stringify( _mat ) === json ) {\n\n\t\t\t\treturn m;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.materials.push( material );\n\n\t\treturn material;\n\n\t}\n\n\t_createMaterial( material, renderEnvironment ) {\n\n\t\tif ( material === undefined ) {\n\n\t\t\treturn new MeshStandardMaterial( {\n\t\t\t\tcolor: new Color( 1, 1, 1 ),\n\t\t\t\tmetalness: 0.8,\n\t\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\t\tside: DoubleSide\n\t\t\t} );\n\n\t\t}\n\n\t\t//console.log(material)\n\n\t\tconst mat = new MeshPhysicalMaterial( {\n\n\t\t\tcolor: new Color( material.diffuseColor.r / 255.0, material.diffuseColor.g / 255.0, material.diffuseColor.b / 255.0 ),\n\t\t\temissive: new Color( material.emissionColor.r, material.emissionColor.g, material.emissionColor.b ),\n\t\t\tflatShading: material.disableLighting,\n\t\t\tior: material.indexOfRefraction,\n\t\t\tname: material.name,\n\t\t\treflectivity: material.reflectivity,\n\t\t\topacity: 1.0 - material.transparency,\n\t\t\tside: DoubleSide,\n\t\t\tspecularColor: material.specularColor,\n\t\t\ttransparent: material.transparency > 0 ? true : false\n\n\t\t} );\n\n\t\tmat.userData.id = material.id;\n\n\t\tif ( material.pbrSupported ) {\n\n\t\t\tconst pbr = material.pbr;\n\n\t\t\tmat.anisotropy = pbr.anisotropic;\n\t\t\tmat.anisotropyRotation = pbr.anisotropicRotation;\n\t\t\tmat.color = new Color( pbr.baseColor.r, pbr.baseColor.g, pbr.baseColor.b );\n\t\t\tmat.clearcoat = pbr.clearcoat;\n\t\t\tmat.clearcoatRoughness = pbr.clearcoatRoughness;\n\t\t\tmat.metalness = pbr.metallic;\n\t\t\tmat.transmission = 1 - pbr.opacity;\n\t\t\tmat.roughness = pbr.roughness;\n\t\t\tmat.sheen = pbr.sheen;\n\t\t\tmat.specularIntensity = pbr.specular;\n\t\t\tmat.thickness = pbr.subsurface;\n\n\t\t}\n\n\t\tif ( material.pbrSupported && material.pbr.opacity === 0 && material.transparency === 1 ) {\n\n\t\t\t//some compromises\n\n\t\t\tmat.opacity = 0.2;\n\t\t\tmat.transmission = 1.00;\n\n\t\t}\n\n\t\tconst textureLoader = new TextureLoader();\n\n\t\tfor ( let i = 0; i < material.textures.length; i ++ ) {\n\n\t\t\tconst texture = material.textures[ i ];\n\n\t\t\tif ( texture.image !== null ) {\n\n\t\t\t\tconst map = textureLoader.load( texture.image );\n\n\t\t\t\t//console.log(texture.type )\n\n\t\t\t\tswitch ( texture.type ) {\n\n\t\t\t\t\tcase 'Bump':\n\n\t\t\t\t\t\tmat.bumpMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Diffuse':\n\n\t\t\t\t\t\tmat.map = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Emap':\n\n\t\t\t\t\t\tmat.envMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Opacity':\n\n\t\t\t\t\t\tmat.transmissionMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Transparency':\n\n\t\t\t\t\t\tmat.alphaMap = map;\n\t\t\t\t\t\tmat.transparent = true;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_Alpha':\n\n\t\t\t\t\t\tmat.alphaMap = map;\n\t\t\t\t\t\tmat.transparent = true;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_AmbientOcclusion':\n\n\t\t\t\t\t\tmat.aoMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_Anisotropic':\n\n\t\t\t\t\t\tmat.anisotropyMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_BaseColor':\n\n\t\t\t\t\t\tmat.map = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_Clearcoat':\n\n\t\t\t\t\t\tmat.clearcoatMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_ClearcoatBump':\n\n\t\t\t\t\t\tmat.clearcoatNormalMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_ClearcoatRoughness':\n\n\t\t\t\t\t\tmat.clearcoatRoughnessMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_Displacement':\n\n\t\t\t\t\t\tmat.displacementMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_Emission':\n\n\t\t\t\t\t\tmat.emissiveMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_Metallic':\n\n\t\t\t\t\t\tmat.metalnessMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_Roughness':\n\n\t\t\t\t\t\tmat.roughnessMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_Sheen':\n\n\t\t\t\t\t\tmat.sheenColorMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_Specular':\n\n\t\t\t\t\t\tmat.specularColorMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PBR_Subsurface':\n\n\t\t\t\t\t\tmat.thicknessMap = map;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tthis.warnings.push( {\n\t\t\t\t\t\t\tmessage: `THREE.3DMLoader: No conversion exists for 3dm ${texture.type}.`,\n\t\t\t\t\t\t\ttype: 'no conversion'\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmap.wrapS = texture.wrapU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\t\tmap.wrapT = texture.wrapV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\t\tif ( texture.repeat ) {\n\n\t\t\t\t\tmap.repeat.set( texture.repeat[ 0 ], texture.repeat[ 1 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( renderEnvironment ) {\n\n\t\t\tnew EXRLoader().load( renderEnvironment.image, function ( texture ) {\n\n\t\t\t\ttexture.mapping = THREE.EquirectangularReflectionMapping;\n\t\t\t\tmat.envMap = texture;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn mat;\n\n\t}\n\n\t_createGeometry( data ) {\n\n\t\tconst object = new Object3D();\n\t\tconst instanceDefinitionObjects = [];\n\t\tconst instanceDefinitions = [];\n\t\tconst instanceReferences = [];\n\n\t\tobject.userData[ 'layers' ] = data.layers;\n\t\tobject.userData[ 'groups' ] = data.groups;\n\t\tobject.userData[ 'settings' ] = data.settings;\n\t\tobject.userData.settings[ 'renderSettings' ] = data.renderSettings;\n\t\tobject.userData[ 'objectType' ] = 'File3dm';\n\t\tobject.userData[ 'materials' ] = null;\n\n\t\tobject.name = this.url;\n\n\t\tlet objects = data.objects;\n\t\tconst materials = data.materials;\n\n\t\tfor ( let i = 0; i < objects.length; i ++ ) {\n\n\t\t\tconst obj = objects[ i ];\n\t\t\tconst attributes = obj.attributes;\n\n\t\t\tswitch ( obj.objectType ) {\n\n\t\t\t\tcase 'InstanceDefinition':\n\n\t\t\t\t\tinstanceDefinitions.push( obj );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstanceReference':\n\n\t\t\t\t\tinstanceReferences.push( obj );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tlet matId = null;\n\n\t\t\t\t\tswitch ( attributes.materialSource.name ) {\n\n\t\t\t\t\t\tcase 'ObjectMaterialSource_MaterialFromLayer':\n\t\t\t\t\t\t\t//check layer index\n\t\t\t\t\t\t\tif ( attributes.layerIndex >= 0 ) {\n\n\t\t\t\t\t\t\t\tmatId = data.layers[ attributes.layerIndex ].renderMaterialIndex;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ObjectMaterialSource_MaterialFromObject':\n\n\t\t\t\t\t\t\tif ( attributes.materialIndex >= 0 ) {\n\n\t\t\t\t\t\t\t\tmatId = attributes.materialIndex;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet material = null;\n\n\t\t\t\t\tif ( matId >= 0 ) {\n\n\t\t\t\t\t\tconst rMaterial = materials[ matId ];\n\t\t\t\t\t\tmaterial = this._createMaterial( rMaterial, data.renderEnvironment );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst _object = this._createObject( obj, material );\n\n\t\t\t\t\tif ( _object === undefined ) {\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst layer = data.layers[ attributes.layerIndex ];\n\n\t\t\t\t\t_object.visible = layer ? data.layers[ attributes.layerIndex ].visible : true;\n\n\t\t\t\t\tif ( attributes.isInstanceDefinitionObject ) {\n\n\t\t\t\t\t\tinstanceDefinitionObjects.push( _object );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.add( _object );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < instanceDefinitions.length; i ++ ) {\n\n\t\t\tconst iDef = instanceDefinitions[ i ];\n\n\t\t\tobjects = [];\n\n\t\t\tfor ( let j = 0; j < iDef.attributes.objectIds.length; j ++ ) {\n\n\t\t\t\tconst objId = iDef.attributes.objectIds[ j ];\n\n\t\t\t\tfor ( let p = 0; p < instanceDefinitionObjects.length; p ++ ) {\n\n\t\t\t\t\tconst idoId = instanceDefinitionObjects[ p ].userData.attributes.id;\n\n\t\t\t\t\tif ( objId === idoId ) {\n\n\t\t\t\t\t\tobjects.push( instanceDefinitionObjects[ p ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Currently clones geometry and does not take advantage of instancing\n\n\t\t\tfor ( let j = 0; j < instanceReferences.length; j ++ ) {\n\n\t\t\t\tconst iRef = instanceReferences[ j ];\n\n\t\t\t\tif ( iRef.geometry.parentIdefId === iDef.attributes.id ) {\n\n\t\t\t\t\tconst iRefObject = new Object3D();\n\t\t\t\t\tconst xf = iRef.geometry.xform.array;\n\n\t\t\t\t\tconst matrix = new Matrix4();\n\t\t\t\t\tmatrix.set( ...xf );\n\n\t\t\t\t\tiRefObject.applyMatrix4( matrix );\n\n\t\t\t\t\tfor ( let p = 0; p < objects.length; p ++ ) {\n\n\t\t\t\t\t\tiRefObject.add( objects[ p ].clone( true ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.add( iRefObject );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tobject.userData[ 'materials' ] = this.materials;\n\t\tobject.name = '';\n\t\treturn object;\n\n\t}\n\n\t_createObject( obj, mat ) {\n\n\t\tconst loader = new BufferGeometryLoader();\n\n\t\tconst attributes = obj.attributes;\n\n\t\tlet geometry, material, _color, color;\n\n\t\tswitch ( obj.objectType ) {\n\n\t\t\tcase 'Point':\n\t\t\tcase 'PointSet':\n\n\t\t\t\tgeometry = loader.parse( obj.geometry );\n\n\t\t\t\tif ( geometry.attributes.hasOwnProperty( 'color' ) ) {\n\n\t\t\t\t\tmaterial = new PointsMaterial( { vertexColors: true, sizeAttenuation: false, size: 2 } );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_color = attributes.drawColor;\n\t\t\t\t\tcolor = new Color( _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 );\n\t\t\t\t\tmaterial = new PointsMaterial( { color: color, sizeAttenuation: false, size: 2 } );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial = this._compareMaterials( material );\n\n\t\t\t\tconst points = new Points( geometry, material );\n\t\t\t\tpoints.userData[ 'attributes' ] = attributes;\n\t\t\t\tpoints.userData[ 'objectType' ] = obj.objectType;\n\n\t\t\t\tif ( attributes.name ) {\n\n\t\t\t\t\tpoints.name = attributes.name;\n\n\t\t\t\t}\n\n\t\t\t\treturn points;\n\n\t\t\tcase 'Mesh':\n\t\t\tcase 'Extrusion':\n\t\t\tcase 'SubD':\n\t\t\tcase 'Brep':\n\n\t\t\t\tif ( obj.geometry === null ) return;\n\n\t\t\t\tgeometry = loader.parse( obj.geometry );\n\n\n\t\t\t\tif ( mat === null ) {\n\n\t\t\t\t\tmat = this._createMaterial();\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( geometry.attributes.hasOwnProperty( 'color' ) ) {\n\n\t\t\t\t\tmat.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tmat = this._compareMaterials( mat );\n\n\t\t\t\tconst mesh = new Mesh( geometry, mat );\n\t\t\t\tmesh.castShadow = attributes.castsShadows;\n\t\t\t\tmesh.receiveShadow = attributes.receivesShadows;\n\t\t\t\tmesh.userData[ 'attributes' ] = attributes;\n\t\t\t\tmesh.userData[ 'objectType' ] = obj.objectType;\n\n\t\t\t\tif ( attributes.name ) {\n\n\t\t\t\t\tmesh.name = attributes.name;\n\n\t\t\t\t}\n\n\t\t\t\treturn mesh;\n\n\t\t\tcase 'Curve':\n\n\t\t\t\tgeometry = loader.parse( obj.geometry );\n\n\t\t\t\t_color = attributes.drawColor;\n\t\t\t\tcolor = new Color( _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 );\n\n\t\t\t\tmaterial = new LineBasicMaterial( { color: color } );\n\t\t\t\tmaterial = this._compareMaterials( material );\n\n\t\t\t\tconst lines = new Line( geometry, material );\n\t\t\t\tlines.userData[ 'attributes' ] = attributes;\n\t\t\t\tlines.userData[ 'objectType' ] = obj.objectType;\n\n\t\t\t\tif ( attributes.name ) {\n\n\t\t\t\t\tlines.name = attributes.name;\n\n\t\t\t\t}\n\n\t\t\t\treturn lines;\n\n\t\t\tcase 'TextDot':\n\n\t\t\t\tgeometry = obj.geometry;\n\n\t\t\t\tconst ctx = document.createElement( 'canvas' ).getContext( '2d' );\n\t\t\t\tconst font = `${geometry.fontHeight}px ${geometry.fontFace}`;\n\t\t\t\tctx.font = font;\n\t\t\t\tconst width = ctx.measureText( geometry.text ).width + 10;\n\t\t\t\tconst height = geometry.fontHeight + 10;\n\n\t\t\t\tconst r = window.devicePixelRatio;\n\n\t\t\t\tctx.canvas.width = width * r;\n\t\t\t\tctx.canvas.height = height * r;\n\t\t\t\tctx.canvas.style.width = width + 'px';\n\t\t\t\tctx.canvas.style.height = height + 'px';\n\t\t\t\tctx.setTransform( r, 0, 0, r, 0, 0 );\n\n\t\t\t\tctx.font = font;\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tcolor = attributes.drawColor;\n\t\t\t\tctx.fillStyle = `rgba(${color.r},${color.g},${color.b},${color.a})`;\n\t\t\t\tctx.fillRect( 0, 0, width, height );\n\t\t\t\tctx.fillStyle = 'white';\n\t\t\t\tctx.fillText( geometry.text, width / 2, height / 2 );\n\n\t\t\t\tconst texture = new CanvasTexture( ctx.canvas );\n\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttexture.wrapS = ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = ClampToEdgeWrapping;\n\n\t\t\t\tmaterial = new SpriteMaterial( { map: texture, depthTest: false } );\n\t\t\t\tconst sprite = new Sprite( material );\n\t\t\t\tsprite.position.set( geometry.point[ 0 ], geometry.point[ 1 ], geometry.point[ 2 ] );\n\t\t\t\tsprite.scale.set( width / 10, height / 10, 1.0 );\n\n\t\t\t\tsprite.userData[ 'attributes' ] = attributes;\n\t\t\t\tsprite.userData[ 'objectType' ] = obj.objectType;\n\n\t\t\t\tif ( attributes.name ) {\n\n\t\t\t\t\tsprite.name = attributes.name;\n\n\t\t\t\t}\n\n\t\t\t\treturn sprite;\n\n\t\t\tcase 'Light':\n\n\t\t\t\tgeometry = obj.geometry;\n\n\t\t\t\tlet light;\n\n\t\t\t\tswitch ( geometry.lightStyle.name ) {\n\n\t\t\t\t\tcase 'LightStyle_WorldPoint':\n\n\t\t\t\t\t\tlight = new PointLight();\n\t\t\t\t\t\tlight.castShadow = attributes.castsShadows;\n\t\t\t\t\t\tlight.position.set( geometry.location[ 0 ], geometry.location[ 1 ], geometry.location[ 2 ] );\n\t\t\t\t\t\tlight.shadow.normalBias = 0.1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LightStyle_WorldSpot':\n\n\t\t\t\t\t\tlight = new SpotLight();\n\t\t\t\t\t\tlight.castShadow = attributes.castsShadows;\n\t\t\t\t\t\tlight.position.set( geometry.location[ 0 ], geometry.location[ 1 ], geometry.location[ 2 ] );\n\t\t\t\t\t\tlight.target.position.set( geometry.direction[ 0 ], geometry.direction[ 1 ], geometry.direction[ 2 ] );\n\t\t\t\t\t\tlight.angle = geometry.spotAngleRadians;\n\t\t\t\t\t\tlight.shadow.normalBias = 0.1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LightStyle_WorldRectangular':\n\n\t\t\t\t\t\tlight = new RectAreaLight();\n\t\t\t\t\t\tconst width = Math.abs( geometry.width[ 2 ] );\n\t\t\t\t\t\tconst height = Math.abs( geometry.length[ 0 ] );\n\t\t\t\t\t\tlight.position.set( geometry.location[ 0 ] - ( height / 2 ), geometry.location[ 1 ], geometry.location[ 2 ] - ( width / 2 ) );\n\t\t\t\t\t\tlight.height = height;\n\t\t\t\t\t\tlight.width = width;\n\t\t\t\t\t\tlight.lookAt( geometry.direction[ 0 ], geometry.direction[ 1 ], geometry.direction[ 2 ] );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LightStyle_WorldDirectional':\n\n\t\t\t\t\t\tlight = new DirectionalLight();\n\t\t\t\t\t\tlight.castShadow = attributes.castsShadows;\n\t\t\t\t\t\tlight.position.set( geometry.location[ 0 ], geometry.location[ 1 ], geometry.location[ 2 ] );\n\t\t\t\t\t\tlight.target.position.set( geometry.direction[ 0 ], geometry.direction[ 1 ], geometry.direction[ 2 ] );\n\t\t\t\t\t\tlight.shadow.normalBias = 0.1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LightStyle_WorldLinear':\n\t\t\t\t\t\t// no conversion exists, warning has already been printed to the console\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( light ) {\n\n\t\t\t\t\tlight.intensity = geometry.intensity;\n\t\t\t\t\t_color = geometry.diffuse;\n\t\t\t\t\tcolor = new Color( _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 );\n\t\t\t\t\tlight.color = color;\n\t\t\t\t\tlight.userData[ 'attributes' ] = attributes;\n\t\t\t\t\tlight.userData[ 'objectType' ] = obj.objectType;\n\n\t\t\t\t}\n\n\t\t\t\treturn light;\n\n\t\t}\n\n\t}\n\n\t_initLibrary() {\n\n\t\tif ( ! this.libraryPending ) {\n\n\t\t\t// Load rhino3dm wrapper.\n\t\t\tconst jsLoader = new FileLoader( this.manager );\n\t\t\tjsLoader.setPath( this.libraryPath );\n\t\t\tconst jsContent = new Promise( ( resolve, reject ) => {\n\n\t\t\t\tjsLoader.load( 'rhino3dm.js', resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t\t// Load rhino3dm WASM binary.\n\t\t\tconst binaryLoader = new FileLoader( this.manager );\n\t\t\tbinaryLoader.setPath( this.libraryPath );\n\t\t\tbinaryLoader.setResponseType( 'arraybuffer' );\n\t\t\tconst binaryContent = new Promise( ( resolve, reject ) => {\n\n\t\t\t\tbinaryLoader.load( 'rhino3dm.wasm', resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t\tthis.libraryPending = Promise.all( [ jsContent, binaryContent ] )\n\t\t\t\t.then( ( [ jsContent, binaryContent ] ) => {\n\n\t\t\t\t\t//this.libraryBinary = binaryContent;\n\t\t\t\t\tthis.libraryConfig.wasmBinary = binaryContent;\n\n\t\t\t\t\tconst fn = Rhino3dmWorker.toString();\n\n\t\t\t\t\tconst body = [\n\t\t\t\t\t\t'/* rhino3dm.js */',\n\t\t\t\t\t\tjsContent,\n\t\t\t\t\t\t'/* worker */',\n\t\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\n\t\t\t\t\t].join( '\\n' );\n\n\t\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\treturn this.libraryPending;\n\n\t}\n\n\t_getWorker( taskCost ) {\n\n\t\treturn this._initLibrary().then( () => {\n\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\n\n\t\t\t\tconst worker = new Worker( this.workerSourceURL );\n\n\t\t\t\tworker._callbacks = {};\n\t\t\t\tworker._taskCosts = {};\n\t\t\t\tworker._taskLoad = 0;\n\n\t\t\t\tworker.postMessage( {\n\t\t\t\t\ttype: 'init',\n\t\t\t\t\tlibraryConfig: this.libraryConfig\n\t\t\t\t} );\n\n\t\t\t\tworker.onmessage = e => {\n\n\t\t\t\t\tconst message = e.data;\n\n\t\t\t\t\tswitch ( message.type ) {\n\n\t\t\t\t\t\tcase 'warning':\n\t\t\t\t\t\t\tthis.warnings.push( message.data );\n\t\t\t\t\t\t\tconsole.warn( message.data );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'decode':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.Rhino3dmLoader: Unexpected message, \"' + message.type + '\"' );\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tthis.workerPool.push( worker );\n\n\t\t\t} else {\n\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\n\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tconst worker = this.workerPool[ this.workerPool.length - 1 ];\n\n\t\t\tworker._taskLoad += taskCost;\n\n\t\t\treturn worker;\n\n\t\t} );\n\n\t}\n\n\t_releaseTask( worker, taskID ) {\n\n\t\tworker._taskLoad -= worker._taskCosts[ taskID ];\n\t\tdelete worker._callbacks[ taskID ];\n\t\tdelete worker._taskCosts[ taskID ];\n\n\t}\n\n\t/**\n\t * Frees internal resources. This method should be called\n\t * when the loader is no longer required.\n\t */\n\tdispose() {\n\n\t\tfor ( let i = 0; i < this.workerPool.length; ++ i ) {\n\n\t\t\tthis.workerPool[ i ].terminate();\n\n\t\t}\n\n\t\tthis.workerPool.length = 0;\n\n\t}\n\n}\n\n/* WEB WORKER */\n\nfunction Rhino3dmWorker() {\n\n\tlet libraryPending;\n\tlet libraryConfig;\n\tlet rhino;\n\tlet taskID;\n\n\tonmessage = function ( e ) {\n\n\t\tconst message = e.data;\n\n\t\tswitch ( message.type ) {\n\n\t\t\tcase 'init':\n\n\t\t\t\tlibraryConfig = message.libraryConfig;\n\t\t\t\tconst wasmBinary = libraryConfig.wasmBinary;\n\t\t\t\tlet RhinoModule;\n\t\t\t\tlibraryPending = new Promise( function ( resolve ) {\n\n\t\t\t\t\t/* Like Basis Loader */\n\t\t\t\t\tRhinoModule = { wasmBinary, onRuntimeInitialized: resolve };\n\n\t\t\t\t\trhino3dm( RhinoModule ); // eslint-disable-line no-undef\n\n\t\t\t\t } ).then( () => {\n\n\t\t\t\t\trhino = RhinoModule;\n\n\t\t\t\t } );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'decode':\n\n\t\t\t\ttaskID = message.id;\n\t\t\t\tconst buffer = message.buffer;\n\t\t\t\tlibraryPending.then( () => {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tconst data = decodeObjects( rhino, buffer );\n\t\t\t\t\t\tself.postMessage( { type: 'decode', id: message.id, data } );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error } );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction decodeObjects( rhino, buffer ) {\n\n\t\tconst arr = new Uint8Array( buffer );\n\t\tconst doc = rhino.File3dm.fromByteArray( arr );\n\n\t\tconst objects = [];\n\t\tconst materials = [];\n\t\tconst layers = [];\n\t\tconst views = [];\n\t\tconst namedViews = [];\n\t\tconst groups = [];\n\t\tconst strings = [];\n\n\t\t//Handle objects\n\n\t\tconst objs = doc.objects();\n\t\tconst cnt = objs.count;\n\n\t\tfor ( let i = 0; i < cnt; i ++ ) {\n\n\t\t\tconst _object = objs.get( i );\n\n\t\t\tconst object = extractObjectData( _object, doc );\n\n\t\t\t_object.delete();\n\n\t\t\tif ( object ) {\n\n\t\t\t\tobjects.push( object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Handle instance definitions\n\t\t// console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\n\n\t\tfor ( let i = 0; i < doc.instanceDefinitions().count; i ++ ) {\n\n\t\t\tconst idef = doc.instanceDefinitions().get( i );\n\t\t\tconst idefAttributes = extractProperties( idef );\n\t\t\tidefAttributes.objectIds = idef.getObjectIds();\n\n\t\t\tobjects.push( { geometry: null, attributes: idefAttributes, objectType: 'InstanceDefinition' } );\n\n\t\t}\n\n\t\t// Handle materials\n\n\t\tconst textureTypes = [\n\t\t\t// rhino.TextureType.Bitmap,\n\t\t\trhino.TextureType.Diffuse,\n\t\t\trhino.TextureType.Bump,\n\t\t\trhino.TextureType.Transparency,\n\t\t\trhino.TextureType.Opacity,\n\t\t\trhino.TextureType.Emap\n\t\t];\n\n\t\tconst pbrTextureTypes = [\n\t\t\trhino.TextureType.PBR_BaseColor,\n\t\t\trhino.TextureType.PBR_Subsurface,\n\t\t\trhino.TextureType.PBR_SubsurfaceScattering,\n\t\t\trhino.TextureType.PBR_SubsurfaceScatteringRadius,\n\t\t\trhino.TextureType.PBR_Metallic,\n\t\t\trhino.TextureType.PBR_Specular,\n\t\t\trhino.TextureType.PBR_SpecularTint,\n\t\t\trhino.TextureType.PBR_Roughness,\n\t\t\trhino.TextureType.PBR_Anisotropic,\n\t\t\trhino.TextureType.PBR_Anisotropic_Rotation,\n\t\t\trhino.TextureType.PBR_Sheen,\n\t\t\trhino.TextureType.PBR_SheenTint,\n\t\t\trhino.TextureType.PBR_Clearcoat,\n\t\t\trhino.TextureType.PBR_ClearcoatBump,\n\t\t\trhino.TextureType.PBR_ClearcoatRoughness,\n\t\t\trhino.TextureType.PBR_OpacityIor,\n\t\t\trhino.TextureType.PBR_OpacityRoughness,\n\t\t\trhino.TextureType.PBR_Emission,\n\t\t\trhino.TextureType.PBR_AmbientOcclusion,\n\t\t\trhino.TextureType.PBR_Displacement\n\t\t];\n\n\t\tfor ( let i = 0; i < doc.materials().count; i ++ ) {\n\n\t\t\tconst _material = doc.materials().get( i );\n\n\t\t\tconst material = extractProperties( _material );\n\n\t\t\tconst textures = [];\n\n\t\t\ttextures.push( ...extractTextures( _material, textureTypes, doc ) );\n\n\t\t\tmaterial.pbrSupported = _material.physicallyBased().supported;\n\n\t\t\tif ( material.pbrSupported ) {\n\n\t\t\t\ttextures.push( ...extractTextures( _material, pbrTextureTypes, doc ) );\n\t\t\t\tmaterial.pbr = extractProperties( _material.physicallyBased() );\n\n\t\t\t}\n\n\t\t\tmaterial.textures = textures;\n\n\t\t\tmaterials.push( material );\n\n\t\t\t_material.delete();\n\n\t\t}\n\n\t\t// Handle layers\n\n\t\tfor ( let i = 0; i < doc.layers().count; i ++ ) {\n\n\t\t\tconst _layer = doc.layers().get( i );\n\t\t\tconst layer = extractProperties( _layer );\n\n\t\t\tlayers.push( layer );\n\n\t\t\t_layer.delete();\n\n\t\t}\n\n\t\t// Handle views\n\n\t\tfor ( let i = 0; i < doc.views().count; i ++ ) {\n\n\t\t\tconst _view = doc.views().get( i );\n\t\t\tconst view = extractProperties( _view );\n\n\t\t\tviews.push( view );\n\n\t\t\t_view.delete();\n\n\t\t}\n\n\t\t// Handle named views\n\n\t\tfor ( let i = 0; i < doc.namedViews().count; i ++ ) {\n\n\t\t\tconst _namedView = doc.namedViews().get( i );\n\t\t\tconst namedView = extractProperties( _namedView );\n\n\t\t\tnamedViews.push( namedView );\n\n\t\t\t_namedView.delete();\n\n\t\t}\n\n\t\t// Handle groups\n\n\t\tfor ( let i = 0; i < doc.groups().count; i ++ ) {\n\n\t\t\tconst _group = doc.groups().get( i );\n\t\t\tconst group = extractProperties( _group );\n\n\t\t\tgroups.push( group );\n\n\t\t\t_group.delete();\n\n\t\t}\n\n\t\t// Handle settings\n\n\t\tconst settings = extractProperties( doc.settings() );\n\n\t\t//TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\n\n\t\t// Handle dimstyles\n\t\t// console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\n\n\t\t// Handle bitmaps\n\t\t// console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\n\n\t\t// Handle strings\n\t\t// console.log( `Document Strings Count: ${doc.strings().count()}` );\n\t\t// Note: doc.strings().documentUserTextCount() counts any doc.strings defined in a section\n\t\t// console.log( `Document User Text Count: ${doc.strings().documentUserTextCount()}` );\n\n\t\tconst strings_count = doc.strings().count;\n\n\t\tfor ( let i = 0; i < strings_count; i ++ ) {\n\n\t\t\tstrings.push( doc.strings().get( i ) );\n\n\t\t}\n\n\t\t// Handle Render Environments for Material Environment\n\n\t\t// get the id of the active render environment skylight, which we'll use for environment texture\n\t\tconst reflectionId = doc.settings().renderSettings().renderEnvironments.reflectionId;\n\n\t\tconst rc = doc.renderContent();\n\n\t\tlet renderEnvironment = null;\n\n\t\tfor ( let i = 0; i < rc.count; i ++ ) {\n\n\t\t\tconst content = rc.get( i );\n\n\t\t\tswitch ( content.kind ) {\n\n\t\t\t\tcase 'environment':\n\n\t\t\t\t\tconst id = content.id;\n\n\t\t\t\t\t// there could be multiple render environments in a 3dm file\n\t\t\t\t\tif ( id !== reflectionId ) break;\n\n\t\t\t\t\tconst renderTexture = content.findChild( 'texture' );\n\t\t\t\t\tconst fileName = renderTexture.fileName;\n\n\t\t\t\t\tfor ( let j = 0; j < doc.embeddedFiles().count; j ++ ) {\n\n\t\t\t\t\t\tconst _fileName = doc.embeddedFiles().get( j ).fileName;\n\n\t\t\t\t\t\tif ( fileName === _fileName ) {\n\n\t\t\t\t\t\t\tconst background = doc.getEmbeddedFileAsBase64( fileName );\n\t\t\t\t\t\t\tconst backgroundImage = 'data:image/png;base64,' + background;\n\t\t\t\t\t\t\trenderEnvironment = { type: 'renderEnvironment', image: backgroundImage, name: fileName };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Handle Render Settings\n\n\t\tconst renderSettings = {\n\t\t\tambientLight: doc.settings().renderSettings().ambientLight,\n\t\t\tbackgroundColorTop: doc.settings().renderSettings().backgroundColorTop,\n\t\t\tbackgroundColorBottom: doc.settings().renderSettings().backgroundColorBottom,\n\t\t\tuseHiddenLights: doc.settings().renderSettings().useHiddenLights,\n\t\t\tdepthCue: doc.settings().renderSettings().depthCue,\n\t\t\tflatShade: doc.settings().renderSettings().flatShade,\n\t\t\trenderBackFaces: doc.settings().renderSettings().renderBackFaces,\n\t\t\trenderPoints: doc.settings().renderSettings().renderPoints,\n\t\t\trenderCurves: doc.settings().renderSettings().renderCurves,\n\t\t\trenderIsoParams: doc.settings().renderSettings().renderIsoParams,\n\t\t\trenderMeshEdges: doc.settings().renderSettings().renderMeshEdges,\n\t\t\trenderAnnotations: doc.settings().renderSettings().renderAnnotations,\n\t\t\tuseViewportSize: doc.settings().renderSettings().useViewportSize,\n\t\t\tscaleBackgroundToFit: doc.settings().renderSettings().scaleBackgroundToFit,\n\t\t\ttransparentBackground: doc.settings().renderSettings().transparentBackground,\n\t\t\timageDpi: doc.settings().renderSettings().imageDpi,\n\t\t\tshadowMapLevel: doc.settings().renderSettings().shadowMapLevel,\n\t\t\tnamedView: doc.settings().renderSettings().namedView,\n\t\t\tsnapShot: doc.settings().renderSettings().snapShot,\n\t\t\tspecificViewport: doc.settings().renderSettings().specificViewport,\n\t\t\tgroundPlane: extractProperties( doc.settings().renderSettings().groundPlane ),\n\t\t\tsafeFrame: extractProperties( doc.settings().renderSettings().safeFrame ),\n\t\t\tdithering: extractProperties( doc.settings().renderSettings().dithering ),\n\t\t\tskylight: extractProperties( doc.settings().renderSettings().skylight ),\n\t\t\tlinearWorkflow: extractProperties( doc.settings().renderSettings().linearWorkflow ),\n\t\t\trenderChannels: extractProperties( doc.settings().renderSettings().renderChannels ),\n\t\t\tsun: extractProperties( doc.settings().renderSettings().sun ),\n\t\t\trenderEnvironments: extractProperties( doc.settings().renderSettings().renderEnvironments ),\n\t\t\tpostEffects: extractProperties( doc.settings().renderSettings().postEffects ),\n\n\t\t};\n\n\t\tdoc.delete();\n\n\t\treturn { objects, materials, layers, views, namedViews, groups, strings, settings, renderSettings, renderEnvironment };\n\n\t}\n\n\tfunction extractTextures( m, tTypes, d ) {\n\n\t\tconst textures = [];\n\n\t\tfor ( let i = 0; i < tTypes.length; i ++ ) {\n\n\t\t\tconst _texture = m.getTexture( tTypes[ i ] );\n\t\t\tif ( _texture ) {\n\n\t\t\t\tlet textureType = tTypes[ i ].constructor.name;\n\t\t\t\ttextureType = textureType.substring( 12, textureType.length );\n\t\t\t\tconst texture = extractTextureData( _texture, textureType, d );\n\t\t\t\ttextures.push( texture );\n\t\t\t\t_texture.delete();\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tfunction extractTextureData( t, tType, d ) {\n\n\t\tconst texture = { type: tType };\n\n\t\tconst image = d.getEmbeddedFileAsBase64( t.fileName );\n\n\t\ttexture.wrapU = t.wrapU;\n\t\ttexture.wrapV = t.wrapV;\n\t\ttexture.wrapW = t.wrapW;\n\t\tconst uvw = t.uvwTransform.toFloatArray( true );\n\n\t\ttexture.repeat = [ uvw[ 0 ], uvw[ 5 ] ];\n\n\t\tif ( image ) {\n\n\t\t\ttexture.image = 'data:image/png;base64,' + image;\n\n\t\t} else {\n\n\t\t\tself.postMessage( { type: 'warning', id: taskID, data: {\n\t\t\t\tmessage: `THREE.3DMLoader: Image for ${tType} texture not embedded in file.`,\n\t\t\t\ttype: 'missing resource'\n\t\t\t}\n\n\t\t\t} );\n\n\t\t\ttexture.image = null;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction extractObjectData( object, doc ) {\n\n\t\tconst _geometry = object.geometry();\n\t\tconst _attributes = object.attributes();\n\t\tlet objectType = _geometry.objectType;\n\t\tlet geometry, attributes, position, data, mesh;\n\n\t\t// skip instance definition objects\n\t\t//if( _attributes.isInstanceDefinitionObject ) { continue; }\n\n\t\t// TODO: handle other geometry types\n\t\tswitch ( objectType ) {\n\n\t\t\tcase rhino.ObjectType.Curve:\n\n\t\t\t\tconst pts = curveToPoints( _geometry, 100 );\n\n\t\t\t\tposition = {};\n\t\t\t\tattributes = {};\n\t\t\t\tdata = {};\n\n\t\t\t\tposition.itemSize = 3;\n\t\t\t\tposition.type = 'Float32Array';\n\t\t\t\tposition.array = [];\n\n\t\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\t\tposition.array.push( pts[ j ][ 0 ] );\n\t\t\t\t\tposition.array.push( pts[ j ][ 1 ] );\n\t\t\t\t\tposition.array.push( pts[ j ][ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tattributes.position = position;\n\t\t\t\tdata.attributes = attributes;\n\n\t\t\t\tgeometry = { data };\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.Point:\n\n\t\t\t\tconst pt = _geometry.location;\n\n\t\t\t\tposition = {};\n\t\t\t\tconst color = {};\n\t\t\t\tattributes = {};\n\t\t\t\tdata = {};\n\n\t\t\t\tposition.itemSize = 3;\n\t\t\t\tposition.type = 'Float32Array';\n\t\t\t\tposition.array = [ pt[ 0 ], pt[ 1 ], pt[ 2 ] ];\n\n\t\t\t\tconst _color = _attributes.drawColor( doc );\n\n\t\t\t\tcolor.itemSize = 3;\n\t\t\t\tcolor.type = 'Float32Array';\n\t\t\t\tcolor.array = [ _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 ];\n\n\t\t\t\tattributes.position = position;\n\t\t\t\tattributes.color = color;\n\t\t\t\tdata.attributes = attributes;\n\n\t\t\t\tgeometry = { data };\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.PointSet:\n\t\t\tcase rhino.ObjectType.Mesh:\n\n\t\t\t\tgeometry = _geometry.toThreejsJSON();\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.Brep:\n\n\t\t\t\tconst faces = _geometry.faces();\n\t\t\t\tmesh = new rhino.Mesh();\n\n\t\t\t\tfor ( let faceIndex = 0; faceIndex < faces.count; faceIndex ++ ) {\n\n\t\t\t\t\tconst face = faces.get( faceIndex );\n\t\t\t\t\tconst _mesh = face.getMesh( rhino.MeshType.Any );\n\n\t\t\t\t\tif ( _mesh ) {\n\n\t\t\t\t\t\tmesh.append( _mesh );\n\t\t\t\t\t\t_mesh.delete();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tface.delete();\n\n\t\t\t\t}\n\n\t\t\t\tif ( mesh.faces().count > 0 ) {\n\n\t\t\t\t\tmesh.compact();\n\t\t\t\t\tgeometry = mesh.toThreejsJSON();\n\t\t\t\t\tfaces.delete();\n\n\t\t\t\t}\n\n\t\t\t\tmesh.delete();\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.Extrusion:\n\n\t\t\t\tmesh = _geometry.getMesh( rhino.MeshType.Any );\n\n\t\t\t\tif ( mesh ) {\n\n\t\t\t\t\tgeometry = mesh.toThreejsJSON();\n\t\t\t\t\tmesh.delete();\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.TextDot:\n\n\t\t\t\tgeometry = extractProperties( _geometry );\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.Light:\n\n\t\t\t\tgeometry = extractProperties( _geometry );\n\n\t\t\t\tif ( geometry.lightStyle.name === 'LightStyle_WorldLinear' ) {\n\n\t\t\t\t\tself.postMessage( { type: 'warning', id: taskID, data: {\n\t\t\t\t\t\tmessage: `THREE.3DMLoader: No conversion exists for ${objectType.constructor.name} ${geometry.lightStyle.name}`,\n\t\t\t\t\t\ttype: 'no conversion',\n\t\t\t\t\t\tguid: _attributes.id\n\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.InstanceReference:\n\n\t\t\t\tgeometry = extractProperties( _geometry );\n\t\t\t\tgeometry.xform = extractProperties( _geometry.xform );\n\t\t\t\tgeometry.xform.array = _geometry.xform.toFloatArray( true );\n\n\t\t\t\tbreak;\n\n\t\t\tcase rhino.ObjectType.SubD:\n\n\t\t\t\t// TODO: precalculate resulting vertices and faces and warn on excessive results\n\t\t\t\t_geometry.subdivide( 3 );\n\t\t\t\tmesh = rhino.Mesh.createFromSubDControlNet( _geometry, false );\n\t\t\t\tif ( mesh ) {\n\n\t\t\t\t\tgeometry = mesh.toThreejsJSON();\n\t\t\t\t\tmesh.delete();\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t\t/*\n\t\t\t\tcase rhino.ObjectType.Annotation:\n\t\t\t\tcase rhino.ObjectType.Hatch:\n\t\t\t\tcase rhino.ObjectType.ClipPlane:\n\t\t\t\t*/\n\n\t\t\tdefault:\n\n\t\t\t\tself.postMessage( { type: 'warning', id: taskID, data: {\n\t\t\t\t\tmessage: `THREE.3DMLoader: Conversion not implemented for ${objectType.constructor.name}`,\n\t\t\t\t\ttype: 'not implemented',\n\t\t\t\t\tguid: _attributes.id\n\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( geometry ) {\n\n\t\t\tattributes = extractProperties( _attributes );\n\t\t\tattributes.geometry = extractProperties( _geometry );\n\n\t\t\tif ( _attributes.groupCount > 0 ) {\n\n\t\t\t\tattributes.groupIds = _attributes.getGroupList();\n\n\t\t\t}\n\n\t\t\tif ( _attributes.userStringCount > 0 ) {\n\n\t\t\t\tattributes.userStrings = _attributes.getUserStrings();\n\n\t\t\t}\n\n\t\t\tif ( _geometry.userStringCount > 0 ) {\n\n\t\t\t\tattributes.geometry.userStrings = _geometry.getUserStrings();\n\n\t\t\t}\n\n\t\t\tif ( _attributes.decals().count > 0 ) {\n\n\t\t\t\tself.postMessage( { type: 'warning', id: taskID, data: {\n\t\t\t\t\tmessage: 'THREE.3DMLoader: No conversion exists for the decals associated with this object.',\n\t\t\t\t\ttype: 'no conversion',\n\t\t\t\t\tguid: _attributes.id\n\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tattributes.drawColor = _attributes.drawColor( doc );\n\n\t\t\tobjectType = objectType.constructor.name;\n\t\t\tobjectType = objectType.substring( 11, objectType.length );\n\n\t\t\treturn { geometry, attributes, objectType };\n\n\t\t} else {\n\n\t\t\tself.postMessage( { type: 'warning', id: taskID, data: {\n\t\t\t\tmessage: `THREE.3DMLoader: ${objectType.constructor.name} has no associated mesh geometry.`,\n\t\t\t\ttype: 'missing mesh',\n\t\t\t\tguid: _attributes.id\n\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tfunction extractProperties( object ) {\n\n\t\tconst result = {};\n\n\t\tfor ( const property in object ) {\n\n\t\t\tconst value = object[ property ];\n\n\t\t\tif ( typeof value !== 'function' ) {\n\n\t\t\t\tif ( typeof value === 'object' && value !== null && value.hasOwnProperty( 'constructor' ) ) {\n\n\t\t\t\t\tresult[ property ] = { name: value.constructor.name, value: value.value };\n\n\t\t\t\t} else if ( typeof value === 'object' && value !== null ) {\n\n\t\t\t\t\tresult[ property ] = extractProperties( value );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresult[ property ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// these are functions that could be called to extract more data.\n\t\t\t\t//console.log( `${property}: ${object[ property ].constructor.name}` );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction curveToPoints( curve, pointLimit ) {\n\n\t\tlet pointCount = pointLimit;\n\t\tlet rc = [];\n\t\tconst ts = [];\n\n\t\tif ( curve instanceof rhino.LineCurve ) {\n\n\t\t\treturn [ curve.pointAtStart, curve.pointAtEnd ];\n\n\t\t}\n\n\t\tif ( curve instanceof rhino.PolylineCurve ) {\n\n\t\t\tpointCount = curve.pointCount;\n\t\t\tfor ( let i = 0; i < pointCount; i ++ ) {\n\n\t\t\t\trc.push( curve.point( i ) );\n\n\t\t\t}\n\n\t\t\treturn rc;\n\n\t\t}\n\n\t\tif ( curve instanceof rhino.PolyCurve ) {\n\n\t\t\tconst segmentCount = curve.segmentCount;\n\n\t\t\tfor ( let i = 0; i < segmentCount; i ++ ) {\n\n\t\t\t\tconst segment = curve.segmentCurve( i );\n\t\t\t\tconst segmentArray = curveToPoints( segment, pointCount );\n\t\t\t\trc = rc.concat( segmentArray );\n\t\t\t\tsegment.delete();\n\n\t\t\t}\n\n\t\t\treturn rc;\n\n\t\t}\n\n\t\tif ( curve instanceof rhino.ArcCurve ) {\n\n\t\t\tpointCount = Math.floor( curve.angleDegrees / 5 );\n\t\t\tpointCount = pointCount < 2 ? 2 : pointCount;\n\t\t\t// alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\n\n\t\t}\n\n\t\tif ( curve instanceof rhino.NurbsCurve && curve.degree === 1 ) {\n\n\t\t\tconst pLine = curve.tryGetPolyline();\n\n\t\t\tfor ( let i = 0; i < pLine.count; i ++ ) {\n\n\t\t\t\trc.push( pLine.get( i ) );\n\n\t\t\t}\n\n\t\t\tpLine.delete();\n\n\t\t\treturn rc;\n\n\t\t}\n\n\t\tconst domain = curve.domain;\n\t\tconst divisions = pointCount - 1.0;\n\n\t\tfor ( let j = 0; j < pointCount; j ++ ) {\n\n\t\t\tconst t = domain[ 0 ] + ( j / divisions ) * ( domain[ 1 ] - domain[ 0 ] );\n\n\t\t\tif ( t === domain[ 0 ] || t === domain[ 1 ] ) {\n\n\t\t\t\tts.push( t );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst tan = curve.tangentAt( t );\n\t\t\tconst prevTan = curve.tangentAt( ts.slice( - 1 )[ 0 ] );\n\n\t\t\t// Duplicated from THREE.Vector3\n\t\t\t// How to pass imports to worker?\n\n\t\t\tconst tS = tan[ 0 ] * tan[ 0 ] + tan[ 1 ] * tan[ 1 ] + tan[ 2 ] * tan[ 2 ];\n\t\t\tconst ptS = prevTan[ 0 ] * prevTan[ 0 ] + prevTan[ 1 ] * prevTan[ 1 ] + prevTan[ 2 ] * prevTan[ 2 ];\n\n\t\t\tconst denominator = Math.sqrt( tS * ptS );\n\n\t\t\tlet angle;\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\tangle = Math.PI / 2;\n\n\t\t\t} else {\n\n\t\t\t\tconst theta = ( tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z ) / denominator;\n\t\t\t\tangle = Math.acos( Math.max( - 1, Math.min( 1, theta ) ) );\n\n\t\t\t}\n\n\t\t\tif ( angle < 0.1 ) continue;\n\n\t\t\tts.push( t );\n\n\t\t}\n\n\t\trc = ts.map( t => curve.pointAt( t ) );\n\t\treturn rc;\n\n\t}\n\n}\n\nexport { Rhino3dmLoader };\n"],"mappings":"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","ignoreList":[]}