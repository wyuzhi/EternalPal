{"version":3,"file":"node_modules/three/examples/jsm/loaders/GLTFLoader.js","names":["AnimationClip","Bone","Box3","BufferAttribute","BufferGeometry","ClampToEdgeWrapping","Color","ColorManagement","DirectionalLight","DoubleSide","FileLoader","FrontSide","Group","ImageBitmapLoader","InstancedMesh","InterleavedBuffer","InterleavedBufferAttribute","Interpolant","InterpolateDiscrete","InterpolateLinear","Line","LineBasicMaterial","LineLoop","LineSegments","LinearFilter","LinearMipmapLinearFilter","LinearMipmapNearestFilter","LinearSRGBColorSpace","Loader","LoaderUtils","Material","MathUtils","Matrix4","Mesh","MeshBasicMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MirroredRepeatWrapping","NearestFilter","NearestMipmapLinearFilter","NearestMipmapNearestFilter","NumberKeyframeTrack","Object3D","OrthographicCamera","PerspectiveCamera","PointLight","Points","PointsMaterial","PropertyBinding","Quaternion","QuaternionKeyframeTrack","RepeatWrapping","Skeleton","SkinnedMesh","Sphere","SpotLight","Texture","TextureLoader","TriangleFanDrawMode","TriangleStripDrawMode","Vector2","Vector3","VectorKeyframeTrack","SRGBColorSpace","InstancedBufferAttribute","toTrianglesDrawMode","GLTFLoader","constructor","manager","super","this","dracoLoader","ktx2Loader","meshoptDecoder","pluginCallbacks","register","parser","GLTFMaterialsClearcoatExtension","GLTFMaterialsDispersionExtension","GLTFTextureBasisUExtension","GLTFTextureWebPExtension","GLTFTextureAVIFExtension","GLTFMaterialsSheenExtension","GLTFMaterialsTransmissionExtension","GLTFMaterialsVolumeExtension","GLTFMaterialsIorExtension","GLTFMaterialsEmissiveStrengthExtension","GLTFMaterialsSpecularExtension","GLTFMaterialsIridescenceExtension","GLTFMaterialsAnisotropyExtension","GLTFMaterialsBumpExtension","GLTFLightsExtension","GLTFMeshoptCompression","GLTFMeshGpuInstancing","load","url","onLoad","onProgress","onError","scope","resourcePath","path","relativeUrl","extractUrlBase","resolveURL","itemStart","_onError","e","console","error","itemError","itemEnd","loader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","data","parse","gltf","setDRACOLoader","setKTX2Loader","setMeshoptDecoder","callback","indexOf","push","unregister","splice","json","extensions","plugins","textDecoder","TextDecoder","JSON","ArrayBuffer","decode","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","content","undefined","asset","version","Error","GLTFParser","crossOrigin","fileLoader","i","length","plugin","name","extensionsUsed","extensionName","extensionsRequired","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","warn","setExtensions","setPlugins","parseAsync","Promise","resolve","reject","GLTFRegistry","objects","get","key","add","object","remove","removeAll","KHR_LIGHTS_PUNCTUAL","KHR_MATERIALS_CLEARCOAT","KHR_MATERIALS_DISPERSION","KHR_MATERIALS_IOR","KHR_MATERIALS_SHEEN","KHR_MATERIALS_SPECULAR","KHR_MATERIALS_TRANSMISSION","KHR_MATERIALS_IRIDESCENCE","KHR_MATERIALS_ANISOTROPY","KHR_MATERIALS_VOLUME","KHR_TEXTURE_BASISU","KHR_MATERIALS_EMISSIVE_STRENGTH","EXT_MATERIALS_BUMP","EXT_TEXTURE_WEBP","EXT_TEXTURE_AVIF","EXT_MESHOPT_COMPRESSION","EXT_MESH_GPU_INSTANCING","cache","refs","uses","_markDefs","nodeDefs","nodes","nodeIndex","nodeLength","nodeDef","light","_addNodeRef","_loadLight","lightIndex","cacheKey","dependency","lightDef","lights","lightNode","color","setRGB","range","type","target","position","set","distance","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","assignExtrasToUserData","intensity","createUniqueName","getDependency","index","createNodeAttachment","self","then","_getNodeRef","getMaterialType","extendParams","materialParams","materialDef","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","extendMaterialParams","materialIndex","materials","emissiveStrength","emissiveIntensity","extension","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","scale","clearcoatNormalScale","dispersion","iridescenceFactor","iridescence","iridescenceTexture","iridescenceIor","iridescenceIOR","iridescenceThicknessRange","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessTexture","sheenColor","sheenRoughness","sheen","sheenColorFactor","colorFactor","sheenRoughnessFactor","sheenColorTexture","sheenRoughnessTexture","transmissionFactor","transmission","transmissionTexture","thickness","thicknessFactor","thicknessTexture","attenuationDistance","Infinity","colorArray","attenuationColor","ior","specularIntensity","specularFactor","specularTexture","specularColorFactor","specularColor","specularColorTexture","bumpScale","bumpFactor","bumpTexture","anisotropyStrength","anisotropy","anisotropyRotation","anisotropyTexture","loadTexture","textureIndex","textureDef","textures","options","loadTextureImage","source","images","textureLoader","uri","handler","getHandler","loadBufferView","bufferView","bufferViews","extensionDef","buffer","decoder","supported","res","byteOffset","byteLength","count","stride","byteStride","decodeGltfBufferAsync","mode","filter","ready","result","decodeGltfBuffer","createNodeMesh","mesh","meshDef","meshes","primitive","primitives","WEBGL_CONSTANTS","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","attributesDef","attributes","accessor","results","nodeObject","pop","isGroup","children","instancedMeshes","m","p","q","s","instancedMesh","geometry","material","TRANSLATION","fromBufferAttribute","ROTATION","SCALE","setMatrixAt","compose","attributeName","attr","instanceColor","itemSize","normalized","setAttribute","prototype","copy","call","assignFinalMaterial","clear","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","magic","slice","getUint32","chunkContentsLength","chunkView","chunkIndex","chunkLength","chunkType","contentArray","preload","decodePrimitive","bufferViewIndex","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","decodeDracoFile","attribute","extendTexture","texture","transform","texCoord","channel","offset","rotation","clone","fromArray","repeat","needsUpdate","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","copySampleValue_","values","valueSize","interpolate_","i1","t0","t","t1","stride2","stride3","td","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","_quaternion","GLTFCubicSplineQuaternionInterpolant","normalize","toArray","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","UNSIGNED_BYTE","UNSIGNED_SHORT","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","WEBGL_WRAPPINGS","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","TEXCOORD_2","TEXCOORD_3","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","STEP","ALPHA_MODES","OPAQUE","MASK","BLEND","createDefaultMaterial","emissive","metalness","roughness","transparent","depthTest","side","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","gltfDef","extras","Object","assign","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","hasMorphColor","il","pendingPositionAccessors","pendingNormalAccessors","pendingColorAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphColors","morphAttributes","morphTargetsRelative","updateMorphTargets","morphTargetInfluences","targetNames","morphTargetDictionary","createPrimitiveKey","primitiveDef","geometryKey","dracoExtension","indices","createAttributesKey","attributesKey","keys","sort","getNormalizedComponentScale","getImageURIMimeType","search","_identityMatrix","associations","Map","primitiveCache","nodeCache","meshCache","cameraCache","lightCache","sourceCache","textureCache","nodeNamesUsed","isSafari","safariVersion","isFirefox","firefoxVersion","navigator","userAgent","test","safariMatch","match","parseInt","createImageBitmap","setCrossOrigin","_invokeAll","ext","beforeRoot","getDependencies","dependencies","scene","scenes","animations","cameras","afterRoot","updateMatrixWorld","catch","skinDefs","skins","meshDefs","skinIndex","skinLength","joints","isBone","skin","isSkinnedMesh","camera","ref","updateMappings","original","mappings","child","entries","_invokeOne","func","unshift","loadScene","loadNode","loadMesh","loadAccessor","loadBuffer","loadMaterial","loadSkin","loadAnimation","loadCamera","defs","map","def","bufferIndex","bufferDef","buffers","bufferViewDef","accessorIndex","sparse","TypedArray","pendingBufferViews","elementBytes","BYTES_PER_ELEMENT","itemBytes","bufferAttribute","ibSlice","floor","ibCacheKey","ib","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setX","setY","setZ","setW","sourceIndex","sourceDef","sampler","promise","loadImageSource","flipY","startsWith","samplers","magFilter","minFilter","wrapS","wrapT","generateMipmaps","isCompressedTexture","URL","webkitURL","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","isImageBitmapLoader","imageBitmap","revokeObjectURL","mapName","mapDef","colorSpace","gltfReference","useDerivativeTangents","tangent","useVertexColors","useFlatShading","isPoints","uuid","pointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","vertexColors","flatShading","normalScale","y","materialType","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","alphaMode","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","aoMapIntensity","emissiveFactor","emissiveTexture","originalName","sanitizedName","sanitizeNodeName","loadGeometries","createDracoPrimitive","addPrimitiveAttributes","cached","geometryPromise","meshIndex","geometries","normalizeSkinWeights","group","cameraIndex","cameraDef","params","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","_loadNodeShallow","inverseBindMatrices","jointNodes","bones","boneInverses","jointNode","mat","animationIndex","animationDef","animationName","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","node","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","updateMatrix","createdTracks","_createAnimationTracks","k","traverse","o","isMesh","nodePending","childPending","childrenDef","skeletonPending","skeleton","bind","nodeName","meshPromise","forEach","matrix","applyMatrix4","quaternion","has","mapping","sceneIndex","sceneDef","nodeIds","reducedAssociations","value","reduceAssociations","targetName","TypedKeyframeTrack","interpolation","outputArray","_getArrayFromAccessor","j","jl","track","_createCubicSplineTrackInterpolant","scaled","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","computeBounds","box","min","max","boxScale","multiplyScalar","maxDisplacement","vector","abs","expandByVector","boundingBox","sphere","getCenter","center","radius","distanceTo","boundingSphere","assignAttributeAccessor","gltfAttributeName","setIndex","workingColorSpace"],"sources":["node_modules/three/examples/jsm/loaders/GLTFLoader.js"],"sourcesContent":["import {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tColorManagement,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tImageBitmapLoader,\n\tInstancedMesh,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLinearSRGBColorSpace,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tSRGBColorSpace,\n\tInstancedBufferAttribute\n} from 'three';\nimport { toTrianglesDrawMode } from '../utils/BufferGeometryUtils.js';\n\n/**\n * A loader for the glTF 2.0 format.\n *\n * [glTF]{@link https://www.khronos.org/gltf/} (GL Transmission Format) is an [open format specification]{@link https://github.com/KhronosGroup/glTF/tree/main/specification/2.0}\n * for efficient delivery and loading of 3D content. Assets may be provided either in JSON (.gltf) or binary (.glb)\n * format. External files store textures (.jpg, .png) and additional binary data (.bin). A glTF asset may deliver\n * one or more scenes, including meshes, materials, textures, skins, skeletons, morph targets, animations, lights,\n * and/or cameras.\n *\n * `GLTFLoader` uses {@link ImageBitmapLoader} whenever possible. Be advised that image bitmaps are not\n * automatically GC-collected when they are no longer referenced, and they require special handling during\n * the disposal process.\n *\n * `GLTFLoader` supports the following glTF 2.0 extensions:\n * - KHR_draco_mesh_compression\n * - KHR_materials_clearcoat\n * - KHR_materials_dispersion\n * - KHR_materials_ior\n * - KHR_materials_specular\n * - KHR_materials_transmission\n * - KHR_materials_iridescence\n * - KHR_materials_unlit\n * - KHR_materials_volume\n * - KHR_mesh_quantization\n * - KHR_lights_punctual\n * - KHR_texture_basisu\n * - KHR_texture_transform\n * - EXT_texture_webp\n * - EXT_meshopt_compression\n * - EXT_mesh_gpu_instancing\n *\n * The following glTF 2.0 extension is supported by an external user plugin:\n * - [KHR_materials_variants]{@link https://github.com/takahirox/three-gltf-extensions}\n * - [MSFT_texture_dds]{@link https://github.com/takahirox/three-gltf-extensions}\n *\n * ```js\n * const loader = new GLTFLoader();\n *\n * // Optional: Provide a DRACOLoader instance to decode compressed mesh data\n * const dracoLoader = new DRACOLoader();\n * dracoLoader.setDecoderPath( '/examples/jsm/libs/draco/' );\n * loader.setDRACOLoader( dracoLoader );\n *\n * const gltf = await loader.loadAsync( 'models/gltf/duck/duck.gltf' );\n * scene.add( gltf.scene );\n * ```\n *\n * @augments Loader\n * @three_import import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\n */\nclass GLTFLoader extends Loader {\n\n\t/**\n\t * Constructs a new glTF loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ktx2Loader = null;\n\t\tthis.meshoptDecoder = null;\n\n\t\tthis.pluginCallbacks = [];\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsClearcoatExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsDispersionExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureBasisUExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureWebPExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureAVIFExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsSheenExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsTransmissionExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsVolumeExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsIorExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsEmissiveStrengthExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsSpecularExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsIridescenceExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsAnisotropyExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsBumpExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFLightsExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMeshoptCompression( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMeshGpuInstancing( parser );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded glTF asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(GLTFLoader~LoadObject)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet resourcePath;\n\n\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\tresourcePath = this.resourcePath;\n\n\t\t} else if ( this.path !== '' ) {\n\n\t\t\t// If a base path is set, resources will be relative paths from that plus the relative path of the gltf file\n\t\t\t// Example  path = 'https://my-cnd-server.com/', url = 'assets/models/model.gltf'\n\t\t\t// resourcePath = 'https://my-cnd-server.com/assets/models/'\n\t\t\t// referenced resource 'model.bin' will be loaded from 'https://my-cnd-server.com/assets/models/model.bin'\n\t\t\t// referenced resource '../textures/texture.png' will be loaded from 'https://my-cnd-server.com/assets/textures/texture.png'\n\t\t\tconst relativeUrl = LoaderUtils.extractUrlBase( url );\n\t\t\tresourcePath = LoaderUtils.resolveURL( relativeUrl, this.path );\n\n\t\t} else {\n\n\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t}\n\n\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\tthis.manager.itemStart( url );\n\n\t\tconst _onError = function ( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t};\n\n\t\tconst loader = new FileLoader( this.manager );\n\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, function ( data ) {\n\n\t\t\ttry {\n\n\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, _onError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\t_onError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, _onError );\n\n\t}\n\n\t/**\n\t * Sets the given Draco loader to this loader. Required for decoding assets\n\t * compressed with the `KHR_draco_mesh_compression` extension.\n\t *\n\t * @param {DRACOLoader} dracoLoader - The Draco loader to set.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tsetDRACOLoader( dracoLoader ) {\n\n\t\tthis.dracoLoader = dracoLoader;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the given KTX2 loader to this loader. Required for loading KTX2\n\t * compressed textures.\n\t *\n\t * @param {KTX2Loader} ktx2Loader - The KTX2 loader to set.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tsetKTX2Loader( ktx2Loader ) {\n\n\t\tthis.ktx2Loader = ktx2Loader;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the given meshopt decoder. Required for decoding assets\n\t * compressed with the `EXT_meshopt_compression` extension.\n\t *\n\t * @param {Object} meshoptDecoder - The meshopt decoder to set.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tsetMeshoptDecoder( meshoptDecoder ) {\n\n\t\tthis.meshoptDecoder = meshoptDecoder;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Registers a plugin callback. This API is internally used to implement the various\n\t * glTF extensions but can also used by third-party code to add additional logic\n\t * to the loader.\n\t *\n\t * @param {function(parser:GLTFParser)} callback - The callback function to register.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Unregisters a plugin callback.\n\t *\n\t * @param {Function} callback - The callback function to unregister.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tunregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parses the given FBX data and returns the resulting group.\n\t *\n\t * @param {string|ArrayBuffer} data - The raw glTF data.\n\t * @param {string} path - The URL base path.\n\t * @param {function(GLTFLoader~LoadObject)} onLoad - Executed when the loading process has been finished.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tparse( data, path, onLoad, onError ) {\n\n\t\tlet json;\n\t\tconst extensions = {};\n\t\tconst plugins = {};\n\t\tconst textDecoder = new TextDecoder();\n\n\t\tif ( typeof data === 'string' ) {\n\n\t\t\tjson = JSON.parse( data );\n\n\t\t} else if ( data instanceof ArrayBuffer ) {\n\n\t\t\tconst magic = textDecoder.decode( new Uint8Array( data, 0, 4 ) );\n\n\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tjson = JSON.parse( extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content );\n\n\t\t\t} else {\n\n\t\t\t\tjson = JSON.parse( textDecoder.decode( data ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tjson = data;\n\n\t\t}\n\n\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst parser = new GLTFParser( json, {\n\n\t\t\tpath: path || this.resourcePath || '',\n\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\trequestHeader: this.requestHeader,\n\t\t\tmanager: this.manager,\n\t\t\tktx2Loader: this.ktx2Loader,\n\t\t\tmeshoptDecoder: this.meshoptDecoder\n\n\t\t} );\n\n\t\tparser.fileLoader.setRequestHeader( this.requestHeader );\n\n\t\tfor ( let i = 0; i < this.pluginCallbacks.length; i ++ ) {\n\n\t\t\tconst plugin = this.pluginCallbacks[ i ]( parser );\n\n\t\t\tif ( ! plugin.name ) console.error( 'THREE.GLTFLoader: Invalid plugin found: missing name' );\n\n\t\t\tplugins[ plugin.name ] = plugin;\n\n\t\t\t// Workaround to avoid determining as unknown extension\n\t\t\t// in addUnknownExtensionsToUserData().\n\t\t\t// Remove this workaround if we move all the existing\n\t\t\t// extension handlers to plugin system\n\t\t\textensions[ plugin.name ] = true;\n\n\t\t}\n\n\t\tif ( json.extensionsUsed ) {\n\n\t\t\tfor ( let i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\tconst extensionName = json.extensionsUsed[ i ];\n\t\t\t\tconst extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 && plugins[ extensionName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tparser.setExtensions( extensions );\n\t\tparser.setPlugins( plugins );\n\t\tparser.parse( onLoad, onError );\n\n\t}\n\n\t/**\n\t * Async version of {@link GLTFLoader#parse}.\n\t *\n\t * @async\n\t * @param {string|ArrayBuffer} data - The raw glTF data.\n\t * @param {string} path - The URL base path.\n\t * @return {Promise<GLTFLoader~LoadObject>} A Promise that resolves with the loaded glTF when the parsing has been finished.\n\t */\n\tparseAsync( data, path ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.parse( data, path, resolve, reject );\n\n\t\t} );\n\n\t}\n\n}\n\n/* GLTFREGISTRY */\n\nfunction GLTFRegistry() {\n\n\tlet objects = {};\n\n\treturn\t{\n\n\t\tget: function ( key ) {\n\n\t\t\treturn objects[ key ];\n\n\t\t},\n\n\t\tadd: function ( key, object ) {\n\n\t\t\tobjects[ key ] = object;\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete objects[ key ];\n\n\t\t},\n\n\t\tremoveAll: function () {\n\n\t\t\tobjects = {};\n\n\t\t}\n\n\t};\n\n}\n\n/*********************************/\n/********** EXTENSIONS ***********/\n/*********************************/\n\nconst EXTENSIONS = {\n\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\tKHR_MATERIALS_DISPERSION: 'KHR_materials_dispersion',\n\tKHR_MATERIALS_IOR: 'KHR_materials_ior',\n\tKHR_MATERIALS_SHEEN: 'KHR_materials_sheen',\n\tKHR_MATERIALS_SPECULAR: 'KHR_materials_specular',\n\tKHR_MATERIALS_TRANSMISSION: 'KHR_materials_transmission',\n\tKHR_MATERIALS_IRIDESCENCE: 'KHR_materials_iridescence',\n\tKHR_MATERIALS_ANISOTROPY: 'KHR_materials_anisotropy',\n\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\tKHR_MATERIALS_VOLUME: 'KHR_materials_volume',\n\tKHR_TEXTURE_BASISU: 'KHR_texture_basisu',\n\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\tKHR_MATERIALS_EMISSIVE_STRENGTH: 'KHR_materials_emissive_strength',\n\tEXT_MATERIALS_BUMP: 'EXT_materials_bump',\n\tEXT_TEXTURE_WEBP: 'EXT_texture_webp',\n\tEXT_TEXTURE_AVIF: 'EXT_texture_avif',\n\tEXT_MESHOPT_COMPRESSION: 'EXT_meshopt_compression',\n\tEXT_MESH_GPU_INSTANCING: 'EXT_mesh_gpu_instancing'\n};\n\n/**\n * Punctual Lights Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n *\n * @private\n */\nclass GLTFLightsExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\t// Object3D instance caches\n\t\tthis.cache = { refs: {}, uses: {} };\n\n\t}\n\n\t_markDefs() {\n\n\t\tconst parser = this.parser;\n\t\tconst nodeDefs = this.parser.json.nodes || [];\n\n\t\tfor ( let nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tconst nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t\t&& nodeDef.extensions[ this.name ]\n\t\t\t\t\t&& nodeDef.extensions[ this.name ].light !== undefined ) {\n\n\t\t\t\tparser._addNodeRef( this.cache, nodeDef.extensions[ this.name ].light );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_loadLight( lightIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst cacheKey = 'light:' + lightIndex;\n\t\tlet dependency = parser.cache.get( cacheKey );\n\n\t\tif ( dependency ) return dependency;\n\n\t\tconst json = parser.json;\n\t\tconst extensions = ( json.extensions && json.extensions[ this.name ] ) || {};\n\t\tconst lightDefs = extensions.lights || [];\n\t\tconst lightDef = lightDefs[ lightIndex ];\n\t\tlet lightNode;\n\n\t\tconst color = new Color( 0xffffff );\n\n\t\tif ( lightDef.color !== undefined ) color.setRGB( lightDef.color[ 0 ], lightDef.color[ 1 ], lightDef.color[ 2 ], LinearSRGBColorSpace );\n\n\t\tconst range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type: ' + lightDef.type );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tassignExtrasToUserData( lightNode, lightDef );\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = parser.createUniqueName( lightDef.name || ( 'light_' + lightIndex ) );\n\n\t\tdependency = Promise.resolve( lightNode );\n\n\t\tparser.cache.add( cacheKey, dependency );\n\n\t\treturn dependency;\n\n\t}\n\n\tgetDependency( type, index ) {\n\n\t\tif ( type !== 'light' ) return;\n\n\t\treturn this._loadLight( index );\n\n\t}\n\n\tcreateNodeAttachment( nodeIndex ) {\n\n\t\tconst self = this;\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\t\tconst lightDef = ( nodeDef.extensions && nodeDef.extensions[ this.name ] ) || {};\n\t\tconst lightIndex = lightDef.light;\n\n\t\tif ( lightIndex === undefined ) return null;\n\n\t\treturn this._loadLight( lightIndex ).then( function ( light ) {\n\n\t\t\treturn parser._getNodeRef( self.cache, lightIndex, light );\n\n\t\t} );\n\n\t}\n\n}\n\n/**\n * Unlit Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n *\n * @private\n */\nclass GLTFMaterialsUnlitExtension {\n\n\tconstructor() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tgetMaterialType() {\n\n\t\treturn MeshBasicMaterial;\n\n\t}\n\n\textendParams( materialParams, materialDef, parser ) {\n\n\t\tconst pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tconst metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tconst array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.setRGB( array[ 0 ], array[ 1 ], array[ 2 ], LinearSRGBColorSpace );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture, SRGBColorSpace ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials Emissive Strength Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/blob/5768b3ce0ef32bc39cdf1bef10b948586635ead3/extensions/2.0/Khronos/KHR_materials_emissive_strength/README.md\n *\n * @private\n */\nclass GLTFMaterialsEmissiveStrengthExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_EMISSIVE_STRENGTH;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst emissiveStrength = materialDef.extensions[ this.name ].emissiveStrength;\n\n\t\tif ( emissiveStrength !== undefined ) {\n\n\t\t\tmaterialParams.emissiveIntensity = emissiveStrength;\n\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n}\n\n/**\n * Clearcoat Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n *\n * @private\n */\nclass GLTFMaterialsClearcoatExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tconst scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials dispersion Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_dispersion\n *\n * @private\n */\nclass GLTFMaterialsDispersionExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_DISPERSION;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.dispersion = extension.dispersion !== undefined ? extension.dispersion : 0;\n\n\t\treturn Promise.resolve();\n\n\t}\n\n}\n\n/**\n * Iridescence Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_iridescence\n *\n * @private\n */\nclass GLTFMaterialsIridescenceExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_IRIDESCENCE;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.iridescenceFactor !== undefined ) {\n\n\t\t\tmaterialParams.iridescence = extension.iridescenceFactor;\n\n\t\t}\n\n\t\tif ( extension.iridescenceTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'iridescenceMap', extension.iridescenceTexture ) );\n\n\t\t}\n\n\t\tif ( extension.iridescenceIor !== undefined ) {\n\n\t\t\tmaterialParams.iridescenceIOR = extension.iridescenceIor;\n\n\t\t}\n\n\t\tif ( materialParams.iridescenceThicknessRange === undefined ) {\n\n\t\t\tmaterialParams.iridescenceThicknessRange = [ 100, 400 ];\n\n\t\t}\n\n\t\tif ( extension.iridescenceThicknessMinimum !== undefined ) {\n\n\t\t\tmaterialParams.iridescenceThicknessRange[ 0 ] = extension.iridescenceThicknessMinimum;\n\n\t\t}\n\n\t\tif ( extension.iridescenceThicknessMaximum !== undefined ) {\n\n\t\t\tmaterialParams.iridescenceThicknessRange[ 1 ] = extension.iridescenceThicknessMaximum;\n\n\t\t}\n\n\t\tif ( extension.iridescenceThicknessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'iridescenceThicknessMap', extension.iridescenceThicknessTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Sheen Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_sheen\n *\n * @private\n */\nclass GLTFMaterialsSheenExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_SHEEN;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tmaterialParams.sheenColor = new Color( 0, 0, 0 );\n\t\tmaterialParams.sheenRoughness = 0;\n\t\tmaterialParams.sheen = 1;\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.sheenColorFactor !== undefined ) {\n\n\t\t\tconst colorFactor = extension.sheenColorFactor;\n\t\t\tmaterialParams.sheenColor.setRGB( colorFactor[ 0 ], colorFactor[ 1 ], colorFactor[ 2 ], LinearSRGBColorSpace );\n\n\t\t}\n\n\t\tif ( extension.sheenRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.sheenRoughness = extension.sheenRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.sheenColorTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'sheenColorMap', extension.sheenColorTexture, SRGBColorSpace ) );\n\n\t\t}\n\n\t\tif ( extension.sheenRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'sheenRoughnessMap', extension.sheenRoughnessTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Transmission Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n * Draft: https://github.com/KhronosGroup/glTF/pull/1698\n *\n * @private\n */\nclass GLTFMaterialsTransmissionExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_TRANSMISSION;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.transmissionFactor !== undefined ) {\n\n\t\t\tmaterialParams.transmission = extension.transmissionFactor;\n\n\t\t}\n\n\t\tif ( extension.transmissionTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'transmissionMap', extension.transmissionTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials Volume Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_volume\n *\n * @private\n */\nclass GLTFMaterialsVolumeExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_VOLUME;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.thickness = extension.thicknessFactor !== undefined ? extension.thicknessFactor : 0;\n\n\t\tif ( extension.thicknessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'thicknessMap', extension.thicknessTexture ) );\n\n\t\t}\n\n\t\tmaterialParams.attenuationDistance = extension.attenuationDistance || Infinity;\n\n\t\tconst colorArray = extension.attenuationColor || [ 1, 1, 1 ];\n\t\tmaterialParams.attenuationColor = new Color().setRGB( colorArray[ 0 ], colorArray[ 1 ], colorArray[ 2 ], LinearSRGBColorSpace );\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials ior Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_ior\n *\n * @private\n */\nclass GLTFMaterialsIorExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_IOR;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.ior = extension.ior !== undefined ? extension.ior : 1.5;\n\n\t\treturn Promise.resolve();\n\n\t}\n\n}\n\n/**\n * Materials specular Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_specular\n *\n * @private\n */\nclass GLTFMaterialsSpecularExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_SPECULAR;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.specularIntensity = extension.specularFactor !== undefined ? extension.specularFactor : 1.0;\n\n\t\tif ( extension.specularTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'specularIntensityMap', extension.specularTexture ) );\n\n\t\t}\n\n\t\tconst colorArray = extension.specularColorFactor || [ 1, 1, 1 ];\n\t\tmaterialParams.specularColor = new Color().setRGB( colorArray[ 0 ], colorArray[ 1 ], colorArray[ 2 ], LinearSRGBColorSpace );\n\n\t\tif ( extension.specularColorTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'specularColorMap', extension.specularColorTexture, SRGBColorSpace ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n\n/**\n * Materials bump Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_materials_bump\n *\n * @private\n */\nclass GLTFMaterialsBumpExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.EXT_MATERIALS_BUMP;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.bumpScale = extension.bumpFactor !== undefined ? extension.bumpFactor : 1.0;\n\n\t\tif ( extension.bumpTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'bumpMap', extension.bumpTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials anisotropy Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_anisotropy\n *\n * @private\n */\nclass GLTFMaterialsAnisotropyExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_ANISOTROPY;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.anisotropyStrength !== undefined ) {\n\n\t\t\tmaterialParams.anisotropy = extension.anisotropyStrength;\n\n\t\t}\n\n\t\tif ( extension.anisotropyRotation !== undefined ) {\n\n\t\t\tmaterialParams.anisotropyRotation = extension.anisotropyRotation;\n\n\t\t}\n\n\t\tif ( extension.anisotropyTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'anisotropyMap', extension.anisotropyTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * BasisU Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu\n *\n * @private\n */\nclass GLTFTextureBasisUExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_BASISU;\n\n\t}\n\n\tloadTexture( textureIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ this.name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extension = textureDef.extensions[ this.name ];\n\t\tconst loader = parser.options.ktx2Loader;\n\n\t\tif ( ! loader ) {\n\n\t\t\tif ( json.extensionsRequired && json.extensionsRequired.indexOf( this.name ) >= 0 ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures' );\n\n\t\t\t} else {\n\n\t\t\t\t// Assumes that the extension is optional and that a fallback texture is present\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, extension.source, loader );\n\n\t}\n\n}\n\n/**\n * WebP Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_webp\n *\n * @private\n */\nclass GLTFTextureWebPExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.EXT_TEXTURE_WEBP;\n\n\t}\n\n\tloadTexture( textureIndex ) {\n\n\t\tconst name = this.name;\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extension = textureDef.extensions[ name ];\n\t\tconst source = json.images[ extension.source ];\n\n\t\tlet loader = parser.textureLoader;\n\t\tif ( source.uri ) {\n\n\t\t\tconst handler = parser.options.manager.getHandler( source.uri );\n\t\t\tif ( handler !== null ) loader = handler;\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, extension.source, loader );\n\n\t}\n\n}\n\n/**\n * AVIF Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_avif\n *\n * @private\n */\nclass GLTFTextureAVIFExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.EXT_TEXTURE_AVIF;\n\n\t}\n\n\tloadTexture( textureIndex ) {\n\n\t\tconst name = this.name;\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extension = textureDef.extensions[ name ];\n\t\tconst source = json.images[ extension.source ];\n\n\t\tlet loader = parser.textureLoader;\n\t\tif ( source.uri ) {\n\n\t\t\tconst handler = parser.options.manager.getHandler( source.uri );\n\t\t\tif ( handler !== null ) loader = handler;\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, extension.source, loader );\n\n\t}\n\n}\n\n/**\n * meshopt BufferView Compression Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_meshopt_compression\n *\n * @private\n */\nclass GLTFMeshoptCompression {\n\n\tconstructor( parser ) {\n\n\t\tthis.name = EXTENSIONS.EXT_MESHOPT_COMPRESSION;\n\t\tthis.parser = parser;\n\n\t}\n\n\tloadBufferView( index ) {\n\n\t\tconst json = this.parser.json;\n\t\tconst bufferView = json.bufferViews[ index ];\n\n\t\tif ( bufferView.extensions && bufferView.extensions[ this.name ] ) {\n\n\t\t\tconst extensionDef = bufferView.extensions[ this.name ];\n\n\t\t\tconst buffer = this.parser.getDependency( 'buffer', extensionDef.buffer );\n\t\t\tconst decoder = this.parser.options.meshoptDecoder;\n\n\t\t\tif ( ! decoder || ! decoder.supported ) {\n\n\t\t\t\tif ( json.extensionsRequired && json.extensionsRequired.indexOf( this.name ) >= 0 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Assumes that the extension is optional and that fallback buffer data is present\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn buffer.then( function ( res ) {\n\n\t\t\t\tconst byteOffset = extensionDef.byteOffset || 0;\n\t\t\t\tconst byteLength = extensionDef.byteLength || 0;\n\n\t\t\t\tconst count = extensionDef.count;\n\t\t\t\tconst stride = extensionDef.byteStride;\n\n\t\t\t\tconst source = new Uint8Array( res, byteOffset, byteLength );\n\n\t\t\t\tif ( decoder.decodeGltfBufferAsync ) {\n\n\t\t\t\t\treturn decoder.decodeGltfBufferAsync( count, stride, source, extensionDef.mode, extensionDef.filter ).then( function ( res ) {\n\n\t\t\t\t\t\treturn res.buffer;\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Support for MeshoptDecoder 0.18 or earlier, without decodeGltfBufferAsync\n\t\t\t\t\treturn decoder.ready.then( function () {\n\n\t\t\t\t\t\tconst result = new ArrayBuffer( count * stride );\n\t\t\t\t\t\tdecoder.decodeGltfBuffer( new Uint8Array( result ), count, stride, source, extensionDef.mode, extensionDef.filter );\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * GPU Instancing Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing\n *\n * @private\n */\nclass GLTFMeshGpuInstancing {\n\n\tconstructor( parser ) {\n\n\t\tthis.name = EXTENSIONS.EXT_MESH_GPU_INSTANCING;\n\t\tthis.parser = parser;\n\n\t}\n\n\tcreateNodeMesh( nodeIndex ) {\n\n\t\tconst json = this.parser.json;\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\tif ( ! nodeDef.extensions || ! nodeDef.extensions[ this.name ] ||\n\t\t\tnodeDef.mesh === undefined ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst meshDef = json.meshes[ nodeDef.mesh ];\n\n\t\t// No Points or Lines + Instancing support yet\n\n\t\tfor ( const primitive of meshDef.primitives ) {\n\n\t\t\tif ( primitive.mode !== WEBGL_CONSTANTS.TRIANGLES &&\n\t\t\t\t primitive.mode !== WEBGL_CONSTANTS.TRIANGLE_STRIP &&\n\t\t\t\t primitive.mode !== WEBGL_CONSTANTS.TRIANGLE_FAN &&\n\t\t\t\t primitive.mode !== undefined ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst extensionDef = nodeDef.extensions[ this.name ];\n\t\tconst attributesDef = extensionDef.attributes;\n\n\t\t// @TODO: Can we support InstancedMesh + SkinnedMesh?\n\n\t\tconst pending = [];\n\t\tconst attributes = {};\n\n\t\tfor ( const key in attributesDef ) {\n\n\t\t\tpending.push( this.parser.getDependency( 'accessor', attributesDef[ key ] ).then( accessor => {\n\n\t\t\t\tattributes[ key ] = accessor;\n\t\t\t\treturn attributes[ key ];\n\n\t\t\t} ) );\n\n\t\t}\n\n\t\tif ( pending.length < 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tpending.push( this.parser.createNodeMesh( nodeIndex ) );\n\n\t\treturn Promise.all( pending ).then( results => {\n\n\t\t\tconst nodeObject = results.pop();\n\t\t\tconst meshes = nodeObject.isGroup ? nodeObject.children : [ nodeObject ];\n\t\t\tconst count = results[ 0 ].count; // All attribute counts should be same\n\t\t\tconst instancedMeshes = [];\n\n\t\t\tfor ( const mesh of meshes ) {\n\n\t\t\t\t// Temporal variables\n\t\t\t\tconst m = new Matrix4();\n\t\t\t\tconst p = new Vector3();\n\t\t\t\tconst q = new Quaternion();\n\t\t\t\tconst s = new Vector3( 1, 1, 1 );\n\n\t\t\t\tconst instancedMesh = new InstancedMesh( mesh.geometry, mesh.material, count );\n\n\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\tif ( attributes.TRANSLATION ) {\n\n\t\t\t\t\t\tp.fromBufferAttribute( attributes.TRANSLATION, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.ROTATION ) {\n\n\t\t\t\t\t\tq.fromBufferAttribute( attributes.ROTATION, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.SCALE ) {\n\n\t\t\t\t\t\ts.fromBufferAttribute( attributes.SCALE, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tinstancedMesh.setMatrixAt( i, m.compose( p, q, s ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Add instance attributes to the geometry, excluding TRS.\n\t\t\t\tfor ( const attributeName in attributes ) {\n\n\t\t\t\t\tif ( attributeName === '_COLOR_0' ) {\n\n\t\t\t\t\t\tconst attr = attributes[ attributeName ];\n\t\t\t\t\t\tinstancedMesh.instanceColor = new InstancedBufferAttribute( attr.array, attr.itemSize, attr.normalized );\n\n\t\t\t\t\t} else if ( attributeName !== 'TRANSLATION' &&\n\t\t\t\t\t\t attributeName !== 'ROTATION' &&\n\t\t\t\t\t\t attributeName !== 'SCALE' ) {\n\n\t\t\t\t\t\tmesh.geometry.setAttribute( attributeName, attributes[ attributeName ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Just in case\n\t\t\t\tObject3D.prototype.copy.call( instancedMesh, mesh );\n\n\t\t\t\tthis.parser.assignFinalMaterial( instancedMesh );\n\n\t\t\t\tinstancedMeshes.push( instancedMesh );\n\n\t\t\t}\n\n\t\t\tif ( nodeObject.isGroup ) {\n\n\t\t\t\tnodeObject.clear();\n\n\t\t\t\tnodeObject.add( ... instancedMeshes );\n\n\t\t\t\treturn nodeObject;\n\n\t\t\t}\n\n\t\t\treturn instancedMeshes[ 0 ];\n\n\t\t} );\n\n\t}\n\n}\n\n/* BINARY EXTENSION */\nconst BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\nconst BINARY_EXTENSION_HEADER_LENGTH = 12;\nconst BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\nclass GLTFBinaryExtension {\n\n\tconstructor( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tconst headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tconst textDecoder = new TextDecoder();\n\n\t\tthis.header = {\n\t\t\tmagic: textDecoder.decode( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tconst chunkContentsLength = this.header.length - BINARY_EXTENSION_HEADER_LENGTH;\n\t\tconst chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tlet chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkContentsLength ) {\n\n\t\t\tconst chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tconst chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tconst contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = textDecoder.decode( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tconst byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * DRACO Mesh Compression Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n *\n * @private\n */\nclass GLTFDracoMeshCompressionExtension {\n\n\tconstructor( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tdecodePrimitive( primitive, parser ) {\n\n\t\tconst json = this.json;\n\t\tconst dracoLoader = this.dracoLoader;\n\t\tconst bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tconst gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tconst threeAttributeMap = {};\n\t\tconst attributeNormalizedMap = {};\n\t\tconst attributeTypeMap = {};\n\n\t\tfor ( const attributeName in gltfAttributeMap ) {\n\n\t\t\tconst threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( const attributeName in primitive.attributes ) {\n\n\t\t\tconst threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tconst accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tconst componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType.name;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( const attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tconst attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tconst normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap, LinearSRGBColorSpace, reject );\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n}\n\n/**\n * Texture Transform Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n *\n * @private\n */\nclass GLTFTextureTransformExtension {\n\n\tconstructor() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\textendTexture( texture, transform ) {\n\n\t\tif ( ( transform.texCoord === undefined || transform.texCoord === texture.channel )\n\t\t\t&& transform.offset === undefined\n\t\t\t&& transform.rotation === undefined\n\t\t\t&& transform.scale === undefined ) {\n\n\t\t\t// See https://github.com/mrdoob/three.js/issues/21819.\n\t\t\treturn texture;\n\n\t\t}\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\ttexture.channel = transform.texCoord;\n\n\t\t}\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Mesh Quantization Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n *\n * @private\n */\nclass GLTFMeshQuantizationExtension {\n\n\tconstructor() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n}\n\n/*********************************/\n/********** INTERPOLATION ********/\n/*********************************/\n\n// Spline Interpolation\n// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\nclass GLTFCubicSplineInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( let i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer;\n\t\tconst values = this.sampleValues;\n\t\tconst stride = this.valueSize;\n\n\t\tconst stride2 = stride * 2;\n\t\tconst stride3 = stride * 3;\n\n\t\tconst td = t1 - t0;\n\n\t\tconst p = ( t - t0 ) / td;\n\t\tconst pp = p * p;\n\t\tconst ppp = pp * p;\n\n\t\tconst offset1 = i1 * stride3;\n\t\tconst offset0 = offset1 - stride3;\n\n\t\tconst s2 = - 2 * ppp + 3 * pp;\n\t\tconst s3 = ppp - pp;\n\t\tconst s0 = 1 - s2;\n\t\tconst s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( let i = 0; i !== stride; i ++ ) {\n\n\t\t\tconst p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tconst m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tconst p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tconst m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nconst _quaternion = new Quaternion();\n\nclass GLTFCubicSplineQuaternionInterpolant extends GLTFCubicSplineInterpolant {\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = super.interpolate_( i1, t0, t, t1 );\n\n\t\t_quaternion.fromArray( result ).normalize().toArray( result );\n\n\t\treturn result;\n\n\t}\n\n}\n\n\n/*********************************/\n/********** INTERNALS ************/\n/*********************************/\n\n/* CONSTANTS */\n\nconst WEBGL_CONSTANTS = {\n\tFLOAT: 5126,\n\t//FLOAT_MAT2: 35674,\n\tFLOAT_MAT3: 35675,\n\tFLOAT_MAT4: 35676,\n\tFLOAT_VEC2: 35664,\n\tFLOAT_VEC3: 35665,\n\tFLOAT_VEC4: 35666,\n\tLINEAR: 9729,\n\tREPEAT: 10497,\n\tSAMPLER_2D: 35678,\n\tPOINTS: 0,\n\tLINES: 1,\n\tLINE_LOOP: 2,\n\tLINE_STRIP: 3,\n\tTRIANGLES: 4,\n\tTRIANGLE_STRIP: 5,\n\tTRIANGLE_FAN: 6,\n\tUNSIGNED_BYTE: 5121,\n\tUNSIGNED_SHORT: 5123\n};\n\nconst WEBGL_COMPONENT_TYPES = {\n\t5120: Int8Array,\n\t5121: Uint8Array,\n\t5122: Int16Array,\n\t5123: Uint16Array,\n\t5125: Uint32Array,\n\t5126: Float32Array\n};\n\nconst WEBGL_FILTERS = {\n\t9728: NearestFilter,\n\t9729: LinearFilter,\n\t9984: NearestMipmapNearestFilter,\n\t9985: LinearMipmapNearestFilter,\n\t9986: NearestMipmapLinearFilter,\n\t9987: LinearMipmapLinearFilter\n};\n\nconst WEBGL_WRAPPINGS = {\n\t33071: ClampToEdgeWrapping,\n\t33648: MirroredRepeatWrapping,\n\t10497: RepeatWrapping\n};\n\nconst WEBGL_TYPE_SIZES = {\n\t'SCALAR': 1,\n\t'VEC2': 2,\n\t'VEC3': 3,\n\t'VEC4': 4,\n\t'MAT2': 4,\n\t'MAT3': 9,\n\t'MAT4': 16\n};\n\nconst ATTRIBUTES = {\n\tPOSITION: 'position',\n\tNORMAL: 'normal',\n\tTANGENT: 'tangent',\n\tTEXCOORD_0: 'uv',\n\tTEXCOORD_1: 'uv1',\n\tTEXCOORD_2: 'uv2',\n\tTEXCOORD_3: 'uv3',\n\tCOLOR_0: 'color',\n\tWEIGHTS_0: 'skinWeight',\n\tJOINTS_0: 'skinIndex',\n};\n\nconst PATH_PROPERTIES = {\n\tscale: 'scale',\n\ttranslation: 'position',\n\trotation: 'quaternion',\n\tweights: 'morphTargetInfluences'\n};\n\nconst INTERPOLATION = {\n\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\tLINEAR: InterpolateLinear,\n\tSTEP: InterpolateDiscrete\n};\n\nconst ALPHA_MODES = {\n\tOPAQUE: 'OPAQUE',\n\tMASK: 'MASK',\n\tBLEND: 'BLEND'\n};\n\n/**\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n *\n * @private\n * @param {Object<string, Material>} cache\n * @return {Material}\n */\nfunction createDefaultMaterial( cache ) {\n\n\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: FrontSide\n\t\t} );\n\n\t}\n\n\treturn cache[ 'DefaultMaterial' ];\n\n}\n\nfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t// Add unknown glTF extensions to an object's userData.\n\n\tfor ( const name in objectDef.extensions ) {\n\n\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t}\n\n\t}\n\n}\n\n/**\n *\n * @private\n * @param {Object3D|Material|BufferGeometry|Object} object\n * @param {GLTF.definition} gltfDef\n */\nfunction assignExtrasToUserData( object, gltfDef ) {\n\n\tif ( gltfDef.extras !== undefined ) {\n\n\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {Array<GLTF.Target>} targets\n * @param {GLTFParser} parser\n * @return {Promise<BufferGeometry>}\n */\nfunction addMorphTargets( geometry, targets, parser ) {\n\n\tlet hasMorphPosition = false;\n\tlet hasMorphNormal = false;\n\tlet hasMorphColor = false;\n\n\tfor ( let i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\tconst target = targets[ i ];\n\n\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\t\tif ( target.COLOR_0 !== undefined ) hasMorphColor = true;\n\n\t\tif ( hasMorphPosition && hasMorphNormal && hasMorphColor ) break;\n\n\t}\n\n\tif ( ! hasMorphPosition && ! hasMorphNormal && ! hasMorphColor ) return Promise.resolve( geometry );\n\n\tconst pendingPositionAccessors = [];\n\tconst pendingNormalAccessors = [];\n\tconst pendingColorAccessors = [];\n\n\tfor ( let i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\tconst target = targets[ i ];\n\n\t\tif ( hasMorphPosition ) {\n\n\t\t\tconst pendingAccessor = target.POSITION !== undefined\n\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t: geometry.attributes.position;\n\n\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t}\n\n\t\tif ( hasMorphNormal ) {\n\n\t\t\tconst pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t: geometry.attributes.normal;\n\n\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t}\n\n\t\tif ( hasMorphColor ) {\n\n\t\t\tconst pendingAccessor = target.COLOR_0 !== undefined\n\t\t\t\t? parser.getDependency( 'accessor', target.COLOR_0 )\n\t\t\t\t: geometry.attributes.color;\n\n\t\t\tpendingColorAccessors.push( pendingAccessor );\n\n\t\t}\n\n\t}\n\n\treturn Promise.all( [\n\t\tPromise.all( pendingPositionAccessors ),\n\t\tPromise.all( pendingNormalAccessors ),\n\t\tPromise.all( pendingColorAccessors )\n\t] ).then( function ( accessors ) {\n\n\t\tconst morphPositions = accessors[ 0 ];\n\t\tconst morphNormals = accessors[ 1 ];\n\t\tconst morphColors = accessors[ 2 ];\n\n\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\tif ( hasMorphColor ) geometry.morphAttributes.color = morphColors;\n\t\tgeometry.morphTargetsRelative = true;\n\n\t\treturn geometry;\n\n\t} );\n\n}\n\n/**\n *\n * @private\n * @param {Mesh} mesh\n * @param {GLTF.Mesh} meshDef\n */\nfunction updateMorphTargets( mesh, meshDef ) {\n\n\tmesh.updateMorphTargets();\n\n\tif ( meshDef.weights !== undefined ) {\n\n\t\tfor ( let i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t}\n\n\t}\n\n\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\tconst targetNames = meshDef.extras.targetNames;\n\n\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\tfor ( let i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t}\n\n\t}\n\n}\n\nfunction createPrimitiveKey( primitiveDef ) {\n\n\tlet geometryKey;\n\n\tconst dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\n\tif ( dracoExtension ) {\n\n\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t} else {\n\n\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t}\n\n\tif ( primitiveDef.targets !== undefined ) {\n\n\t\tfor ( let i = 0, il = primitiveDef.targets.length; i < il; i ++ ) {\n\n\t\t\tgeometryKey += ':' + createAttributesKey( primitiveDef.targets[ i ] );\n\n\t\t}\n\n\t}\n\n\treturn geometryKey;\n\n}\n\nfunction createAttributesKey( attributes ) {\n\n\tlet attributesKey = '';\n\n\tconst keys = Object.keys( attributes ).sort();\n\n\tfor ( let i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t}\n\n\treturn attributesKey;\n\n}\n\nfunction getNormalizedComponentScale( constructor ) {\n\n\t// Reference:\n\t// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization#encoding-quantized-data\n\n\tswitch ( constructor ) {\n\n\t\tcase Int8Array:\n\t\t\treturn 1 / 127;\n\n\t\tcase Uint8Array:\n\t\t\treturn 1 / 255;\n\n\t\tcase Int16Array:\n\t\t\treturn 1 / 32767;\n\n\t\tcase Uint16Array:\n\t\t\treturn 1 / 65535;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported normalized accessor component type.' );\n\n\t}\n\n}\n\nfunction getImageURIMimeType( uri ) {\n\n\tif ( uri.search( /\\.jpe?g($|\\?)/i ) > 0 || uri.search( /^data\\:image\\/jpeg/ ) === 0 ) return 'image/jpeg';\n\tif ( uri.search( /\\.webp($|\\?)/i ) > 0 || uri.search( /^data\\:image\\/webp/ ) === 0 ) return 'image/webp';\n\tif ( uri.search( /\\.ktx2($|\\?)/i ) > 0 || uri.search( /^data\\:image\\/ktx2/ ) === 0 ) return 'image/ktx2';\n\n\treturn 'image/png';\n\n}\n\nconst _identityMatrix = new Matrix4();\n\n/* GLTF PARSER */\n\nclass GLTFParser {\n\n\tconstructor( json = {}, options = {} ) {\n\n\t\tthis.json = json;\n\t\tthis.extensions = {};\n\t\tthis.plugins = {};\n\t\tthis.options = options;\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// associations between Three.js objects and glTF elements\n\t\tthis.associations = new Map();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\t// Node cache\n\t\tthis.nodeCache = {};\n\n\t\t// Object3D instance caches\n\t\tthis.meshCache = { refs: {}, uses: {} };\n\t\tthis.cameraCache = { refs: {}, uses: {} };\n\t\tthis.lightCache = { refs: {}, uses: {} };\n\n\t\tthis.sourceCache = {};\n\t\tthis.textureCache = {};\n\n\t\t// Track node names, to ensure no duplicates\n\t\tthis.nodeNamesUsed = {};\n\n\t\t// Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n\t\t// expensive work of uploading a texture to the GPU off the main thread.\n\n\t\tlet isSafari = false;\n\t\tlet safariVersion = - 1;\n\t\tlet isFirefox = false;\n\t\tlet firefoxVersion = - 1;\n\n\t\tif ( typeof navigator !== 'undefined' ) {\n\n\t\t\tconst userAgent = navigator.userAgent;\n\n\t\t\tisSafari = /^((?!chrome|android).)*safari/i.test( userAgent ) === true;\n\t\t\tconst safariMatch = userAgent.match( /Version\\/(\\d+)/ );\n\t\t\tsafariVersion = isSafari && safariMatch ? parseInt( safariMatch[ 1 ], 10 ) : - 1;\n\n\t\t\tisFirefox = userAgent.indexOf( 'Firefox' ) > - 1;\n\t\t\tfirefoxVersion = isFirefox ? userAgent.match( /Firefox\\/([0-9]+)\\./ )[ 1 ] : - 1;\n\n\t\t}\n\n\t\tif ( typeof createImageBitmap === 'undefined' || ( isSafari && safariVersion < 17 ) || ( isFirefox && firefoxVersion < 98 ) ) {\n\n\t\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\n\t\t} else {\n\n\t\t\tthis.textureLoader = new ImageBitmapLoader( this.options.manager );\n\n\t\t}\n\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\t\tthis.textureLoader.setRequestHeader( this.options.requestHeader );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tsetExtensions( extensions ) {\n\n\t\tthis.extensions = extensions;\n\n\t}\n\n\tsetPlugins( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t}\n\n\tparse( onLoad, onError ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\t\tthis.nodeCache = {};\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\treturn ext._markDefs && ext._markDefs();\n\n\t\t} );\n\n\t\tPromise.all( this._invokeAll( function ( ext ) {\n\n\t\t\treturn ext.beforeRoot && ext.beforeRoot();\n\n\t\t} ) ).then( function () {\n\n\t\t\treturn Promise.all( [\n\n\t\t\t\tparser.getDependencies( 'scene' ),\n\t\t\t\tparser.getDependencies( 'animation' ),\n\t\t\t\tparser.getDependencies( 'camera' ),\n\n\t\t\t] );\n\n\t\t} ).then( function ( dependencies ) {\n\n\t\t\tconst result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\treturn Promise.all( parser._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.afterRoot && ext.afterRoot( result );\n\n\t\t\t} ) ).then( function () {\n\n\t\t\t\tfor ( const scene of result.scenes ) {\n\n\t\t\t\t\tscene.updateMatrixWorld();\n\n\t\t\t\t}\n\n\t\t\t\tonLoad( result );\n\n\t\t\t} );\n\n\t\t} ).catch( onError );\n\n\t}\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t *\n\t * @private\n\t */\n\t_markDefs() {\n\n\t\tconst nodeDefs = this.json.nodes || [];\n\t\tconst skinDefs = this.json.skins || [];\n\t\tconst meshDefs = this.json.meshes || [];\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( let skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tconst joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( let i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Iterate over all nodes, marking references to shared resources,\n\t\t// as well as skeleton joints.\n\t\tfor ( let nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tconst nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.meshCache, nodeDef.mesh );\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.cameraCache, nodeDef.camera );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Counts references to shared node / Object3D resources. These resources\n\t * can be reused, or \"instantiated\", at multiple nodes in the scene\n\t * hierarchy. Mesh, Camera, and Light instances are instantiated and must\n\t * be marked. Non-scenegraph resources (like Materials, Geometries, and\n\t * Textures) can be reused directly and are not marked here.\n\t *\n\t * Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t *\n\t * @private\n\t * @param {Object} cache\n\t * @param {Object3D} index\n\t */\n\t_addNodeRef( cache, index ) {\n\n\t\tif ( index === undefined ) return;\n\n\t\tif ( cache.refs[ index ] === undefined ) {\n\n\t\t\tcache.refs[ index ] = cache.uses[ index ] = 0;\n\n\t\t}\n\n\t\tcache.refs[ index ] ++;\n\n\t}\n\n\t/**\n\t * Returns a reference to a shared resource, cloning it if necessary.\n\t *\n\t * @private\n\t * @param {Object} cache\n\t * @param {number} index\n\t * @param {Object} object\n\t * @return {Object}\n\t */\n\t_getNodeRef( cache, index, object ) {\n\n\t\tif ( cache.refs[ index ] <= 1 ) return object;\n\n\t\tconst ref = object.clone();\n\n\t\t// Propagates mappings to the cloned object, prevents mappings on the\n\t\t// original object from being lost.\n\t\tconst updateMappings = ( original, clone ) => {\n\n\t\t\tconst mappings = this.associations.get( original );\n\t\t\tif ( mappings != null ) {\n\n\t\t\t\tthis.associations.set( clone, mappings );\n\n\t\t\t}\n\n\t\t\tfor ( const [ i, child ] of original.children.entries() ) {\n\n\t\t\t\tupdateMappings( child, clone.children[ i ] );\n\n\t\t\t}\n\n\t\t};\n\n\t\tupdateMappings( object, ref );\n\n\t\tref.name += '_instance_' + ( cache.uses[ index ] ++ );\n\n\t\treturn ref;\n\n\t}\n\n\t_invokeOne( func ) {\n\n\t\tconst extensions = Object.values( this.plugins );\n\t\textensions.push( this );\n\n\t\tfor ( let i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tconst result = func( extensions[ i ] );\n\n\t\t\tif ( result ) return result;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t_invokeAll( func ) {\n\n\t\tconst extensions = Object.values( this.plugins );\n\t\textensions.unshift( this );\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tconst result = func( extensions[ i ] );\n\n\t\t\tif ( result ) pending.push( result );\n\n\t\t}\n\n\t\treturn pending;\n\n\t}\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t *\n\t * @private\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tgetDependency( type, index ) {\n\n\t\tconst cacheKey = type + ':' + index;\n\t\tlet dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadNode && ext.loadNode( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMesh && ext.loadMesh( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadBufferView && ext.loadBufferView( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMaterial && ext.loadMaterial( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadTexture && ext.loadTexture( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadAnimation && ext.loadAnimation( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext != this && ext.getDependency && ext.getDependency( type, index );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( ! dependency ) {\n\n\t\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t}\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t *\n\t * @private\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tgetDependencies( type ) {\n\n\t\tlet dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tconst parser = this;\n\t\t\tconst defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t *\n\t * @private\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tloadBuffer( bufferIndex ) {\n\n\t\tconst bufferDef = this.json.buffers[ bufferIndex ];\n\t\tconst loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tconst options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( LoaderUtils.resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t *\n\t * @private\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tloadBufferView( bufferViewIndex ) {\n\n\t\tconst bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tconst byteLength = bufferViewDef.byteLength || 0;\n\t\t\tconst byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t *\n\t * @private\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tloadAccessor( accessorIndex ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\n\t\tconst accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\tconst itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tconst TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\t\t\tconst normalized = accessorDef.normalized === true;\n\n\t\t\tconst array = new TypedArray( accessorDef.count * itemSize );\n\t\t\treturn Promise.resolve( new BufferAttribute( array, itemSize, normalized ) );\n\n\t\t}\n\n\t\tconst pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tconst bufferView = bufferViews[ 0 ];\n\n\t\t\tconst itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tconst TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tconst elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tconst itemBytes = elementBytes * itemSize;\n\t\t\tconst byteOffset = accessorDef.byteOffset || 0;\n\t\t\tconst byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tconst normalized = accessorDef.normalized === true;\n\t\t\tlet array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tconst ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tconst ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tlet ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tconst itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tconst TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tconst byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tconst byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tconst sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tconst sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\t// Ignore normalized since we copy from sparse\n\t\t\t\tbufferAttribute.normalized = false;\n\n\t\t\t\tfor ( let i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute.normalized = normalized;\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t *\n\t * @private\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture|null>}\n\t */\n\tloadTexture( textureIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\t\tconst textureDef = json.textures[ textureIndex ];\n\t\tconst sourceIndex = textureDef.source;\n\t\tconst sourceDef = json.images[ sourceIndex ];\n\n\t\tlet loader = this.textureLoader;\n\n\t\tif ( sourceDef.uri ) {\n\n\t\t\tconst handler = options.manager.getHandler( sourceDef.uri );\n\t\t\tif ( handler !== null ) loader = handler;\n\n\t\t}\n\n\t\treturn this.loadTextureImage( textureIndex, sourceIndex, loader );\n\n\t}\n\n\tloadTextureImage( textureIndex, sourceIndex, loader ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\t\tconst sourceDef = json.images[ sourceIndex ];\n\n\t\tconst cacheKey = ( sourceDef.uri || sourceDef.bufferView ) + ':' + textureDef.sampler;\n\n\t\tif ( this.textureCache[ cacheKey ] ) {\n\n\t\t\t// See https://github.com/mrdoob/three.js/issues/21559.\n\t\t\treturn this.textureCache[ cacheKey ];\n\n\t\t}\n\n\t\tconst promise = this.loadImageSource( sourceIndex, loader ).then( function ( texture ) {\n\n\t\t\ttexture.flipY = false;\n\n\t\t\ttexture.name = textureDef.name || sourceDef.name || '';\n\n\t\t\tif ( texture.name === '' && typeof sourceDef.uri === 'string' && sourceDef.uri.startsWith( 'data:image/' ) === false ) {\n\n\t\t\t\ttexture.name = sourceDef.uri;\n\n\t\t\t}\n\n\t\t\tconst samplers = json.samplers || {};\n\t\t\tconst sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\t\t\ttexture.generateMipmaps = ! texture.isCompressedTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t\tparser.associations.set( texture, { textures: textureIndex } );\n\n\t\t\treturn texture;\n\n\t\t} ).catch( function () {\n\n\t\t\treturn null;\n\n\t\t} );\n\n\t\tthis.textureCache[ cacheKey ] = promise;\n\n\t\treturn promise;\n\n\t}\n\n\tloadImageSource( sourceIndex, loader ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\n\t\tif ( this.sourceCache[ sourceIndex ] !== undefined ) {\n\n\t\t\treturn this.sourceCache[ sourceIndex ].then( ( texture ) => texture.clone() );\n\n\t\t}\n\n\t\tconst sourceDef = json.images[ sourceIndex ];\n\n\t\tconst URL = self.URL || self.webkitURL;\n\n\t\tlet sourceURI = sourceDef.uri || '';\n\t\tlet isObjectURL = false;\n\n\t\tif ( sourceDef.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', sourceDef.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tconst blob = new Blob( [ bufferView ], { type: sourceDef.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t} else if ( sourceDef.uri === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Image ' + sourceIndex + ' is missing URI and bufferView' );\n\n\t\t}\n\n\t\tconst promise = Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tlet onLoad = resolve;\n\n\t\t\t\tif ( loader.isImageBitmapLoader === true ) {\n\n\t\t\t\t\tonLoad = function ( imageBitmap ) {\n\n\t\t\t\t\t\tconst texture = new Texture( imageBitmap );\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tresolve( texture );\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tloader.load( LoaderUtils.resolveURL( sourceURI, options.path ), onLoad, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( texture, sourceDef );\n\n\t\t\ttexture.userData.mimeType = sourceDef.mimeType || getImageURIMimeType( sourceDef.uri );\n\n\t\t\treturn texture;\n\n\t\t} ).catch( function ( error ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader: Couldn\\'t load texture', sourceURI );\n\t\t\tthrow error;\n\n\t\t} );\n\n\t\tthis.sourceCache[ sourceIndex ] = promise;\n\t\treturn promise;\n\n\t}\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t *\n\t * @private\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @param {string} [colorSpace]\n\t * @return {Promise<Texture>}\n\t */\n\tassignTexture( materialParams, mapName, mapDef, colorSpace ) {\n\n\t\tconst parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture ) return null;\n\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord > 0 ) {\n\n\t\t\t\ttexture = texture.clone();\n\t\t\t\ttexture.channel = mapDef.texCoord;\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tconst transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tconst gltfReference = parser.associations.get( texture );\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\t\t\t\t\tparser.associations.set( texture, gltfReference );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = colorSpace;\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accommodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t *\n\t * @private\n\t * @param {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tassignFinalMaterial( mesh ) {\n\n\t\tconst geometry = mesh.geometry;\n\t\tlet material = mesh.material;\n\n\t\tconst useDerivativeTangents = geometry.attributes.tangent === undefined;\n\t\tconst useVertexColors = geometry.attributes.color !== undefined;\n\t\tconst useFlatShading = geometry.attributes.normal === undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tconst cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tlet pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tconst cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tlet lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\tlineMaterial.map = material.map;\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useDerivativeTangents || useVertexColors || useFlatShading ) {\n\n\t\t\tlet cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( useDerivativeTangents ) cacheKey += 'derivative-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\n\t\t\tlet cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\n\t\t\t\tif ( useDerivativeTangents ) {\n\n\t\t\t\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\t\t\t\tif ( cachedMaterial.normalScale ) cachedMaterial.normalScale.y *= - 1;\n\t\t\t\t\tif ( cachedMaterial.clearcoatNormalScale ) cachedMaterial.clearcoatNormalScale.y *= - 1;\n\n\t\t\t\t}\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\tthis.associations.set( cachedMaterial, this.associations.get( material ) );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t}\n\n\tgetMaterialType( /* materialIndex */ ) {\n\n\t\treturn MeshStandardMaterial;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t *\n\t * @private\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tloadMaterial( materialIndex ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\t\tconst materialDef = json.materials[ materialIndex ];\n\n\t\tlet materialType;\n\t\tconst materialParams = {};\n\t\tconst materialExtensions = materialDef.extensions || {};\n\n\t\tconst pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tconst kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tconst metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tconst array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.setRGB( array[ 0 ], array[ 1 ], array[ 2 ], LinearSRGBColorSpace );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture, SRGBColorSpace ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialType = this._invokeOne( function ( ext ) {\n\n\t\t\t\treturn ext.getMaterialType && ext.getMaterialType( materialIndex );\n\n\t\t\t} );\n\n\t\t\tpending.push( Promise.all( this._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.extendMaterialParams && ext.extendMaterialParams( materialIndex, materialParams );\n\n\t\t\t} ) ) );\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tconst alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tconst scale = materialDef.normalTexture.scale;\n\n\t\t\t\tmaterialParams.normalScale.set( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tconst emissiveFactor = materialDef.emissiveFactor;\n\t\t\tmaterialParams.emissive = new Color().setRGB( emissiveFactor[ 0 ], emissiveFactor[ 1 ], emissiveFactor[ 2 ], LinearSRGBColorSpace );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture, SRGBColorSpace ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tconst material = new materialType( materialParams );\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tparser.associations.set( material, { materials: materialIndex } );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * When Object3D instances are targeted by animation, they need unique names.\n\t *\n\t * @private\n\t * @param {string} originalName\n\t * @return {string}\n\t */\n\tcreateUniqueName( originalName ) {\n\n\t\tconst sanitizedName = PropertyBinding.sanitizeNodeName( originalName || '' );\n\n\t\tif ( sanitizedName in this.nodeNamesUsed ) {\n\n\t\t\treturn sanitizedName + '_' + ( ++ this.nodeNamesUsed[ sanitizedName ] );\n\n\t\t} else {\n\n\t\t\tthis.nodeNamesUsed[ sanitizedName ] = 0;\n\n\t\t\treturn sanitizedName;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @private\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tloadGeometries( primitives ) {\n\n\t\tconst parser = this;\n\t\tconst extensions = this.extensions;\n\t\tconst cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tconst primitive = primitives[ i ];\n\t\t\tconst cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tconst cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tlet geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t *\n\t * @private\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh|Line|Points>}\n\t */\n\tloadMesh( meshIndex ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\n\t\tconst meshDef = json.meshes[ meshIndex ];\n\t\tconst primitives = meshDef.primitives;\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tconst material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tconst materials = results.slice( 0, results.length - 1 );\n\t\t\tconst geometries = results[ results.length - 1 ];\n\n\t\t\tconst meshes = [];\n\n\t\t\tfor ( let i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tconst geometry = geometries[ i ];\n\t\t\t\tconst primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tconst material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See ._markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true ) {\n\n\t\t\t\t\t\t// normalize skin weights to fix malformed assets (see #15319)\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = parser.createUniqueName( meshDef.name || ( 'mesh_' + meshIndex ) );\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tif ( primitive.extensions ) addUnknownExtensionsToUserData( extensions, mesh, primitive );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tparser.associations.set( meshes[ i ], {\n\t\t\t\t\tmeshes: meshIndex,\n\t\t\t\t\tprimitives: i\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\tif ( meshDef.extensions ) addUnknownExtensionsToUserData( extensions, meshes[ 0 ], meshDef );\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tconst group = new Group();\n\n\t\t\tif ( meshDef.extensions ) addUnknownExtensionsToUserData( extensions, group, meshDef );\n\n\t\t\tparser.associations.set( group, { meshes: meshIndex } );\n\n\t\t\tfor ( let i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t *\n\t * @private\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tloadCamera( cameraIndex ) {\n\n\t\tlet camera;\n\t\tconst cameraDef = this.json.cameras[ cameraIndex ];\n\t\tconst params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( - params.xmag, params.xmag, params.ymag, - params.ymag, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = this.createUniqueName( cameraDef.name );\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t *\n\t * @private\n\t * @param {number} skinIndex\n\t * @return {Promise<Skeleton>}\n\t */\n\tloadSkin( skinIndex ) {\n\n\t\tconst skinDef = this.json.skins[ skinIndex ];\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = skinDef.joints.length; i < il; i ++ ) {\n\n\t\t\tpending.push( this._loadNodeShallow( skinDef.joints[ i ] ) );\n\n\t\t}\n\n\t\tif ( skinDef.inverseBindMatrices !== undefined ) {\n\n\t\t\tpending.push( this.getDependency( 'accessor', skinDef.inverseBindMatrices ) );\n\n\t\t} else {\n\n\t\t\tpending.push( null );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tconst inverseBindMatrices = results.pop();\n\t\t\tconst jointNodes = results;\n\n\t\t\t// Note that bones (joint nodes) may or may not be in the\n\t\t\t// scene graph at this time.\n\n\t\t\tconst bones = [];\n\t\t\tconst boneInverses = [];\n\n\t\t\tfor ( let i = 0, il = jointNodes.length; i < il; i ++ ) {\n\n\t\t\t\tconst jointNode = jointNodes[ i ];\n\n\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\tconst mat = new Matrix4();\n\n\t\t\t\t\tif ( inverseBindMatrices !== null ) {\n\n\t\t\t\t\t\tmat.fromArray( inverseBindMatrices.array, i * 16 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinDef.joints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Skeleton( bones, boneInverses );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t *\n\t * @private\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tloadAnimation( animationIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst parser = this;\n\n\t\tconst animationDef = json.animations[ animationIndex ];\n\t\tconst animationName = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\tconst pendingNodes = [];\n\t\tconst pendingInputAccessors = [];\n\t\tconst pendingOutputAccessors = [];\n\t\tconst pendingSamplers = [];\n\t\tconst pendingTargets = [];\n\n\t\tfor ( let i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tconst channel = animationDef.channels[ i ];\n\t\t\tconst sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tconst target = channel.target;\n\t\t\tconst name = target.node;\n\t\t\tconst input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tconst output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tif ( target.node === undefined ) continue;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tconst nodes = dependencies[ 0 ];\n\t\t\tconst inputAccessors = dependencies[ 1 ];\n\t\t\tconst outputAccessors = dependencies[ 2 ];\n\t\t\tconst samplers = dependencies[ 3 ];\n\t\t\tconst targets = dependencies[ 4 ];\n\n\t\t\tconst tracks = [];\n\n\t\t\tfor ( let i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tconst node = nodes[ i ];\n\t\t\t\tconst inputAccessor = inputAccessors[ i ];\n\t\t\t\tconst outputAccessor = outputAccessors[ i ];\n\t\t\t\tconst sampler = samplers[ i ];\n\t\t\t\tconst target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tif ( node.updateMatrix ) {\n\n\t\t\t\t\tnode.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tconst createdTracks = parser._createAnimationTracks( node, inputAccessor, outputAccessor, sampler, target );\n\n\t\t\t\tif ( createdTracks ) {\n\n\t\t\t\t\tfor ( let k = 0; k < createdTracks.length; k ++ ) {\n\n\t\t\t\t\t\ttracks.push( createdTracks[ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( animationName, undefined, tracks );\n\n\t\t} );\n\n\t}\n\n\tcreateNodeMesh( nodeIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst parser = this;\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\tif ( nodeDef.mesh === undefined ) return null;\n\n\t\treturn parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\tconst node = parser._getNodeRef( parser.meshCache, nodeDef.mesh, mesh );\n\n\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\tfor ( let i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t *\n\t * @private\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tloadNode( nodeIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst parser = this;\n\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\tconst nodePending = parser._loadNodeShallow( nodeIndex );\n\n\t\tconst childPending = [];\n\t\tconst childrenDef = nodeDef.children || [];\n\n\t\tfor ( let i = 0, il = childrenDef.length; i < il; i ++ ) {\n\n\t\t\tchildPending.push( parser.getDependency( 'node', childrenDef[ i ] ) );\n\n\t\t}\n\n\t\tconst skeletonPending = nodeDef.skin === undefined\n\t\t\t? Promise.resolve( null )\n\t\t\t: parser.getDependency( 'skin', nodeDef.skin );\n\n\t\treturn Promise.all( [\n\t\t\tnodePending,\n\t\t\tPromise.all( childPending ),\n\t\t\tskeletonPending\n\t\t] ).then( function ( results ) {\n\n\t\t\tconst node = results[ 0 ];\n\t\t\tconst children = results[ 1 ];\n\t\t\tconst skeleton = results[ 2 ];\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\t// This full traverse should be fine because\n\t\t\t\t// child glTF nodes have not been added to this node yet.\n\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\tif ( ! mesh.isSkinnedMesh ) return;\n\n\t\t\t\t\tmesh.bind( skeleton, _identityMatrix );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\tnode.add( children[ i ] );\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t}\n\n\t// ._loadNodeShallow() parses a single node.\n\t// skin and child nodes are created and added in .loadNode() (no '_' prefix).\n\t_loadNodeShallow( nodeIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\t\tconst parser = this;\n\n\t\t// This method is called from .loadNode() and .loadSkin().\n\t\t// Cache a node to avoid duplication.\n\n\t\tif ( this.nodeCache[ nodeIndex ] !== undefined ) {\n\n\t\t\treturn this.nodeCache[ nodeIndex ];\n\n\t\t}\n\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\t// reserve node's name before its dependencies, so the root has the intended name.\n\t\tconst nodeName = nodeDef.name ? parser.createUniqueName( nodeDef.name ) : '';\n\n\t\tconst pending = [];\n\n\t\tconst meshPromise = parser._invokeOne( function ( ext ) {\n\n\t\t\treturn ext.createNodeMesh && ext.createNodeMesh( nodeIndex );\n\n\t\t} );\n\n\t\tif ( meshPromise ) {\n\n\t\t\tpending.push( meshPromise );\n\n\t\t}\n\n\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ).then( function ( camera ) {\n\n\t\t\t\treturn parser._getNodeRef( parser.cameraCache, nodeDef.camera, camera );\n\n\t\t\t} ) );\n\n\t\t}\n\n\t\tparser._invokeAll( function ( ext ) {\n\n\t\t\treturn ext.createNodeAttachment && ext.createNodeAttachment( nodeIndex );\n\n\t\t} ).forEach( function ( promise ) {\n\n\t\t\tpending.push( promise );\n\n\t\t} );\n\n\t\tthis.nodeCache[ nodeIndex ] = Promise.all( pending ).then( function ( objects ) {\n\n\t\t\tlet node;\n\n\t\t\t// .isBone isn't in glTF spec. See ._markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( let i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = nodeName;\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tconst matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! parser.associations.has( node ) ) {\n\n\t\t\t\tparser.associations.set( node, {} );\n\n\t\t\t} else if ( nodeDef.mesh !== undefined && parser.meshCache.refs[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\tconst mapping = parser.associations.get( node );\n\t\t\t\tparser.associations.set( node, { ...mapping } );\n\n\t\t\t}\n\n\t\t\tparser.associations.get( node ).nodes = nodeIndex;\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t\treturn this.nodeCache[ nodeIndex ];\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t *\n\t * @private\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tloadScene( sceneIndex ) {\n\n\t\tconst extensions = this.extensions;\n\t\tconst sceneDef = this.json.scenes[ sceneIndex ];\n\t\tconst parser = this;\n\n\t\t// Loader returns Group, not Scene.\n\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\tconst scene = new Group();\n\t\tif ( sceneDef.name ) scene.name = parser.createUniqueName( sceneDef.name );\n\n\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\tconst nodeIds = sceneDef.nodes || [];\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\tpending.push( parser.getDependency( 'node', nodeIds[ i ] ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( nodes ) {\n\n\t\t\tfor ( let i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tscene.add( nodes[ i ] );\n\n\t\t\t}\n\n\t\t\t// Removes dangling associations, associations that reference a node that\n\t\t\t// didn't make it into the scene.\n\t\t\tconst reduceAssociations = ( node ) => {\n\n\t\t\t\tconst reducedAssociations = new Map();\n\n\t\t\t\tfor ( const [ key, value ] of parser.associations ) {\n\n\t\t\t\t\tif ( key instanceof Material || key instanceof Texture ) {\n\n\t\t\t\t\t\treducedAssociations.set( key, value );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tnode.traverse( ( node ) => {\n\n\t\t\t\t\tconst mappings = parser.associations.get( node );\n\n\t\t\t\t\tif ( mappings != null ) {\n\n\t\t\t\t\t\treducedAssociations.set( node, mappings );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn reducedAssociations;\n\n\t\t\t};\n\n\t\t\tparser.associations = reduceAssociations( scene );\n\n\t\t\treturn scene;\n\n\t\t} );\n\n\t}\n\n\t_createAnimationTracks( node, inputAccessor, outputAccessor, sampler, target ) {\n\n\t\tconst tracks = [];\n\n\t\tconst targetName = node.name ? node.name : node.uuid;\n\t\tconst targetNames = [];\n\n\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\ttargetNames.push( targetName );\n\n\t\t}\n\n\t\tlet TypedKeyframeTrack;\n\n\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\tbreak;\n\n\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\tbreak;\n\n\t\t\tcase PATH_PROPERTIES.translation:\n\t\t\tcase PATH_PROPERTIES.scale:\n\n\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tswitch ( outputAccessor.itemSize ) {\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\tcase 3:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tconst interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\n\t\tconst outputArray = this._getArrayFromAccessor( outputAccessor );\n\n\t\tfor ( let j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\tconst track = new TypedKeyframeTrack(\n\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\tinputAccessor.array,\n\t\t\t\toutputArray,\n\t\t\t\tinterpolation\n\t\t\t);\n\n\t\t\t// Override interpolation with custom factory method.\n\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\tthis._createCubicSplineTrackInterpolant( track );\n\n\t\t\t}\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\t_getArrayFromAccessor( accessor ) {\n\n\t\tlet outputArray = accessor.array;\n\n\t\tif ( accessor.normalized ) {\n\n\t\t\tconst scale = getNormalizedComponentScale( outputArray.constructor );\n\t\t\tconst scaled = new Float32Array( outputArray.length );\n\n\t\t\tfor ( let j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t}\n\n\t\t\toutputArray = scaled;\n\n\t\t}\n\n\t\treturn outputArray;\n\n\t}\n\n\t_createCubicSplineTrackInterpolant( track ) {\n\n\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\tconst interpolantType = ( this instanceof QuaternionKeyframeTrack ) ? GLTFCubicSplineQuaternionInterpolant : GLTFCubicSplineInterpolant;\n\n\t\t\treturn new interpolantType( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t};\n\n\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t}\n\n}\n\n/**\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {GLTF.Primitive} primitiveDef\n * @param {GLTFParser} parser\n */\nfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\tconst attributes = primitiveDef.attributes;\n\n\tconst box = new Box3();\n\n\tif ( attributes.POSITION !== undefined ) {\n\n\t\tconst accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\tconst min = accessor.min;\n\t\tconst max = accessor.max;\n\n\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\tbox.set(\n\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] )\n\t\t\t);\n\n\t\t\tif ( accessor.normalized ) {\n\n\t\t\t\tconst boxScale = getNormalizedComponentScale( WEBGL_COMPONENT_TYPES[ accessor.componentType ] );\n\t\t\t\tbox.min.multiplyScalar( boxScale );\n\t\t\t\tbox.max.multiplyScalar( boxScale );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\treturn;\n\n\t\t}\n\n\t} else {\n\n\t\treturn;\n\n\t}\n\n\tconst targets = primitiveDef.targets;\n\n\tif ( targets !== undefined ) {\n\n\t\tconst maxDisplacement = new Vector3();\n\t\tconst vector = new Vector3();\n\n\t\tfor ( let i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tconst target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\tconst accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\tconst min = accessor.min;\n\t\t\t\tconst max = accessor.max;\n\n\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\n\t\t\t\t\tif ( accessor.normalized ) {\n\n\t\t\t\t\t\tconst boxScale = getNormalizedComponentScale( WEBGL_COMPONENT_TYPES[ accessor.componentType ] );\n\t\t\t\t\t\tvector.multiplyScalar( boxScale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\tbox.expandByVector( maxDisplacement );\n\n\t}\n\n\tgeometry.boundingBox = box;\n\n\tconst sphere = new Sphere();\n\n\tbox.getCenter( sphere.center );\n\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\tgeometry.boundingSphere = sphere;\n\n}\n\n/**\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {GLTF.Primitive} primitiveDef\n * @param {GLTFParser} parser\n * @return {Promise<BufferGeometry>}\n */\nfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\tconst attributes = primitiveDef.attributes;\n\n\tconst pending = [];\n\n\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t.then( function ( accessor ) {\n\n\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t} );\n\n\t}\n\n\tfor ( const gltfAttributeName in attributes ) {\n\n\t\tconst threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t}\n\n\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\tconst accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\tgeometry.setIndex( accessor );\n\n\t\t} );\n\n\t\tpending.push( accessor );\n\n\t}\n\n\tif ( ColorManagement.workingColorSpace !== LinearSRGBColorSpace && 'COLOR_0' in attributes ) {\n\n\t\tconsole.warn( `THREE.GLTFLoader: Converting vertex colors from \"srgb-linear\" to \"${ColorManagement.workingColorSpace}\" not supported.` );\n\n\t}\n\n\tassignExtrasToUserData( geometry, primitiveDef );\n\n\tcomputeBounds( geometry, primitiveDef, parser );\n\n\treturn Promise.all( pending ).then( function () {\n\n\t\treturn primitiveDef.targets !== undefined\n\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t: geometry;\n\n\t} );\n\n}\n\n/**\n * Loader result of `GLTFLoader`.\n *\n * @typedef {Object} GLTFLoader~LoadObject\n * @property {Array<AnimationClip>} animations - An array of animation clips.\n * @property {Object} asset - Meta data about the loaded asset.\n * @property {Array<Camera>} cameras - An array of cameras.\n * @property {GLTFParser} parser - A reference to the internal parser.\n * @property {Group} scene - The default scene.\n * @property {Array<Group>} scenes - glTF assets might define multiple scenes.\n * @property {Object} userData - Additional data.\n **/\n\nexport { GLTFLoader };\n"],"mappings":"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","ignoreList":[]}