{"version":3,"file":"node_modules/three/examples/jsm/loaders/LUTCubeLoader.js","names":["ClampToEdgeWrapping","Data3DTexture","FileLoader","LinearFilter","Loader","UnsignedByteType","Vector3","LUTCubeLoader","constructor","manager","super","this","type","setType","load","url","onLoad","onProgress","onError","loader","setPath","path","setResponseType","text","parse","e","console","error","itemError","input","regExpDataPoints","result","exec","title","Error","size","Number","length","data","Uint8Array","Float32Array","domainMin","domainMax","set","x","y","z","scale","i","texture3D","image","width","height","depth","magFilter","minFilter","wrapS","wrapT","wrapR","generateMipmaps","needsUpdate"],"sources":["node_modules/three/examples/jsm/loaders/LUTCubeLoader.js"],"sourcesContent":["import {\n\tClampToEdgeWrapping,\n\tData3DTexture,\n\tFileLoader,\n\tLinearFilter,\n\tLoader,\n\tUnsignedByteType,\n\tVector3,\n} from 'three';\n\n/**\n * A loader for the Cube LUT format.\n *\n * References:\n * - [Cube LUT Specification]{@link https://web.archive.org/web/20220220033515/https://wwwimages2.adobe.com/content/dam/acom/en/products/speedgrade/cc/pdfs/cube-lut-specification-1.0.pdf}\n *\n * ```js\n * const loader = new LUTCubeLoader();\n * const map = loader.loadAsync( 'luts/Bourbon 64.CUBE' );\n * ```\n *\n * @augments Loader\n * @three_import import { LUTCubeLoader } from 'three/addons/loaders/LUTCubeLoader.js';\n */\nexport class LUTCubeLoader extends Loader {\n\n\t/**\n\t * Constructs a new Cube LUT loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\t/**\n\t\t * The texture type.\n\t\t *\n\t\t * @type {(UnsignedByteType|FloatType)}\n\t\t * @default UnsignedByteType\n\t\t */\n\t\tthis.type = UnsignedByteType;\n\n\t}\n\n\t/**\n\t * Sets the texture type.\n\t *\n\t * @param {(UnsignedByteType|FloatType)} type - The texture type to set.\n\t * @return {LUTCubeLoader} A reference to this loader.\n\t */\n\tsetType( type ) {\n\n\t\tthis.type = type;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded Cube LUT asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function({title:string,size:number,domainMin:Vector3,domainMax:Vector3,texture3D:Data3DTexture})} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'text' );\n\t\tloader.load( url, text => {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( this.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Parses the given Cube LUT data and returns the resulting 3D data texture.\n\t *\n\t * @param {string} input - The raw Cube LUT data as a string.\n\t * @return {{title:string,size:number,domainMin:Vector3,domainMax:Vector3,texture3D:Data3DTexture}} The parsed Cube LUT.\n\t */\n\tparse( input ) {\n\n\t\tconst regExpTitle = /TITLE +\"([^\"]*)\"/;\n\t\tconst regExpSize = /LUT_3D_SIZE +(\\d+)/;\n\t\tconst regExpDomainMin = /DOMAIN_MIN +([\\d.]+) +([\\d.]+) +([\\d.]+)/;\n\t\tconst regExpDomainMax = /DOMAIN_MAX +([\\d.]+) +([\\d.]+) +([\\d.]+)/;\n\t\tconst regExpDataPoints = /^([\\d.e+-]+) +([\\d.e+-]+) +([\\d.e+-]+) *$/gm;\n\n\t\tlet result = regExpTitle.exec( input );\n\t\tconst title = ( result !== null ) ? result[ 1 ] : null;\n\n\t\tresult = regExpSize.exec( input );\n\n\t\tif ( result === null ) {\n\n\t\t\tthrow new Error( 'LUTCubeLoader: Missing LUT_3D_SIZE information' );\n\n\t\t}\n\n\t\tconst size = Number( result[ 1 ] );\n\t\tconst length = size ** 3 * 4;\n\t\tconst data = this.type === UnsignedByteType ? new Uint8Array( length ) : new Float32Array( length );\n\n\t\tconst domainMin = new Vector3( 0, 0, 0 );\n\t\tconst domainMax = new Vector3( 1, 1, 1 );\n\n\t\tresult = regExpDomainMin.exec( input );\n\n\t\tif ( result !== null ) {\n\n\t\t\tdomainMin.set( Number( result[ 1 ] ), Number( result[ 2 ] ), Number( result[ 3 ] ) );\n\n\t\t}\n\n\t\tresult = regExpDomainMax.exec( input );\n\n\t\tif ( result !== null ) {\n\n\t\t\tdomainMax.set( Number( result[ 1 ] ), Number( result[ 2 ] ), Number( result[ 3 ] ) );\n\n\t\t}\n\n\t\tif ( domainMin.x > domainMax.x || domainMin.y > domainMax.y || domainMin.z > domainMax.z ) {\n\n\t\t\tthrow new Error( 'LUTCubeLoader: Invalid input domain' );\n\n\t\t}\n\n\t\tconst scale = this.type === UnsignedByteType ? 255 : 1;\n\t\tlet i = 0;\n\n\t\twhile ( ( result = regExpDataPoints.exec( input ) ) !== null ) {\n\n\t\t\tdata[ i ++ ] = Number( result[ 1 ] ) * scale;\n\t\t\tdata[ i ++ ] = Number( result[ 2 ] ) * scale;\n\t\t\tdata[ i ++ ] = Number( result[ 3 ] ) * scale;\n\t\t\tdata[ i ++ ] = scale;\n\n\t\t}\n\n\t\tconst texture3D = new Data3DTexture();\n\t\ttexture3D.image.data = data;\n\t\ttexture3D.image.width = size;\n\t\ttexture3D.image.height = size;\n\t\ttexture3D.image.depth = size;\n\t\ttexture3D.type = this.type;\n\t\ttexture3D.magFilter = LinearFilter;\n\t\ttexture3D.minFilter = LinearFilter;\n\t\ttexture3D.wrapS = ClampToEdgeWrapping;\n\t\ttexture3D.wrapT = ClampToEdgeWrapping;\n\t\ttexture3D.wrapR = ClampToEdgeWrapping;\n\t\ttexture3D.generateMipmaps = false;\n\t\ttexture3D.needsUpdate = true;\n\n\t\treturn {\n\t\t\ttitle,\n\t\t\tsize,\n\t\t\tdomainMin,\n\t\t\tdomainMax,\n\t\t\ttexture3D,\n\t\t};\n\n\t}\n\n}\n"],"mappings":"OACCA,oBACAC,cACAC,WACAC,aACAC,OACAC,iBACAC,YACM,eAgBA,MAAMC,sBAAsBH,OAOlC,WAAAI,CAAaC,GAEZC,MAAOD,GAQPE,KAAKC,KAAOP,gBAEb,CAQA,OAAAQ,CAASD,GAIR,OAFAD,KAAKC,KAAOA,EAELD,IAER,CAWA,IAAAG,CAAMC,EAAKC,EAAQC,EAAYC,GAE9B,MAAMC,EAAS,IAAIjB,WAAYS,KAAKF,SACpCU,EAAOC,QAAST,KAAKU,MACrBF,EAAOG,gBAAiB,QACxBH,EAAOL,KAAMC,GAAKQ,IAEjB,IAECP,EAAQL,KAAKa,MAAOD,GAErB,CAAE,MAAQE,GAEJP,EAEJA,EAASO,GAITC,QAAQC,MAAOF,GAIhBd,KAAKF,QAAQmB,UAAWb,EAEzB,IAEEE,EAAYC,EAEhB,CAQA,KAAAM,CAAOK,GAEN,MAIMC,EAAmB,8CAEzB,IAAIC,EANgB,mBAMKC,KAAMH,GAC/B,MAAMI,EAAqB,OAAXF,EAAoBA,EAAQ,GAAM,KAIlD,GAFAA,EARmB,qBAQCC,KAAMH,GAEV,OAAXE,EAEJ,MAAM,IAAIG,MAAO,kDAIlB,MAAMC,EAAOC,OAAQL,EAAQ,IACvBM,EAASF,GAAQ,EAAI,EACrBG,EAAO3B,KAAKC,OAASP,iBAAmB,IAAIkC,WAAYF,GAAW,IAAIG,aAAcH,GAErFI,EAAY,IAAInC,QAAS,EAAG,EAAG,GAC/BoC,EAAY,IAAIpC,QAAS,EAAG,EAAG,GAkBrC,GAhBAyB,EAtBwB,2CAsBCC,KAAMH,GAEf,OAAXE,GAEJU,EAAUE,IAAKP,OAAQL,EAAQ,IAAOK,OAAQL,EAAQ,IAAOK,OAAQL,EAAQ,KAI9EA,EA7BwB,2CA6BCC,KAAMH,GAEf,OAAXE,GAEJW,EAAUC,IAAKP,OAAQL,EAAQ,IAAOK,OAAQL,EAAQ,IAAOK,OAAQL,EAAQ,KAIzEU,EAAUG,EAAIF,EAAUE,GAAKH,EAAUI,EAAIH,EAAUG,GAAKJ,EAAUK,EAAIJ,EAAUI,EAEtF,MAAM,IAAIZ,MAAO,uCAIlB,MAAMa,EAAQpC,KAAKC,OAASP,iBAAmB,IAAM,EACrD,IAAI2C,EAAI,EAER,KAAwD,QAA9CjB,EAASD,EAAiBE,KAAMH,KAEzCS,EAAMU,KAASZ,OAAQL,EAAQ,IAAQgB,EACvCT,EAAMU,KAASZ,OAAQL,EAAQ,IAAQgB,EACvCT,EAAMU,KAASZ,OAAQL,EAAQ,IAAQgB,EACvCT,EAAMU,KAASD,EAIhB,MAAME,EAAY,IAAIhD,cActB,OAbAgD,EAAUC,MAAMZ,KAAOA,EACvBW,EAAUC,MAAMC,MAAQhB,EACxBc,EAAUC,MAAME,OAASjB,EACzBc,EAAUC,MAAMG,MAAQlB,EACxBc,EAAUrC,KAAOD,KAAKC,KACtBqC,EAAUK,UAAYnD,aACtB8C,EAAUM,UAAYpD,aACtB8C,EAAUO,MAAQxD,oBAClBiD,EAAUQ,MAAQzD,oBAClBiD,EAAUS,MAAQ1D,oBAClBiD,EAAUU,iBAAkB,EAC5BV,EAAUW,aAAc,EAEjB,CACN3B,QACAE,OACAM,YACAC,YACAO,YAGF","ignoreList":[]}