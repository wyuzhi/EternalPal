import{Loader,TextureLoader,Data3DTexture,RGBAFormat,UnsignedByteType,ClampToEdgeWrapping,LinearFilter}from"three";export class LUTImageLoader extends Loader{constructor(e){super(e),this.flip=!1}load(e,t,a,r){const i=new TextureLoader(this.manager);i.setCrossOrigin(this.crossOrigin),i.setPath(this.path),i.load(e,(a=>{try{let e;e=a.image.width<a.image.height?this._getImageData(a):this._horz2Vert(a),t(this.parse(e.data,Math.min(a.image.width,a.image.height)))}catch(t){r?r(t):console.error(t),this.manager.itemError(e)}}),a,r)}parse(e,t){const a=new Uint8Array(e),r=new Data3DTexture;return r.image.data=a,r.image.width=t,r.image.height=t,r.image.depth=t,r.format=RGBAFormat,r.type=UnsignedByteType,r.magFilter=LinearFilter,r.minFilter=LinearFilter,r.wrapS=ClampToEdgeWrapping,r.wrapT=ClampToEdgeWrapping,r.wrapR=ClampToEdgeWrapping,r.generateMipmaps=!1,r.needsUpdate=!0,{size:t,texture3D:r}}_getImageData(e){const t=e.image.width,a=e.image.height,r=document.createElement("canvas");r.width=t,r.height=a;const i=r.getContext("2d");return!0===this.flip&&(i.scale(1,-1),i.translate(0,-a)),i.drawImage(e.image,0,0),i.getImageData(0,0,t,a)}_horz2Vert(e){const t=e.image.height,a=e.image.width,r=document.createElement("canvas");r.width=t,r.height=a;const i=r.getContext("2d");!0===this.flip&&(i.scale(1,-1),i.translate(0,-a));for(let r=0;r<t;r++){const g=r*t,n=this.flip?a-r*t:r*t;i.drawImage(e.image,g,0,t,t,0,n,t,t)}return i.getImageData(0,0,t,a)}}
//# sourceMappingURL=LUTImageLoader.js.map