{"version":3,"file":"node_modules/three/examples/jsm/loaders/LUTImageLoader.js","names":["Loader","TextureLoader","Data3DTexture","RGBAFormat","UnsignedByteType","ClampToEdgeWrapping","LinearFilter","LUTImageLoader","constructor","manager","super","this","flip","load","url","onLoad","onProgress","onError","loader","setCrossOrigin","crossOrigin","setPath","path","texture","imageData","image","width","height","_getImageData","_horz2Vert","parse","data","Math","min","e","console","error","itemError","dataArray","size","Uint8Array","texture3D","depth","format","type","magFilter","minFilter","wrapS","wrapT","wrapR","generateMipmaps","needsUpdate","canvas","document","createElement","context","getContext","scale","translate","drawImage","getImageData","i","sy","dy"],"sources":["node_modules/three/examples/jsm/loaders/LUTImageLoader.js"],"sourcesContent":["import {\n\tLoader,\n\tTextureLoader,\n\tData3DTexture,\n\tRGBAFormat,\n\tUnsignedByteType,\n\tClampToEdgeWrapping,\n\tLinearFilter,\n} from 'three';\n\n/**\n * A loader for loading LUT images.\n *\n * ```js\n * const loader = new LUTImageLoader();\n * const map = loader.loadAsync( 'luts/NeutralLUT.png' );\n * ```\n *\n * @augments Loader\n * @three_import import { LUTImageLoader } from 'three/addons/loaders/LUTImageLoader.js';\n */\nexport class LUTImageLoader extends Loader {\n\n\t/**\n\t * Constructs a new LUT loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\t/**\n\t\t * Whether to vertically flip the LUT or not.\n\t\t *\n\t\t * Depending on the LUT's origin, the texture has green at the bottom (e.g. for Unreal)\n\t\t * or green at the top (e.g. for Unity URP Color Lookup). If you're using lut image strips\n\t\t * from a Unity pipeline, then set this property to `true`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.flip = false;\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded LUT\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function({size:number,texture3D:Data3DTexture})} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new TextureLoader( this.manager );\n\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, texture => {\n\n\t\t\ttry {\n\n\t\t\t\tlet imageData;\n\n\t\t\t\tif ( texture.image.width < texture.image.height ) {\n\n\t\t\t\t\timageData = this._getImageData( texture );\n\n\t\t\t\t} else {\n\n\t\t\t\t\timageData = this._horz2Vert( texture );\n\n\t\t\t\t}\n\n\t\t\t\tonLoad( this.parse( imageData.data, Math.min( texture.image.width, texture.image.height ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Parses the given LUT data and returns the resulting 3D data texture.\n\t *\n\t * @param {Uint8ClampedArray} dataArray - The raw LUT data.\n\t * @param {number} size - The LUT size.\n\t * @return {{size:number,texture3D:Data3DTexture}} An object representing the parsed LUT.\n\t */\n\tparse( dataArray, size ) {\n\n\t\tconst data = new Uint8Array( dataArray );\n\n\t\tconst texture3D = new Data3DTexture();\n\t\ttexture3D.image.data = data;\n\t\ttexture3D.image.width = size;\n\t\ttexture3D.image.height = size;\n\t\ttexture3D.image.depth = size;\n\t\ttexture3D.format = RGBAFormat;\n\t\ttexture3D.type = UnsignedByteType;\n\t\ttexture3D.magFilter = LinearFilter;\n\t\ttexture3D.minFilter = LinearFilter;\n\t\ttexture3D.wrapS = ClampToEdgeWrapping;\n\t\ttexture3D.wrapT = ClampToEdgeWrapping;\n\t\ttexture3D.wrapR = ClampToEdgeWrapping;\n\t\ttexture3D.generateMipmaps = false;\n\t\ttexture3D.needsUpdate = true;\n\n\t\treturn {\n\t\t\tsize,\n\t\t\ttexture3D,\n\t\t};\n\n\t}\n\n\t// internal\n\n\t_getImageData( texture ) {\n\n\t\tconst width = texture.image.width;\n\t\tconst height = texture.image.height;\n\n\t\tconst canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\n\t\tconst context = canvas.getContext( '2d' );\n\n\t\tif ( this.flip === true ) {\n\n\t\t\tcontext.scale( 1, - 1 );\n\t\t\tcontext.translate( 0, - height );\n\n\t\t}\n\n\t\tcontext.drawImage( texture.image, 0, 0 );\n\n\t\treturn context.getImageData( 0, 0, width, height );\n\n\t}\n\n\t_horz2Vert( texture ) {\n\n\t\tconst width = texture.image.height;\n\t\tconst height = texture.image.width;\n\n\t\tconst canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\n\t\tconst context = canvas.getContext( '2d' );\n\n\t\tif ( this.flip === true ) {\n\n\t\t\tcontext.scale( 1, - 1 );\n\t\t\tcontext.translate( 0, - height );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < width; i ++ ) {\n\n\t\t\tconst sy = i * width;\n\t\t\tconst dy = ( this.flip ) ? height - i * width : i * width;\n\t\t\tcontext.drawImage( texture.image, sy, 0, width, width, 0, dy, width, width );\n\n\t\t}\n\n\t\treturn context.getImageData( 0, 0, width, height );\n\n\t}\n\n}\n"],"mappings":"OACCA,OACAC,cACAC,cACAC,WACAC,iBACAC,oBACAC,iBACM,eAaA,MAAMC,uBAAuBP,OAOnC,WAAAQ,CAAaC,GAEZC,MAAOD,GAYPE,KAAKC,MAAO,CAEb,CAWA,IAAAC,CAAMC,EAAKC,EAAQC,EAAYC,GAE9B,MAAMC,EAAS,IAAIjB,cAAeU,KAAKF,SAEvCS,EAAOC,eAAgBR,KAAKS,aAE5BF,EAAOG,QAASV,KAAKW,MACrBJ,EAAOL,KAAMC,GAAKS,IAEjB,IAEC,IAAIC,EAIHA,EAFID,EAAQE,MAAMC,MAAQH,EAAQE,MAAME,OAE5BhB,KAAKiB,cAAeL,GAIpBZ,KAAKkB,WAAYN,GAI9BR,EAAQJ,KAAKmB,MAAON,EAAUO,KAAMC,KAAKC,IAAKV,EAAQE,MAAMC,MAAOH,EAAQE,MAAME,SAElF,CAAE,MAAQO,GAEJjB,EAEJA,EAASiB,GAITC,QAAQC,MAAOF,GAIhBvB,KAAKF,QAAQ4B,UAAWvB,EAEzB,IAEEE,EAAYC,EAEhB,CASA,KAAAa,CAAOQ,EAAWC,GAEjB,MAAMR,EAAO,IAAIS,WAAYF,GAEvBG,EAAY,IAAIvC,cAetB,OAdAuC,EAAUhB,MAAMM,KAAOA,EACvBU,EAAUhB,MAAMC,MAAQa,EACxBE,EAAUhB,MAAME,OAASY,EACzBE,EAAUhB,MAAMiB,MAAQH,EACxBE,EAAUE,OAASxC,WACnBsC,EAAUG,KAAOxC,iBACjBqC,EAAUI,UAAYvC,aACtBmC,EAAUK,UAAYxC,aACtBmC,EAAUM,MAAQ1C,oBAClBoC,EAAUO,MAAQ3C,oBAClBoC,EAAUQ,MAAQ5C,oBAClBoC,EAAUS,iBAAkB,EAC5BT,EAAUU,aAAc,EAEjB,CACNZ,OACAE,YAGF,CAIA,aAAAb,CAAeL,GAEd,MAAMG,EAAQH,EAAQE,MAAMC,MACtBC,EAASJ,EAAQE,MAAME,OAEvByB,EAASC,SAASC,cAAe,UACvCF,EAAO1B,MAAQA,EACf0B,EAAOzB,OAASA,EAEhB,MAAM4B,EAAUH,EAAOI,WAAY,MAWnC,OATmB,IAAd7C,KAAKC,OAET2C,EAAQE,MAAO,GAAK,GACpBF,EAAQG,UAAW,GAAK/B,IAIzB4B,EAAQI,UAAWpC,EAAQE,MAAO,EAAG,GAE9B8B,EAAQK,aAAc,EAAG,EAAGlC,EAAOC,EAE3C,CAEA,UAAAE,CAAYN,GAEX,MAAMG,EAAQH,EAAQE,MAAME,OACtBA,EAASJ,EAAQE,MAAMC,MAEvB0B,EAASC,SAASC,cAAe,UACvCF,EAAO1B,MAAQA,EACf0B,EAAOzB,OAASA,EAEhB,MAAM4B,EAAUH,EAAOI,WAAY,OAEhB,IAAd7C,KAAKC,OAET2C,EAAQE,MAAO,GAAK,GACpBF,EAAQG,UAAW,GAAK/B,IAIzB,IAAM,IAAIkC,EAAI,EAAGA,EAAInC,EAAOmC,IAAO,CAElC,MAAMC,EAAKD,EAAInC,EACTqC,EAAOpD,KAAU,KAAIgB,EAASkC,EAAInC,EAAQmC,EAAInC,EACpD6B,EAAQI,UAAWpC,EAAQE,MAAOqC,EAAI,EAAGpC,EAAOA,EAAO,EAAGqC,EAAIrC,EAAOA,EAEtE,CAEA,OAAO6B,EAAQK,aAAc,EAAG,EAAGlC,EAAOC,EAE3C","ignoreList":[]}