{"version":3,"file":"node_modules/three/examples/jsm/loaders/MaterialXLoader.js","names":["FileLoader","Loader","TextureLoader","RepeatWrapping","MeshBasicNodeMaterial","MeshPhysicalNodeMaterial","DoubleSide","float","bool","int","vec2","vec3","vec4","color","texture","positionLocal","positionWorld","uv","vertexColor","normalLocal","normalWorld","tangentLocal","tangentWorld","mul","abs","sign","floor","ceil","round","sin","cos","tan","asin","acos","sqrt","exp","clamp","min","max","normalize","length","dot","cross","normalMap","remap","smoothstep","luminance","mx_rgbtohsv","mx_hsvtorgb","mix","saturation","transpose","determinant","inverse","log","reflect","refract","element","mx_ramplr","mx_ramptb","mx_splitlr","mx_splittb","mx_fractal_noise_float","mx_noise_float","mx_cell_noise_float","mx_worley_noise_float","mx_transform_uv","mx_safepower","mx_contrast","mx_srgb_texture_to_lin_rec709","mx_add","mx_atan2","mx_divide","mx_modulo","mx_multiply","mx_power","mx_subtract","mx_timer","mx_frame","mat3","mx_ramp4","mx_invert","mx_ifgreater","mx_ifgreatereq","mx_ifequal","distance","mx_separate","mx_place2d","mx_rotate2d","mx_rotate3d","mx_heighttonormal","mx_unifiednoise2d","mx_unifiednoise3d","colorSpaceLib","MXElement","constructor","name","nodeFunc","params","this","MXElements","MtlXLibrary","forEach","MaterialXLoader","manager","super","load","url","onLoad","onProgress","onError","_onError","e","console","error","setPath","path","async","text","parse","MaterialX","MaterialXNode","materialX","nodeXML","nodePath","warn","parent","node","children","nodeName","nodeGraph","getAttribute","interfaceName","output","type","value","getNodeGraph","nodeX","getRoot","referencePath","hasReference","isConst","getColorSpaceNode","csSource","csTarget","getTexture","filePrefix","getRecursiveAttribute","loader","textureLoader","uri","handler","getHandler","wrapS","wrapT","flipY","getClassFromType","nodeClass","getNode","out","index","defaultGeomProp","test","parseInt","match","startsWith","inNode","getNodeByName","getVector","getMaterialXNode","indexNode","getChildByName","file","textureFile","uvTiling","getNodesByNames","colorSpaceNode","uvNode","undefined","nodeElement","Error","XMLSerializer","serializeToString","nodeToTypeClass","input","getNodes","nodes","child","names","push","getValue","trim","vector","val","split","Number","attribute","setStandardSurfaceToGltfPBR","material","inputs","colorNode","base","base_color","opacityNode","opacity","roughnessNode","specular_roughness","metalnessNode","metalness","specularIntensityNode","specular","specularColorNode","specular_color","iorNode","ior","anisotropyNode","anisotropyRotationNode","specular_anisotropy","specular_rotation","transmissionNode","transmissionColorNode","transmission","transmission_color","thinFilmThicknessNode","thinFilmIorNode","thin_film_thickness","thin_film_ior","sheenNode","sheenColorNode","sheenRoughnessNode","sheen","sheen_color","sheen_roughness","clearcoatNode","clearcoatRoughnessNode","coat","coat_roughness","coat_color","normalNode","normal","emissiveNode","emission","emissionColor","iridescence","transparent","side","setMaterial","toBasicMaterial","toReversed","toPhysicalMaterial","toMaterials","materials","isUnlit","add","materialXNode","resourcePath","nodesXLib","Map","addMaterialXNode","set","get","join","parseNode","childNodeXML","childMXNode","rootXML","DOMParser","parseFromString","documentElement"],"sources":["node_modules/three/examples/jsm/loaders/MaterialXLoader.js"],"sourcesContent":["import {\n\tFileLoader, Loader, TextureLoader, RepeatWrapping, MeshBasicNodeMaterial,\n\tMeshPhysicalNodeMaterial, DoubleSide,\n} from 'three/webgpu';\n\nimport {\n\tfloat, bool, int, vec2, vec3, vec4, color, texture,\n\tpositionLocal, positionWorld, uv, vertexColor,\n\tnormalLocal, normalWorld, tangentLocal, tangentWorld,\n\tmul, abs, sign, floor, ceil, round, sin, cos, tan,\n\tasin, acos, sqrt, exp, clamp, min, max, normalize, length, dot, cross, normalMap,\n\tremap, smoothstep, luminance, mx_rgbtohsv, mx_hsvtorgb,\n\tmix, saturation, transpose, determinant, inverse, log, reflect, refract, element,\n\tmx_ramplr, mx_ramptb, mx_splitlr, mx_splittb,\n\tmx_fractal_noise_float, mx_noise_float, mx_cell_noise_float, mx_worley_noise_float,\n\tmx_transform_uv,\n\tmx_safepower, mx_contrast,\n\tmx_srgb_texture_to_lin_rec709,\n\tmx_add, mx_atan2, mx_divide, mx_modulo, mx_multiply, mx_power, mx_subtract,\n\tmx_timer, mx_frame, mat3, mx_ramp4,\n\tmx_invert, mx_ifgreater, mx_ifgreatereq, mx_ifequal, distance,\n\tmx_separate, mx_place2d, mx_rotate2d, mx_rotate3d, mx_heighttonormal,\n\tmx_unifiednoise2d, mx_unifiednoise3d\n} from 'three/tsl';\n\nconst colorSpaceLib = {\n\tmx_srgb_texture_to_lin_rec709\n};\n\nclass MXElement {\n\n\tconstructor( name, nodeFunc, params = [] ) {\n\n\t\tthis.name = name;\n\t\tthis.nodeFunc = nodeFunc;\n\t\tthis.params = params;\n\n\t}\n\n}\n\n// Ref: https://github.com/mrdoob/three.js/issues/24674\n\n// Enhanced separate node to support multi-output referencing (outx, outy, outz, outw)\n\n// Type/arity-aware MaterialX node wrappers\n\nconst MXElements = [\n\n\t// << Math >>\n\tnew MXElement( 'add', mx_add, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'subtract', mx_subtract, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'multiply', mx_multiply, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'divide', mx_divide, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'modulo', mx_modulo, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'absval', abs, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'sign', sign, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'floor', floor, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'ceil', ceil, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'round', round, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'power', mx_power, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'sin', sin, [ 'in' ] ),\n\tnew MXElement( 'cos', cos, [ 'in' ] ),\n\tnew MXElement( 'tan', tan, [ 'in' ] ),\n\tnew MXElement( 'asin', asin, [ 'in' ] ),\n\tnew MXElement( 'acos', acos, [ 'in' ] ),\n\tnew MXElement( 'atan2', mx_atan2, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'sqrt', sqrt, [ 'in' ] ),\n\tnew MXElement( 'ln', log, [ 'in' ] ),\n\tnew MXElement( 'exp', exp, [ 'in' ] ),\n\tnew MXElement( 'clamp', clamp, [ 'in', 'low', 'high' ] ),\n\tnew MXElement( 'min', min, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'max', max, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'normalize', normalize, [ 'in' ] ),\n\tnew MXElement( 'magnitude', length, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'dotproduct', dot, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'crossproduct', cross, [ 'in' ] ),\n\tnew MXElement( 'distance', distance, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'invert', mx_invert, [ 'in', 'amount' ] ),\n\t//new MtlXElement( 'transformpoint', ... ),\n\t//new MtlXElement( 'transformvector', ... ),\n\t//new MtlXElement( 'transformnormal', ... ),\n\tnew MXElement( 'transformmatrix', mul, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'normalmap', normalMap, [ 'in', 'scale' ] ),\n\tnew MXElement( 'transpose', transpose, [ 'in' ] ),\n\tnew MXElement( 'determinant', determinant, [ 'in' ] ),\n\tnew MXElement( 'invertmatrix', inverse, [ 'in' ] ),\n\tnew MXElement( 'creatematrix', mat3, [ 'in1', 'in2', 'in3' ] ),\n\t//new MtlXElement( 'rotate2d', rotateUV, [ 'in', radians( 'amount' )** ] ),\n\t//new MtlXElement( 'rotate3d', ... ),\n\t//new MtlXElement( 'arrayappend', ... ),\n\t//new MtlXElement( 'dot', ... ),\n\n\tnew MXElement( 'length', length, [ 'in' ] ),\n\tnew MXElement( 'crossproduct', cross, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'floor', floor, [ 'in' ] ),\n\tnew MXElement( 'ceil', ceil, [ 'in' ] ),\n\n\t// << Adjustment >>\n\tnew MXElement( 'remap', remap, [ 'in', 'inlow', 'inhigh', 'outlow', 'outhigh' ] ),\n\tnew MXElement( 'smoothstep', smoothstep, [ 'in', 'low', 'high' ] ),\n\t//new MtlXElement( 'curveadjust', ... ),\n\t//new MtlXElement( 'curvelookup', ... ),\n\tnew MXElement( 'luminance', luminance, [ 'in', 'lumacoeffs' ] ),\n\tnew MXElement( 'rgbtohsv', mx_rgbtohsv, [ 'in' ] ),\n\tnew MXElement( 'hsvtorgb', mx_hsvtorgb, [ 'in' ] ),\n\n\t// << Mix >>\n\tnew MXElement( 'mix', mix, [ 'bg', 'fg', 'mix' ] ),\n\n\t// << Channel >>\n\tnew MXElement( 'combine2', vec2, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'combine3', vec3, [ 'in1', 'in2', 'in3' ] ),\n\tnew MXElement( 'combine4', vec4, [ 'in1', 'in2', 'in3', 'in4' ] ),\n\n\t// << Procedural >>\n\tnew MXElement( 'ramplr', mx_ramplr, [ 'valuel', 'valuer', 'texcoord' ] ),\n\tnew MXElement( 'ramptb', mx_ramptb, [ 'valuet', 'valueb', 'texcoord' ] ),\n\tnew MXElement( 'ramp4', mx_ramp4, [ 'valuetl', 'valuetr', 'valuebl', 'valuebr', 'texcoord' ] ),\n\tnew MXElement( 'splitlr', mx_splitlr, [ 'valuel', 'valuer', 'texcoord' ] ),\n\tnew MXElement( 'splittb', mx_splittb, [ 'valuet', 'valueb', 'texcoord' ] ),\n\tnew MXElement( 'noise2d', mx_noise_float, [ 'texcoord', 'amplitude', 'pivot' ] ),\n\tnew MXElement( 'noise3d', mx_noise_float, [ 'texcoord', 'amplitude', 'pivot' ] ),\n\tnew MXElement( 'fractal3d', mx_fractal_noise_float, [ 'position', 'octaves', 'lacunarity', 'diminish', 'amplitude' ] ),\n\tnew MXElement( 'cellnoise2d', mx_cell_noise_float, [ 'texcoord' ] ),\n\tnew MXElement( 'cellnoise3d', mx_cell_noise_float, [ 'texcoord' ] ),\n\tnew MXElement( 'worleynoise2d', mx_worley_noise_float, [ 'texcoord', 'jitter' ] ),\n\tnew MXElement( 'worleynoise3d', mx_worley_noise_float, [ 'texcoord', 'jitter' ] ),\n\tnew MXElement( 'unifiednoise2d', mx_unifiednoise2d, [ 'type', 'texcoord', 'freq', 'offset', 'jitter', 'outmin', 'outmax', 'clampoutput', 'octaves', 'lacunarity', 'diminish' ] ),\n\tnew MXElement( 'unifiednoise3d', mx_unifiednoise3d, [ 'type', 'texcoord', 'freq', 'offset', 'jitter', 'outmin', 'outmax', 'clampoutput', 'octaves', 'lacunarity', 'diminish' ] ),\n\t// << Supplemental >>\n\t//new MtlXElement( 'tiledimage', ... ),\n\t//new MtlXElement( 'triplanarprojection', triplanarTextures, [ 'filex', 'filey', 'filez' ] ),\n\t//new MtlXElement( 'ramp4', ... ),\n\tnew MXElement( 'place2d', mx_place2d, [ 'texcoord', 'pivot', 'scale', 'rotate', 'offset', 'operationorder' ] ),\n\tnew MXElement( 'safepower', mx_safepower, [ 'in1', 'in2' ] ),\n\tnew MXElement( 'contrast', mx_contrast, [ 'in', 'amount', 'pivot' ] ),\n\t//new MtlXElement( 'hsvadjust', ... ),\n\tnew MXElement( 'saturate', saturation, [ 'in', 'amount' ] ),\n\tnew MXElement( 'extract', element, [ 'in', 'index' ] ),\n\tnew MXElement( 'separate2', mx_separate, [ 'in' ] ),\n\tnew MXElement( 'separate3', mx_separate, [ 'in' ] ),\n\tnew MXElement( 'separate4', mx_separate, [ 'in' ] ),\n\tnew MXElement( 'reflect', reflect, [ 'in', 'normal' ] ),\n\tnew MXElement( 'refract', refract, [ 'in', 'normal', 'ior' ] ),\n\n\tnew MXElement( 'time', mx_timer ),\n\tnew MXElement( 'frame', mx_frame ),\n\tnew MXElement( 'ifgreater', mx_ifgreater, [ 'value1', 'value2', 'in1', 'in2' ] ),\n\tnew MXElement( 'ifgreatereq', mx_ifgreatereq, [ 'value1', 'value2', 'in1', 'in2' ] ),\n\tnew MXElement( 'ifequal', mx_ifequal, [ 'value1', 'value2', 'in1', 'in2' ] ),\n\n\t// Placeholder implementations for unsupported nodes\n\tnew MXElement( 'rotate2d', mx_rotate2d, [ 'in', 'amount' ] ),\n\tnew MXElement( 'rotate3d', mx_rotate3d, [ 'in', 'amount', 'axis' ] ),\n\tnew MXElement( 'heighttonormal', mx_heighttonormal, [ 'in', 'scale', 'texcoord' ] ),\n\n];\n\nconst MtlXLibrary = {};\nMXElements.forEach( element => MtlXLibrary[ element.name ] = element );\n\n/**\n * A loader for the MaterialX format.\n *\n * The node materials loaded with this loader can only be used with {@link WebGPURenderer}.\n *\n * ```js\n * const loader = new MaterialXLoader().setPath( SAMPLE_PATH );\n * const materials = await loader.loadAsync( 'standard_surface_brass_tiled.mtlx' );\n * ```\n *\n * @augments Loader\n * @three_import import { MaterialXLoader } from 'three/addons/loaders/MaterialXLoader.js';\n */\nclass MaterialXLoader extends Loader {\n\n\t/**\n\t * Constructs a new MaterialX loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded MaterialX asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(Object<string,NodeMaterial>)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t * @return {MaterialXLoader} A reference to this loader.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst _onError = function ( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t};\n\n\t\tnew FileLoader( this.manager )\n\t\t\t.setPath( this.path )\n\t\t\t.load( url, async ( text ) => {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( this.parse( text ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parses the given MaterialX data and returns the resulting materials.\n\t *\n\t * Supported standard_surface inputs:\n\t * - base, base_color: Base color/albedo\n\t * - opacity: Alpha/transparency\n\t * - specular_roughness: Surface roughness\n\t * - metalness: Metallic property\n\t * - specular: Specular reflection intensity\n\t * - specular_color: Specular reflection color\n\t * - ior: Index of refraction\n\t * - specular_anisotropy, specular_rotation: Anisotropic reflection\n\t * - transmission, transmission_color: Transmission properties\n\t * - thin_film_thickness, thin_film_ior: Thin film interference\n\t * - sheen, sheen_color, sheen_roughness: Sheen properties\n\t * - normal: Normal map\n\t * - coat, coat_roughness, coat_color: Clearcoat properties\n\t * - emission, emissionColor: Emission properties\n\t *\n\t * @param {string} text - The raw MaterialX data as a string.\n\t * @return {Object<string,NodeMaterial>} A dictionary holding the parse node materials.\n\t */\n\tparse( text ) {\n\n\t\treturn new MaterialX( this.manager, this.path ).parse( text );\n\n\t}\n\n}\n\nclass MaterialXNode {\n\n\tconstructor( materialX, nodeXML, nodePath = '' ) {\n\n\t\tif ( ! materialX || typeof materialX !== 'object' ) {\n\n\t\t\tconsole.warn( 'MaterialXNode: materialX argument is not an object!', { materialX, nodeXML, nodePath } );\n\n\t\t}\n\n\t\tthis.materialX = materialX;\n\t\tthis.nodeXML = nodeXML;\n\t\tthis.nodePath = nodePath ? nodePath + '/' + this.name : this.name;\n\n\t\tthis.parent = null;\n\n\t\tthis.node = null;\n\n\t\tthis.children = [];\n\n\t}\n\n\tget element() {\n\n\t\treturn this.nodeXML.nodeName;\n\n\t}\n\n\tget nodeGraph() {\n\n\t\treturn this.getAttribute( 'nodegraph' );\n\n\t}\n\n\tget nodeName() {\n\n\t\treturn this.getAttribute( 'nodename' );\n\n\t}\n\n\tget interfaceName() {\n\n\t\treturn this.getAttribute( 'interfacename' );\n\n\t}\n\n\tget output() {\n\n\t\treturn this.getAttribute( 'output' );\n\n\t}\n\n\tget name() {\n\n\t\treturn this.getAttribute( 'name' );\n\n\t}\n\n\tget type() {\n\n\t\treturn this.getAttribute( 'type' );\n\n\t}\n\n\tget value() {\n\n\t\treturn this.getAttribute( 'value' );\n\n\t}\n\n\tgetNodeGraph() {\n\n\t\tlet nodeX = this;\n\n\t\twhile ( nodeX !== null ) {\n\n\t\t\tif ( nodeX.element === 'nodegraph' ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tnodeX = nodeX.parent;\n\n\t\t}\n\n\t\treturn nodeX;\n\n\t}\n\n\tgetRoot() {\n\n\t\tlet nodeX = this;\n\n\t\twhile ( nodeX.parent !== null ) {\n\n\t\t\tnodeX = nodeX.parent;\n\n\t\t}\n\n\t\treturn nodeX;\n\n\t}\n\n\tget referencePath() {\n\n\t\tlet referencePath = null;\n\n\t\tif ( this.nodeGraph !== null && this.output !== null ) {\n\n\t\t\treferencePath = this.nodeGraph + '/' + this.output;\n\n\t\t} else if ( this.nodeName !== null || this.interfaceName !== null ) {\n\n\t\t\treferencePath = this.getNodeGraph().nodePath + '/' + ( this.nodeName || this.interfaceName );\n\n\t\t}\n\n\t\treturn referencePath;\n\n\t}\n\n\tget hasReference() {\n\n\t\treturn this.referencePath !== null;\n\n\t}\n\n\tget isConst() {\n\n\t\treturn this.element === 'input' && this.value !== null && this.type !== 'filename';\n\n\t}\n\n\tgetColorSpaceNode() {\n\n\t\tconst csSource = this.getAttribute( 'colorspace' );\n\t\tconst csTarget = this.getRoot().getAttribute( 'colorspace' );\n\n\t\tconst nodeName = `mx_${ csSource }_to_${ csTarget }`;\n\n\t\treturn colorSpaceLib[ nodeName ];\n\n\t}\n\n\tgetTexture() {\n\n\t\tconst filePrefix = this.getRecursiveAttribute( 'fileprefix' ) || '';\n\n\t\tlet loader = this.materialX.textureLoader;\n\t\tconst uri = filePrefix + this.value;\n\n\t\tif ( uri ) {\n\n\t\t\tconst handler = this.materialX.manager.getHandler( uri );\n\t\t\tif ( handler !== null ) loader = handler;\n\n\t\t}\n\n\t\tconst texture = loader.load( uri );\n\t\ttexture.wrapS = texture.wrapT = RepeatWrapping;\n\t\ttexture.flipY = false;\n\n\t\treturn texture;\n\n\t}\n\n\tgetClassFromType( type ) {\n\n\t\tlet nodeClass = null;\n\n\t\tif ( type === 'integer' ) nodeClass = int;\n\t\telse if ( type === 'float' ) nodeClass = float;\n\t\telse if ( type === 'vector2' ) nodeClass = vec2;\n\t\telse if ( type === 'vector3' ) nodeClass = vec3;\n\t\telse if ( type === 'vector4' || type === 'color4' ) nodeClass = vec4;\n\t\telse if ( type === 'color3' ) nodeClass = color;\n\t\telse if ( type === 'boolean' ) nodeClass = bool;\n\n\t\treturn nodeClass;\n\n\t}\n\n\tgetNode( out = null ) {\n\n\t\tlet node = this.node;\n\n\t\tif ( node !== null && out === null ) {\n\n\t\t\treturn node;\n\n\t\t}\n\n\t\t// Handle <input name=\"texcoord\" type=\"vector2\" ... />\n\t\tif (\n\t\t\tthis.element === 'input' &&\n\t\t\tthis.name === 'texcoord' &&\n\t\t\tthis.type === 'vector2'\n\t\t) {\n\n\t\t\t// Try to get index from defaultgeomprop (e.g., \"UV0\" => 0)\n\t\t\tlet index = 0;\n\t\t\tconst defaultGeomProp = this.getAttribute( 'defaultgeomprop' );\n\t\t\tif ( defaultGeomProp && /^UV(\\d+)$/.test( defaultGeomProp ) ) {\n\n\t\t\t\tindex = parseInt( defaultGeomProp.match( /^UV(\\d+)$/ )[ 1 ], 10 );\n\n\t\t\t}\n\n\t\t\tnode = uv( index );\n\n\t\t}\n\n\t\t// Multi-output support for separate/separate3\n\t\tif (\n\t\t\t( this.element === 'separate3' || this.element === 'separate2' || this.element === 'separate4' ) &&\n\t\t\tout && typeof out === 'string' && out.startsWith( 'out' )\n\t\t) {\n\n\t\t\tconst inNode = this.getNodeByName( 'in' );\n\t\t\treturn mx_separate( inNode, out );\n\n\t\t}\n\n\t\t//\n\n\t\tconst type = this.type;\n\n\t\tif ( this.isConst ) {\n\n\t\t\tconst nodeClass = this.getClassFromType( type );\n\n\t\t\tnode = nodeClass( ...this.getVector() );\n\n\t\t} else if ( this.hasReference ) {\n\n\t\t\tif ( this.element === 'output' && this.output && out === null ) {\n\n\t\t\t\tout = this.output;\n\n\t\t\t}\n\n\t\t\tnode = this.materialX.getMaterialXNode( this.referencePath ).getNode( out );\n\n\t\t} else {\n\n\t\t\tconst element = this.element;\n\n\t\t\tif ( element === 'convert' ) {\n\n\t\t\t\tconst nodeClass = this.getClassFromType( type );\n\n\t\t\t\tnode = nodeClass( this.getNodeByName( 'in' ) );\n\n\t\t\t} else if ( element === 'constant' ) {\n\n\t\t\t\tnode = this.getNodeByName( 'value' );\n\n\t\t\t} else if ( element === 'position' ) {\n\n\t\t\t\tconst space = this.getAttribute( 'space' );\n\t\t\t\tnode = space === 'world' ? positionWorld : positionLocal;\n\n\t\t\t} else if ( element === 'normal' ) {\n\n\t\t\t\tconst space = this.getAttribute( 'space' );\n\t\t\t\tnode = space === 'world' ? normalWorld : normalLocal;\n\n\t\t\t} else if ( element === 'tangent' ) {\n\n\t\t\t\tconst space = this.getAttribute( 'space' );\n\t\t\t\tnode = space === 'world' ? tangentWorld : tangentLocal;\n\n\t\t\t} else if ( element === 'texcoord' ) {\n\n\t\t\t\tconst indexNode = this.getChildByName( 'index' );\n\t\t\t\tconst index = indexNode ? parseInt( indexNode.value ) : 0;\n\n\t\t\t\tnode = uv( index );\n\n\t\t\t} else if ( element === 'geomcolor' ) {\n\n\t\t\t\tconst indexNode = this.getChildByName( 'index' );\n\t\t\t\tconst index = indexNode ? parseInt( indexNode.value ) : 0;\n\n\t\t\t\tnode = vertexColor( index );\n\n\t\t\t} else if ( element === 'tiledimage' ) {\n\n\t\t\t\tconst file = this.getChildByName( 'file' );\n\n\t\t\t\tconst textureFile = file.getTexture();\n\t\t\t\tconst uvTiling = mx_transform_uv( ...this.getNodesByNames( [ 'uvtiling', 'uvoffset' ] ) );\n\n\t\t\t\tnode = texture( textureFile, uvTiling );\n\n\t\t\t\tconst colorSpaceNode = file.getColorSpaceNode();\n\n\t\t\t\tif ( colorSpaceNode ) {\n\n\t\t\t\t\tnode = colorSpaceNode( node );\n\n\t\t\t\t}\n\n\t\t\t} else if ( element === 'image' ) {\n\n\t\t\t\tconst file = this.getChildByName( 'file' );\n\t\t\t\tconst uvNode = this.getNodeByName( 'texcoord' );\n\n\t\t\t\tconst textureFile = file.getTexture();\n\n\t\t\t\tnode = texture( textureFile, uvNode );\n\n\t\t\t\tconst colorSpaceNode = file.getColorSpaceNode();\n\n\t\t\t\tif ( colorSpaceNode ) {\n\n\t\t\t\t\tnode = colorSpaceNode( node );\n\n\t\t\t\t}\n\n\t\t\t} else if ( MtlXLibrary[ element ] !== undefined ) {\n\n\t\t\t\tconst nodeElement = MtlXLibrary[ element ];\n\n\t\t\t\tif ( ! nodeElement ) {\n\n\t\t\t\t\tthrow new Error( `THREE.MaterialXLoader: Unexpected node ${ new XMLSerializer().serializeToString( this.nodeXML ) }.` );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! nodeElement.nodeFunc ) {\n\n\t\t\t\t\tthrow new Error( `THREE.MaterialXLoader: Unexpected node 2 ${ new XMLSerializer().serializeToString( this.nodeXML ) }.` );\n\n\t\t\t\t}\n\n\t\t\t\tif ( out !== null ) {\n\n\t\t\t\t\tnode = nodeElement.nodeFunc( ...this.getNodesByNames( ...nodeElement.params ), out );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode = nodeElement.nodeFunc( ...this.getNodesByNames( ...nodeElement.params ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( node === null ) {\n\n\t\t\tconsole.warn( `THREE.MaterialXLoader: Unexpected node ${ new XMLSerializer().serializeToString( this.nodeXML ) }.` );\n\n\t\t\tnode = float( 0 );\n\n\t\t}\n\n\t\t//\n\n\t\tconst nodeToTypeClass = this.getClassFromType( type );\n\n\t\tif ( nodeToTypeClass !== null ) {\n\n\t\t\tnode = nodeToTypeClass( node );\n\n\t\t} else {\n\n\t\t\tconsole.warn( `THREE.MaterialXLoader: Unexpected node ${ new XMLSerializer().serializeToString( this.nodeXML ) }.` );\n\t\t\tnode = float( 0 );\n\n\t\t}\n\n\t\tnode.name = this.name;\n\n\t\tthis.node = node;\n\n\t\treturn node;\n\n\t}\n\n\tgetChildByName( name ) {\n\n\t\tfor ( const input of this.children ) {\n\n\t\t\tif ( input.name === name ) {\n\n\t\t\t\treturn input;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetNodes() {\n\n\t\tconst nodes = {};\n\n\t\tfor ( const input of this.children ) {\n\n\t\t\tconst node = input.getNode();\n\n\t\t\tnodes[ node.name ] = node;\n\n\t\t}\n\n\t\treturn nodes;\n\n\t}\n\n\tgetNodeByName( name ) {\n\n\t\tconst child = this.getChildByName( name );\n\n\t\treturn child ? child.getNode( child.output ) : undefined;\n\n\t}\n\n\tgetNodesByNames( ...names ) {\n\n\t\tconst nodes = [];\n\n\t\tfor ( const name of names ) {\n\n\t\t\tconst node = this.getNodeByName( name );\n\n\t\t\tif ( node ) nodes.push( node );\n\n\t\t}\n\n\t\treturn nodes;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.value.trim();\n\n\t}\n\n\tgetVector() {\n\n\t\tconst vector = [];\n\n\t\tfor ( const val of this.getValue().split( /[,|\\s]/ ) ) {\n\n\t\t\tif ( val !== '' ) {\n\n\t\t\t\tvector.push( Number( val.trim() ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.nodeXML.getAttribute( name );\n\n\t}\n\n\tgetRecursiveAttribute( name ) {\n\n\t\tlet attribute = this.nodeXML.getAttribute( name );\n\n\t\tif ( attribute === null && this.parent !== null ) {\n\n\t\t\tattribute = this.parent.getRecursiveAttribute( name );\n\n\t\t}\n\n\t\treturn attribute;\n\n\t}\n\n\tsetStandardSurfaceToGltfPBR( material ) {\n\n\t\tconst inputs = this.getNodes();\n\n\t\t//\n\n\t\tlet colorNode = null;\n\n\t\tif ( inputs.base && inputs.base_color ) colorNode = mul( inputs.base, inputs.base_color );\n\t\telse if ( inputs.base ) colorNode = inputs.base;\n\t\telse if ( inputs.base_color ) colorNode = inputs.base_color;\n\n\t\t//\n\n\t\tlet opacityNode = null;\n\n\t\tif ( inputs.opacity ) opacityNode = inputs.opacity;\n\n\t\t//\n\n\t\tlet roughnessNode = null;\n\n\t\tif ( inputs.specular_roughness ) roughnessNode = inputs.specular_roughness;\n\n\t\t//\n\n\t\tlet metalnessNode = null;\n\n\t\tif ( inputs.metalness ) metalnessNode = inputs.metalness;\n\n\t\t//\n\n\t\tlet specularIntensityNode = null;\n\n\t\tif ( inputs.specular ) specularIntensityNode = inputs.specular;\n\n\t\t//\n\n\t\tlet specularColorNode = null;\n\n\t\tif ( inputs.specular_color ) specularColorNode = inputs.specular_color;\n\n\t\t//\n\n\t\tlet iorNode = null;\n\n\t\tif ( inputs.ior ) iorNode = inputs.ior;\n\n\t\t//\n\n\t\tlet anisotropyNode = null;\n\t\tlet anisotropyRotationNode = null;\n\n\t\tif ( inputs.specular_anisotropy ) anisotropyNode = inputs.specular_anisotropy;\n\t\tif ( inputs.specular_rotation ) anisotropyRotationNode = inputs.specular_rotation;\n\n\t\t//\n\n\t\tlet transmissionNode = null;\n\t\tlet transmissionColorNode = null;\n\n\t\tif ( inputs.transmission ) transmissionNode = inputs.transmission;\n\t\tif ( inputs.transmission_color ) transmissionColorNode = inputs.transmission_color;\n\n\t\t//\n\n\t\tlet thinFilmThicknessNode = null;\n\t\tlet thinFilmIorNode = null;\n\n\t\tif ( inputs.thin_film_thickness ) thinFilmThicknessNode = inputs.thin_film_thickness;\n\n\t\tif ( inputs.thin_film_ior ) {\n\n\t\t\t// Clamp IOR to valid range for Three.js (1.0 to 2.333)\n\t\t\tthinFilmIorNode = clamp( inputs.thin_film_ior, float( 1.0 ), float( 2.333 ) );\n\n\t\t}\n\n\t\t//\n\n\t\tlet sheenNode = null;\n\t\tlet sheenColorNode = null;\n\t\tlet sheenRoughnessNode = null;\n\n\t\tif ( inputs.sheen ) sheenNode = inputs.sheen;\n\t\tif ( inputs.sheen_color ) sheenColorNode = inputs.sheen_color;\n\t\tif ( inputs.sheen_roughness ) sheenRoughnessNode = inputs.sheen_roughness;\n\n\t\t//\n\n\t\tlet clearcoatNode = null;\n\t\tlet clearcoatRoughnessNode = null;\n\n\t\tif ( inputs.coat ) clearcoatNode = inputs.coat;\n\t\tif ( inputs.coat_roughness ) clearcoatRoughnessNode = inputs.coat_roughness;\n\n\t\tif ( inputs.coat_color ) {\n\n\t\t\tcolorNode = colorNode ? mul( colorNode, inputs.coat_color ) : colorNode;\n\n\t\t}\n\n\t\t//\n\n\t\tlet normalNode = null;\n\n\t\tif ( inputs.normal ) normalNode = inputs.normal;\n\n\t\t//\n\n\t\tlet emissiveNode = null;\n\n\t\tif ( inputs.emission ) emissiveNode = inputs.emission;\n\t\tif ( inputs.emissionColor ) {\n\n\t\t\temissiveNode = emissiveNode ? mul( emissiveNode, inputs.emissionColor ) : emissiveNode;\n\n\t\t}\n\n\t\t//\n\n\t\tmaterial.colorNode = colorNode || color( 0.8, 0.8, 0.8 );\n\t\tmaterial.opacityNode = opacityNode || float( 1.0 );\n\t\tmaterial.roughnessNode = roughnessNode || float( 0.2 );\n\t\tmaterial.metalnessNode = metalnessNode || float( 0 );\n\t\tmaterial.specularIntensityNode = specularIntensityNode || float( 0.5 );\n\t\tmaterial.specularColorNode = specularColorNode || color( 1.0, 1.0, 1.0 );\n\t\tmaterial.iorNode = iorNode || float( 1.5 );\n\t\tmaterial.anisotropyNode = anisotropyNode || float( 0 );\n\t\tmaterial.anisotropyRotationNode = anisotropyRotationNode || float( 0 );\n\t\tmaterial.transmissionNode = transmissionNode || float( 0 );\n\t\tmaterial.transmissionColorNode = transmissionColorNode || color( 1.0, 1.0, 1.0 );\n\t\tmaterial.thinFilmThicknessNode = thinFilmThicknessNode || float( 0 );\n\t\tmaterial.thinFilmIorNode = thinFilmIorNode || float( 1.5 );\n\t\tmaterial.sheenNode = sheenNode || float( 0 );\n\t\tmaterial.sheenColorNode = sheenColorNode || color( 1.0, 1.0, 1.0 );\n\t\tmaterial.sheenRoughnessNode = sheenRoughnessNode || float( 0.5 );\n\t\tmaterial.clearcoatNode = clearcoatNode || float( 0 );\n\t\tmaterial.clearcoatRoughnessNode = clearcoatRoughnessNode || float( 0 );\n\t\tif ( normalNode ) material.normalNode = normalNode;\n\t\tif ( emissiveNode ) material.emissiveNode = emissiveNode;\n\n\t\t// Auto-enable iridescence when thin film parameters are present\n\t\tif ( thinFilmThicknessNode && thinFilmThicknessNode.value !== undefined && thinFilmThicknessNode.value > 0 ) {\n\n\t\t\tmaterial.iridescence = 1.0;\n\n\t\t}\n\n\t\tif ( opacityNode !== null ) {\n\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( transmissionNode !== null ) {\n\n\t\t\tmaterial.side = DoubleSide;\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t}\n\n\t/*setGltfPBR( material ) {\n\n\t\tconst inputs = this.getNodes();\n\n\t\tconsole.log( inputs );\n\n\t}*/\n\n\tsetMaterial( material ) {\n\n\t\tconst element = this.element;\n\n\t\tif ( element === 'gltf_pbr' ) {\n\n\t\t\t//this.setGltfPBR( material );\n\n\t\t} else if ( element === 'standard_surface' ) {\n\n\t\t\tthis.setStandardSurfaceToGltfPBR( material );\n\n\t\t}\n\n\t}\n\n\ttoBasicMaterial() {\n\n\t\tconst material = new MeshBasicNodeMaterial();\n\t\tmaterial.name = this.name;\n\n\t\tfor ( const nodeX of this.children.toReversed() ) {\n\n\t\t\tif ( nodeX.name === 'out' ) {\n\n\t\t\t\tmaterial.colorNode = nodeX.getNode();\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\ttoPhysicalMaterial() {\n\n\t\tconst material = new MeshPhysicalNodeMaterial();\n\t\tmaterial.name = this.name;\n\n\t\tfor ( const nodeX of this.children ) {\n\n\t\t\tconst shaderProperties = this.materialX.getMaterialXNode( nodeX.nodeName );\n\t\t\tshaderProperties.setMaterial( material );\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\ttoMaterials() {\n\n\t\tconst materials = {};\n\n\t\tlet isUnlit = true;\n\n\t\tfor ( const nodeX of this.children ) {\n\n\t\t\tif ( nodeX.element === 'surfacematerial' ) {\n\n\t\t\t\tconst material = nodeX.toPhysicalMaterial();\n\n\t\t\t\tmaterials[ material.name ] = material;\n\n\t\t\t\tisUnlit = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isUnlit ) {\n\n\t\t\tfor ( const nodeX of this.children ) {\n\n\t\t\t\tif ( nodeX.element === 'nodegraph' ) {\n\n\t\t\t\t\tconst material = nodeX.toBasicMaterial();\n\n\t\t\t\t\tmaterials[ material.name ] = material;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tadd( materialXNode ) {\n\n\t\tmaterialXNode.parent = this;\n\n\t\tthis.children.push( materialXNode );\n\n\t}\n\n}\n\nclass MaterialX {\n\n\tconstructor( manager, path ) {\n\n\t\tthis.manager = manager;\n\t\tthis.path = path;\n\t\tthis.resourcePath = '';\n\n\t\tthis.nodesXLib = new Map();\n\t\t//this.nodesXRefLib = new WeakMap();\n\n\t\tthis.textureLoader = new TextureLoader( manager );\n\n\t}\n\n\taddMaterialXNode( materialXNode ) {\n\n\t\tthis.nodesXLib.set( materialXNode.nodePath, materialXNode );\n\n\t}\n\n\t/*getMaterialXNodeFromXML( xmlNode ) {\n\n        return this.nodesXRefLib.get( xmlNode );\n\n    }*/\n\n\tgetMaterialXNode( ...names ) {\n\n\t\treturn this.nodesXLib.get( names.join( '/' ) );\n\n\t}\n\n\tparseNode( nodeXML, nodePath = '' ) {\n\n\t\tconst materialXNode = new MaterialXNode( this, nodeXML, nodePath );\n\t\tif ( materialXNode.nodePath ) this.addMaterialXNode( materialXNode );\n\n\t\tfor ( const childNodeXML of nodeXML.children ) {\n\n\t\t\tconst childMXNode = this.parseNode( childNodeXML, materialXNode.nodePath );\n\t\t\tmaterialXNode.add( childMXNode );\n\n\t\t}\n\n\t\treturn materialXNode;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst rootXML = new DOMParser().parseFromString( text, 'application/xml' ).documentElement;\n\n\t\tthis.textureLoader.setPath( this.path );\n\n\t\t//\n\n\t\tconst materials = this.parseNode( rootXML ).toMaterials();\n\n\t\treturn { materials };\n\n\t}\n\n}\n\nexport { MaterialXLoader };\n"],"mappings":"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","ignoreList":[]}