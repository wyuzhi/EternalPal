import{FileLoader,Loader,Matrix4,Vector3}from"three";import*as fflate from"../libs/fflate.module.js";import{Volume}from"../misc/Volume.js";class NRRDLoader extends Loader{constructor(e){super(e)}load(e,t,r,n){const s=this,a=new FileLoader(s.manager);a.setPath(s.path),a.setResponseType("arraybuffer"),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,(function(r){try{t(s.parse(r))}catch(t){n?n(t):console.error(t),s.manager.itemError(e)}}),r,n)}setSegmentation(e){this.segmentation=e}parse(e){let t=e,r=0;const n=new Int8Array(new Int16Array([1]).buffer)[0]>0,s={};const a=function(e,s){let a=1,i=Uint8Array;switch(e){case"uchar":break;case"schar":i=Int8Array;break;case"ushort":i=Uint16Array,a=2;break;case"sshort":i=Int16Array,a=2;break;case"uint":i=Uint32Array,a=4;break;case"sint":i=Int32Array,a=4;break;case"float":i=Float32Array,a=4;break;case"complex":case"double":i=Float64Array,a=8}let o=new i(t.slice(r,r+=s*a));return true!=n&&(o=function(e,t){const r=new Uint8Array(e.buffer,e.byteOffset,e.byteLength);for(let n=0;n<e.byteLength;n+=t)for(let e=n+t-1,s=n;e>s;e--,s++){const t=r[s];r[s]=r[e],r[e]=t}return e}(o,a)),o}("uchar",e.byteLength),i=a.length;let o,c=null,h=0;for(o=1;o<i;o++)if(10==a[o-1]&&10==a[o]){c=this._parseChars(a,0,o-2),h=o+1;break}if(function(e){let t,r,n,a,i,o,c,h;const l=e.split(/\r?\n/);for(c=0,h=l.length;c<h;c++)i=l[c],i.match(/NRRD\d+/)?s.isNrrd=!0:!i.match(/^#/)&&(o=i.match(/(.*):(.*)/))&&(r=o[1].trim(),t=o[2].trim(),n=_fieldFunctions[r],n?n.call(s,t):s[r]=t);if(!s.isNrrd)throw new Error("Not an NRRD file");if("bz2"===s.encoding||"bzip2"===s.encoding)throw new Error("Bzip is not supported");if(!s.vectors&&(s.vectors=[],s.vectors.push([1,0,0]),s.vectors.push([0,1,0]),s.vectors.push([0,0,1]),s.spacings))for(a=0;a<=2;a++)if(!isNaN(s.spacings[a]))for(let e=0;e<=2;e++)s.vectors[a][e]*=s.spacings[a]}(c),t=a.subarray(h),"gz"===s.encoding.substring(0,2))t=fflate.gunzipSync(new Uint8Array(t));else if("ascii"===s.encoding||"text"===s.encoding||"txt"===s.encoding||"hex"===s.encoding)t=function(e,t,r){let n,a="";t=t||0,r=r||e.length;const i=s.sizes.reduce((function(e,t){return e*t}),1);let o=10;"hex"===s.encoding&&(o=16);const c=new s.__array(i);let h=0,l=parseInt;s.__array!==Float32Array&&s.__array!==Float64Array||(l=parseFloat);for(let s=t;s<r;s++)n=e[s],(n<9||n>13)&&32!==n?a+=String.fromCharCode(n):(""!==a&&(c[h]=l(a,o),h++),a="");return""!==a&&(c[h]=l(a,o),h++),c}(t);else if("raw"===s.encoding){const e=new Uint8Array(t.length);for(let r=0;r<t.length;r++)e[r]=t[r];t=e}t=t.buffer;const l=new Volume;l.header=s,l.segmentation=this.segmentation,l.data=new s.__array(t);const u=l.computeMinMax(),f=u[0],d=u[1];if(l.windowLow=f,l.windowHigh=d,l.dimensions=[s.sizes[0],s.sizes[1],s.sizes[2]],l.xLength=l.dimensions[0],l.yLength=l.dimensions[1],l.zLength=l.dimensions[2],s.vectors){const e=s.vectors.findIndex((e=>0!==e[0])),t=s.vectors.findIndex((e=>0!==e[1])),r=s.vectors.findIndex((e=>0!==e[2])),n=[];e!==t&&e!==r&&t!==r?(n[e]="x",n[t]="y",n[r]="z"):(n[0]="x",n[1]="y",n[2]="z"),l.axisOrder=n}else l.axisOrder=["x","y","z"];const p=(new Vector3).fromArray(s.vectors[0]).length(),g=(new Vector3).fromArray(s.vectors[1]).length(),y=(new Vector3).fromArray(s.vectors[2]).length();l.spacing=[p,g,y],l.matrix=new Matrix4;const m=new Matrix4;if("left-posterior-superior"===s.space?m.set(-1,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,1):"left-anterior-superior"===s.space&&m.set(1,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,1),s.vectors){const e=s.vectors,t=(new Matrix4).set(e[0][0],e[1][0],e[2][0],0,e[0][1],e[1][1],e[2][1],0,e[0][2],e[1][2],e[2][2],0,0,0,0,1),r=(new Matrix4).multiplyMatrices(t,m);l.matrix=r}else l.matrix.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return l.inverseMatrix=new Matrix4,l.inverseMatrix.copy(l.matrix).invert(),l.RASDimensions=[Math.floor(l.xLength*p),Math.floor(l.yLength*g),Math.floor(l.zLength*y)],l.lowerThreshold===-1/0&&(l.lowerThreshold=f),l.upperThreshold===1/0&&(l.upperThreshold=d),l}_parseChars(e,t,r){void 0===t&&(t=0),void 0===r&&(r=e.length);let n="",s=0;for(s=t;s<r;++s)n+=String.fromCharCode(e[s]);return n}}const _fieldFunctions={type:function(e){switch(e){case"uchar":case"unsigned char":case"uint8":case"uint8_t":this.__array=Uint8Array;break;case"signed char":case"int8":case"int8_t":this.__array=Int8Array;break;case"short":case"short int":case"signed short":case"signed short int":case"int16":case"int16_t":this.__array=Int16Array;break;case"ushort":case"unsigned short":case"unsigned short int":case"uint16":case"uint16_t":this.__array=Uint16Array;break;case"int":case"signed int":case"int32":case"int32_t":this.__array=Int32Array;break;case"uint":case"unsigned int":case"uint32":case"uint32_t":this.__array=Uint32Array;break;case"float":this.__array=Float32Array;break;case"double":this.__array=Float64Array;break;default:throw new Error("Unsupported NRRD data type: "+e)}return this.type=e},endian:function(e){return this.endian=e},encoding:function(e){return this.encoding=e},dimension:function(e){return this.dim=parseInt(e,10)},sizes:function(e){let t;return this.sizes=function(){const r=e.split(/\s+/),n=[];for(let e=0,s=r.length;e<s;e++)t=r[e],n.push(parseInt(t,10));return n}()},space:function(e){return this.space=e},"space origin":function(e){return this.space_origin=e.split("(")[1].split(")")[0].split(",")},"space directions":function(e){let t,r;const n=e.match(/\(.*?\)/g);return this.vectors=function(){const e=[];for(let s=0,a=n.length;s<a;s++)r=n[s],e.push(function(){const e=r.slice(1,-1).split(/,/),n=[];for(let r=0,s=e.length;r<s;r++)t=e[r],n.push(parseFloat(t));return n}());return e}()},spacings:function(e){let t;const r=e.split(/\s+/);return this.spacings=function(){const e=[];for(let n=0,s=r.length;n<s;n++)t=r[n],e.push(parseFloat(t));return e}()}};export{NRRDLoader};
//# sourceMappingURL=NRRDLoader.js.map