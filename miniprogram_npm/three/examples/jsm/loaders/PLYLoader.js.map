{"version":3,"file":"node_modules/three/examples/jsm/loaders/PLYLoader.js","names":["BufferGeometry","FileLoader","Float32BufferAttribute","Loader","Color","SRGBColorSpace","_color","PLYLoader","constructor","manager","super","this","propertyNameMapping","customPropertyMapping","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setPropertyNameMapping","mapping","setCustomPropertyNameMapping","data","parseHeader","headerLength","headerText","result","exec","header","comments","elements","objInfo","lines","split","currentElement","make_ply_element_property","propertyValues","property","type","name","countType","itemType","i","length","line","trim","lineValues","lineType","shift","join","format","version","push","undefined","count","parseInt","properties","log","parseASCIINumber","n","parseFloat","parseASCIIElement","tokens","element","empty","list","next","j","createBuffer","buffer","indices","vertices","normals","uvs","faceVertexUvs","colors","faceVertexColors","customProperty","Object","keys","mapElementAttributes","elementNames","map","findAttrName","names","l","includes","attrX","attrY","attrZ","attrNX","attrNY","attrNZ","attrS","attrT","attrR","attrG","attrB","parseASCII","body","matches","ArrayStream","loop","elementDesc","attributeMap","handleElement","postProcess","geometry","setIndex","setAttribute","toNonIndexed","computeBoundingSphere","elementName","cacheEntry","setRGB","r","g","b","elementProperty","vertex_indices","vertex_index","texcoord","binaryReadElement","at","read","valueReader","countReader","size","setPropertyBinaryReaders","little_endian","getBinaryReader","dataview","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","ArrayBuffer","bytes","Uint8Array","cont","startLine","TextDecoder","decode","subarray","hasCRNL","test","c","String","fromCharCode","extractHeaderText","DataView","loc","currentElementCount","parseBinary","arr"],"sources":["node_modules/three/examples/jsm/loaders/PLYLoader.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tColor,\n\tSRGBColorSpace\n} from 'three';\n\nconst _color = new Color();\n\n/**\n * A loader for PLY the PLY format (known as the Polygon\n * File Format or the Stanford Triangle Format).\n *\n * Limitations:\n *  - ASCII decoding assumes file is UTF-8.\n *\n * ```js\n * const loader = new PLYLoader();\n * const geometry = await loader.loadAsync( './models/ply/ascii/dolphins.ply' );\n * scene.add( new THREE.Mesh( geometry ) );\n * ```\n *\n * @augments Loader\n * @three_import import { PLYLoader } from 'three/addons/loaders/PLYLoader.js';\n */\nclass PLYLoader extends Loader {\n\n\t/**\n\t * Constructs a new PLY loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\t// internals\n\n\t\tthis.propertyNameMapping = {};\n\t\tthis.customPropertyMapping = {};\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded PLY asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(BufferGeometry)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Sets a property name mapping that maps default property names\n\t * to custom ones. For example, the following maps the properties\n\t * “diffuse_(red|green|blue)” in the file to standard color names.\n\t *\n\t * ```js\n\t * loader.setPropertyNameMapping( {\n\t * \tdiffuse_red: 'red',\n\t * \tdiffuse_green: 'green',\n\t * \tdiffuse_blue: 'blue'\n\t * } );\n\t * ```\n\t *\n\t * @param {Object} mapping - The mapping dictionary.\n\t */\n\tsetPropertyNameMapping( mapping ) {\n\n\t\tthis.propertyNameMapping = mapping;\n\n\t}\n\n\t/**\n\t * Custom properties outside of the defaults for position, uv, normal\n\t * and color attributes can be added using the setCustomPropertyNameMapping method.\n\t * For example, the following maps the element properties “custom_property_a”\n\t * and “custom_property_b” to an attribute “customAttribute” with an item size of 2.\n\t * Attribute item sizes are set from the number of element properties in the property array.\n\t *\n\t * ```js\n\t * loader.setCustomPropertyNameMapping( {\n\t *\tcustomAttribute: ['custom_property_a', 'custom_property_b'],\n\t * } );\n\t * ```\n\t * @param {Object} mapping - The mapping dictionary.\n\t */\n\tsetCustomPropertyNameMapping( mapping ) {\n\n\t\tthis.customPropertyMapping = mapping;\n\n\t}\n\n\t/**\n\t * Parses the given PLY data and returns the resulting geometry.\n\t *\n\t * @param {ArrayBuffer} data - The raw PLY data as an array buffer.\n\t * @return {BufferGeometry} The parsed geometry.\n\t */\n\tparse( data ) {\n\n\t\tfunction parseHeader( data, headerLength = 0 ) {\n\n\t\t\tconst patternHeader = /^ply([\\s\\S]*)end_header(\\r\\n|\\r|\\n)/;\n\t\t\tlet headerText = '';\n\t\t\tconst result = patternHeader.exec( data );\n\n\t\t\tif ( result !== null ) {\n\n\t\t\t\theaderText = result[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst header = {\n\t\t\t\tcomments: [],\n\t\t\t\telements: [],\n\t\t\t\theaderLength: headerLength,\n\t\t\t\tobjInfo: ''\n\t\t\t};\n\n\t\t\tconst lines = headerText.split( /\\r\\n|\\r|\\n/ );\n\t\t\tlet currentElement;\n\n\t\t\tfunction make_ply_element_property( propertyValues, propertyNameMapping ) {\n\n\t\t\t\tconst property = { type: propertyValues[ 0 ] };\n\n\t\t\t\tif ( property.type === 'list' ) {\n\n\t\t\t\t\tproperty.name = propertyValues[ 3 ];\n\t\t\t\t\tproperty.countType = propertyValues[ 1 ];\n\t\t\t\t\tproperty.itemType = propertyValues[ 2 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tproperty.name = propertyValues[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( property.name in propertyNameMapping ) {\n\n\t\t\t\t\tproperty.name = propertyNameMapping[ property.name ];\n\n\t\t\t\t}\n\n\t\t\t\treturn property;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\t\t\tlet line = lines[ i ];\n\t\t\t\tline = line.trim();\n\n\t\t\t\tif ( line === '' ) continue;\n\n\t\t\t\tconst lineValues = line.split( /\\s+/ );\n\t\t\t\tconst lineType = lineValues.shift();\n\t\t\t\tline = lineValues.join( ' ' );\n\n\t\t\t\tswitch ( lineType ) {\n\n\t\t\t\t\tcase 'format':\n\n\t\t\t\t\t\theader.format = lineValues[ 0 ];\n\t\t\t\t\t\theader.version = lineValues[ 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'comment':\n\n\t\t\t\t\t\theader.comments.push( line );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'element':\n\n\t\t\t\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentElement = {};\n\t\t\t\t\t\tcurrentElement.name = lineValues[ 0 ];\n\t\t\t\t\t\tcurrentElement.count = parseInt( lineValues[ 1 ] );\n\t\t\t\t\t\tcurrentElement.properties = [];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'property':\n\n\t\t\t\t\t\tcurrentElement.properties.push( make_ply_element_property( lineValues, scope.propertyNameMapping ) );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'obj_info':\n\n\t\t\t\t\t\theader.objInfo = line;\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.log( 'unhandled', lineType, lineValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( currentElement !== undefined ) {\n\n\t\t\t\theader.elements.push( currentElement );\n\n\t\t\t}\n\n\t\t\treturn header;\n\n\t\t}\n\n\t\tfunction parseASCIINumber( n, type ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\n\t\t\t\tcase 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\n\n\t\t\t\t\treturn parseInt( n );\n\n\t\t\t\tcase 'float': case 'double': case 'float32': case 'float64':\n\n\t\t\t\t\treturn parseFloat( n );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseASCIIElement( properties, tokens ) {\n\n\t\t\tconst element = {};\n\n\t\t\tfor ( let i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tif ( tokens.empty() ) return null;\n\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\n\n\t\t\t\t\tconst list = [];\n\t\t\t\t\tconst n = parseASCIINumber( tokens.next(), properties[ i ].countType );\n\n\t\t\t\t\tfor ( let j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tif ( tokens.empty() ) return null;\n\n\t\t\t\t\t\tlist.push( parseASCIINumber( tokens.next(), properties[ i ].itemType ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ properties[ i ].name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\telement[ properties[ i ].name ] = parseASCIINumber( tokens.next(), properties[ i ].type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn element;\n\n\t\t}\n\n\t\tfunction createBuffer() {\n\n\t\t\tconst buffer = {\n\t\t\t  indices: [],\n\t\t\t  vertices: [],\n\t\t\t  normals: [],\n\t\t\t  uvs: [],\n\t\t\t  faceVertexUvs: [],\n\t\t\t  colors: [],\n\t\t\t  faceVertexColors: []\n\t\t\t};\n\n\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\n\n\t\t\t  buffer[ customProperty ] = [];\n\n\t\t\t}\n\n\t\t\treturn buffer;\n\n\t\t}\n\n\t\tfunction mapElementAttributes( properties ) {\n\n\t\t\tconst elementNames = properties.map( property => {\n\n\t\t\t\treturn property.name;\n\n\t\t\t} );\n\n\t\t\tfunction findAttrName( names ) {\n\n\t\t\t\tfor ( let i = 0, l = names.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst name = names[ i ];\n\n\t\t\t\t\tif ( elementNames.includes( name ) ) return name;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tattrX: findAttrName( [ 'x', 'px', 'posx' ] ) || 'x',\n\t\t\t\tattrY: findAttrName( [ 'y', 'py', 'posy' ] ) || 'y',\n\t\t\t\tattrZ: findAttrName( [ 'z', 'pz', 'posz' ] ) || 'z',\n\t\t\t\tattrNX: findAttrName( [ 'nx', 'normalx' ] ),\n\t\t\t\tattrNY: findAttrName( [ 'ny', 'normaly' ] ),\n\t\t\t\tattrNZ: findAttrName( [ 'nz', 'normalz' ] ),\n\t\t\t\tattrS: findAttrName( [ 's', 'u', 'texture_u', 'tx' ] ),\n\t\t\t\tattrT: findAttrName( [ 't', 'v', 'texture_v', 'ty' ] ),\n\t\t\t\tattrR: findAttrName( [ 'red', 'diffuse_red', 'r', 'diffuse_r' ] ),\n\t\t\t\tattrG: findAttrName( [ 'green', 'diffuse_green', 'g', 'diffuse_g' ] ),\n\t\t\t\tattrB: findAttrName( [ 'blue', 'diffuse_blue', 'b', 'diffuse_b' ] ),\n\t\t\t};\n\n\t\t}\n\n\t\tfunction parseASCII( data, header ) {\n\n\t\t\t// PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n\t\t\tconst buffer = createBuffer();\n\n\t\t\tconst patternBody = /end_header\\s+(\\S[\\s\\S]*\\S|\\S)\\s*$/;\n\t\t\tlet body, matches;\n\n\t\t\tif ( ( matches = patternBody.exec( data ) ) !== null ) {\n\n\t\t\t\tbody = matches[ 1 ].split( /\\s+/ );\n\n\t\t\t} else {\n\n\t\t\t\tbody = [ ];\n\n\t\t\t}\n\n\t\t\tconst tokens = new ArrayStream( body );\n\n\t\t\tloop: for ( let i = 0; i < header.elements.length; i ++ ) {\n\n\t\t\t\tconst elementDesc = header.elements[ i ];\n\t\t\t\tconst attributeMap = mapElementAttributes( elementDesc.properties );\n\n\t\t\t\tfor ( let j = 0; j < elementDesc.count; j ++ ) {\n\n\t\t\t\t\tconst element = parseASCIIElement( elementDesc.properties, tokens );\n\n\t\t\t\t\tif ( ! element ) break loop;\n\n\t\t\t\t\thandleElement( buffer, elementDesc.name, element, attributeMap );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\tfunction postProcess( buffer ) {\n\n\t\t\tlet geometry = new BufferGeometry();\n\n\t\t\t// mandatory buffer data\n\n\t\t\tif ( buffer.indices.length > 0 ) {\n\n\t\t\t\tgeometry.setIndex( buffer.indices );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( buffer.vertices, 3 ) );\n\n\t\t\t// optional buffer data\n\n\t\t\tif ( buffer.normals.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( buffer.normals, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.uvs.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.uvs, 2 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.colors.length > 0 ) {\n\n\t\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( buffer.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( buffer.faceVertexUvs.length > 0 || buffer.faceVertexColors.length > 0 ) {\n\n\t\t\t\tgeometry = geometry.toNonIndexed();\n\n\t\t\t\tif ( buffer.faceVertexUvs.length > 0 ) geometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.faceVertexUvs, 2 ) );\n\t\t\t\tif ( buffer.faceVertexColors.length > 0 ) geometry.setAttribute( 'color', new Float32BufferAttribute( buffer.faceVertexColors, 3 ) );\n\n\t\t\t}\n\n\t\t\t// custom buffer data\n\n\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\n\n\t\t\t\tif ( buffer[ customProperty ].length > 0 ) {\n\n\t\t\t\t  \tgeometry.setAttribute(\n\t\t\t\t\t\tcustomProperty,\n\t\t\t\t\t\tnew Float32BufferAttribute(\n\t\t\t\t\t  \t\tbuffer[ customProperty ],\n\t\t\t\t\t  \t\tscope.customPropertyMapping[ customProperty ].length\n\t\t\t\t\t\t)\n\t\t\t\t  \t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction handleElement( buffer, elementName, element, cacheEntry ) {\n\n\t\t\tif ( elementName === 'vertex' ) {\n\n\t\t\t\tbuffer.vertices.push( element[ cacheEntry.attrX ], element[ cacheEntry.attrY ], element[ cacheEntry.attrZ ] );\n\n\t\t\t\tif ( cacheEntry.attrNX !== null && cacheEntry.attrNY !== null && cacheEntry.attrNZ !== null ) {\n\n\t\t\t\t\tbuffer.normals.push( element[ cacheEntry.attrNX ], element[ cacheEntry.attrNY ], element[ cacheEntry.attrNZ ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( cacheEntry.attrS !== null && cacheEntry.attrT !== null ) {\n\n\t\t\t\t\tbuffer.uvs.push( element[ cacheEntry.attrS ], element[ cacheEntry.attrT ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( cacheEntry.attrR !== null && cacheEntry.attrG !== null && cacheEntry.attrB !== null ) {\n\n\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\telement[ cacheEntry.attrR ] / 255.0,\n\t\t\t\t\t\telement[ cacheEntry.attrG ] / 255.0,\n\t\t\t\t\t\telement[ cacheEntry.attrB ] / 255.0,\n\t\t\t\t\t\tSRGBColorSpace\n\t\t\t\t\t);\n\n\t\t\t\t\tbuffer.colors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\n\n\t\t\t\t\tfor ( const elementProperty of scope.customPropertyMapping[ customProperty ] ) {\n\n\t\t\t\t\t  buffer[ customProperty ].push( element[ elementProperty ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( elementName === 'face' ) {\n\n\t\t\t\tconst vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\n\t\t\t\tconst texcoord = element.texcoord;\n\n\t\t\t\tif ( vertex_indices.length === 3 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 2 ] );\n\n\t\t\t\t\tif ( texcoord && texcoord.length === 6 ) {\n\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 0 ], texcoord[ 1 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 2 ], texcoord[ 3 ] );\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 4 ], texcoord[ 5 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( vertex_indices.length === 4 ) {\n\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 3 ] );\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 1 ], vertex_indices[ 2 ], vertex_indices[ 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// face colors\n\n\t\t\t\tif ( cacheEntry.attrR !== null && cacheEntry.attrG !== null && cacheEntry.attrB !== null ) {\n\n\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\telement[ cacheEntry.attrR ] / 255.0,\n\t\t\t\t\t\telement[ cacheEntry.attrG ] / 255.0,\n\t\t\t\t\t\telement[ cacheEntry.attrB ] / 255.0,\n\t\t\t\t\t\tSRGBColorSpace\n\t\t\t\t\t);\n\t\t\t\t\tbuffer.faceVertexColors.push( _color.r, _color.g, _color.b );\n\t\t\t\t\tbuffer.faceVertexColors.push( _color.r, _color.g, _color.b );\n\t\t\t\t\tbuffer.faceVertexColors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction binaryReadElement( at, properties ) {\n\n\t\t\tconst element = {};\n\t\t\tlet read = 0;\n\n\t\t\tfor ( let i = 0; i < properties.length; i ++ ) {\n\n\t\t\t\tconst property = properties[ i ];\n\t\t\t\tconst valueReader = property.valueReader;\n\n\t\t\t\tif ( property.type === 'list' ) {\n\n\t\t\t\t\tconst list = [];\n\n\t\t\t\t\tconst n = property.countReader.read( at + read );\n\t\t\t\t\tread += property.countReader.size;\n\n\t\t\t\t\tfor ( let j = 0; j < n; j ++ ) {\n\n\t\t\t\t\t\tlist.push( valueReader.read( at + read ) );\n\t\t\t\t\t\tread += valueReader.size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\telement[ property.name ] = list;\n\n\t\t\t\t} else {\n\n\t\t\t\t\telement[ property.name ] = valueReader.read( at + read );\n\t\t\t\t\tread += valueReader.size;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn [ element, read ];\n\n\t\t}\n\n\t\tfunction setPropertyBinaryReaders( properties, body, little_endian ) {\n\n\t\t\tfunction getBinaryReader( dataview, type, little_endian ) {\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t// correspondences for non-specific length types here match rply:\n\t\t\t\t\tcase 'int8':\tcase 'char':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getInt8( at );\n\n\t\t\t\t\t}, size: 1 };\n\t\t\t\t\tcase 'uint8':\tcase 'uchar':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getUint8( at );\n\n\t\t\t\t\t}, size: 1 };\n\t\t\t\t\tcase 'int16':\tcase 'short':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getInt16( at, little_endian );\n\n\t\t\t\t\t}, size: 2 };\n\t\t\t\t\tcase 'uint16':\tcase 'ushort':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getUint16( at, little_endian );\n\n\t\t\t\t\t}, size: 2 };\n\t\t\t\t\tcase 'int32':\tcase 'int':\t\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getInt32( at, little_endian );\n\n\t\t\t\t\t}, size: 4 };\n\t\t\t\t\tcase 'uint32':\tcase 'uint':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getUint32( at, little_endian );\n\n\t\t\t\t\t}, size: 4 };\n\t\t\t\t\tcase 'float32': case 'float':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getFloat32( at, little_endian );\n\n\t\t\t\t\t}, size: 4 };\n\t\t\t\t\tcase 'float64': case 'double':\treturn { read: ( at ) => {\n\n\t\t\t\t\t\treturn dataview.getFloat64( at, little_endian );\n\n\t\t\t\t\t}, size: 8 };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = properties.length; i < l; i ++ ) {\n\n\t\t\t\tconst property = properties[ i ];\n\n\t\t\t\tif ( property.type === 'list' ) {\n\n\t\t\t\t\tproperty.countReader = getBinaryReader( body, property.countType, little_endian );\n\t\t\t\t\tproperty.valueReader = getBinaryReader( body, property.itemType, little_endian );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tproperty.valueReader = getBinaryReader( body, property.type, little_endian );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseBinary( data, header ) {\n\n\t\t\tconst buffer = createBuffer();\n\n\t\t\tconst little_endian = ( header.format === 'binary_little_endian' );\n\t\t\tconst body = new DataView( data, header.headerLength );\n\t\t\tlet result, loc = 0;\n\n\t\t\tfor ( let currentElement = 0; currentElement < header.elements.length; currentElement ++ ) {\n\n\t\t\t\tconst elementDesc = header.elements[ currentElement ];\n\t\t\t\tconst properties = elementDesc.properties;\n\t\t\t\tconst attributeMap = mapElementAttributes( properties );\n\n\t\t\t\tsetPropertyBinaryReaders( properties, body, little_endian );\n\n\t\t\t\tfor ( let currentElementCount = 0; currentElementCount < elementDesc.count; currentElementCount ++ ) {\n\n\t\t\t\t\tresult = binaryReadElement( loc, properties );\n\t\t\t\t\tloc += result[ 1 ];\n\t\t\t\t\tconst element = result[ 0 ];\n\n\t\t\t\t\thandleElement( buffer, elementDesc.name, element, attributeMap );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn postProcess( buffer );\n\n\t\t}\n\n\t\tfunction extractHeaderText( bytes ) {\n\n\t\t\tlet i = 0;\n\t\t\tlet cont = true;\n\n\t\t\tlet line = '';\n\t\t\tconst lines = [];\n\n\t\t\tconst startLine = new TextDecoder().decode( bytes.subarray( 0, 5 ) );\n\t\t\tconst hasCRNL = /^ply\\r\\n/.test( startLine );\n\n\t\t\tdo {\n\n\t\t\t\tconst c = String.fromCharCode( bytes[ i ++ ] );\n\n\t\t\t\tif ( c !== '\\n' && c !== '\\r' ) {\n\n\t\t\t\t\tline += c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( line === 'end_header' ) cont = false;\n\t\t\t\t\tif ( line !== '' ) {\n\n\t\t\t\t\t\tlines.push( line );\n\t\t\t\t\t\tline = '';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} while ( cont && i < bytes.length );\n\n\t\t\t// ascii section using \\r\\n as line endings\n\t\t\tif ( hasCRNL === true ) i ++;\n\n\t\t\treturn { headerText: lines.join( '\\r' ) + '\\r', headerLength: i };\n\n\t\t}\n\n\t\t//\n\n\t\tlet geometry;\n\t\tconst scope = this;\n\n\t\tif ( data instanceof ArrayBuffer ) {\n\n\t\t\tconst bytes = new Uint8Array( data );\n\t\t\tconst { headerText, headerLength } = extractHeaderText( bytes );\n\t\t\tconst header = parseHeader( headerText, headerLength );\n\n\t\t\tif ( header.format === 'ascii' ) {\n\n\t\t\t\tconst text = new TextDecoder().decode( bytes );\n\n\t\t\t\tgeometry = parseASCII( text, header );\n\n\t\t\t} else {\n\n\t\t\t\tgeometry = parseBinary( data, header );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgeometry = parseASCII( data, parseHeader( data ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ArrayStream {\n\n\tconstructor( arr ) {\n\n\t\tthis.arr = arr;\n\t\tthis.i = 0;\n\n\t}\n\n\tempty() {\n\n\t\treturn this.i >= this.arr.length;\n\n\t}\n\n\tnext() {\n\n\t\treturn this.arr[ this.i ++ ];\n\n\t}\n\n}\n\nexport { PLYLoader };\n"],"mappings":"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","ignoreList":[]}