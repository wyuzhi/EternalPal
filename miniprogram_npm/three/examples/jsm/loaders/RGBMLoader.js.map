{"version":3,"file":"node_modules/three/examples/jsm/loaders/RGBMLoader.js","names":["DataTextureLoader","RGBAFormat","LinearFilter","CubeTexture","HalfFloatType","DataUtils","RGBMLoader","constructor","manager","super","this","type","maxRange","setDataType","value","setMaxRange","loadCubemap","urls","onLoad","onProgress","onError","texture","i","images","undefined","loaded","scope","loadTexture","load","image","needsUpdate","length","format","minFilter","generateMipmaps","loadCubemapAsync","Promise","resolve","reject","parse","buffer","img","UPNG","decode","rgba","toRGBA8","data","Uint8Array","size","width","height","output","Uint16Array","Float32Array","r","g","b","a","toHalfFloat","Math","min","flipY","out","w","h","tabs","acTL","decodeImage","frms","frames","len","empty","prev","frm","fx","rect","x","fy","y","fw","fh","fdata","j","blend","_copyTile","push","slice","dispose","area","bpp","_getBPP","bpl","ceil","bf","bf32","Uint32Array","ctype","depth","rs","_bin","readUshort","qarea","ts","ti","tr","tg","tb","qi","p","ap","tl","s0","t0","cj","gr","di","off","to","al","buff","fd","text","keyw","bfr","offset","bin","rUs","rUi","readUint","dd","doff","foff","mgck","Error","readASCII","_IHDR","num_frames","num_plays","fr","_decompress","rct","del","delay","round","nz","nextZero","_inflate","readUTF8","cflag","readBytes","pl","compress","interlace","filter","inflateRaw","_filterZero","_readInterlace","N","W","H","v","C","R","m","J","Q","X","u","d","V","n","A","e","l","M","I","Z","c","K","S","D","T","z","_","q","$","s","Y","set","byteOffset","t","k","cbpp","starting_row","starting_col","row_increment","col_increment","pass","ri","ci","sw","sh","cr","cc","bpll","val","row","col","cdi","ii","paeth","_paeth","pa","pb","pc","writeUshort","writeUint","String","fromCharCode","writeASCII","charCodeAt","arr","pad","ns","toString","decodeURIComponent","sb","tw","th","xoff","yoff","mode","si","fa","fg","fb","ba","br","bg","bb","ifa","oa","ioa"],"sources":["node_modules/three/examples/jsm/loaders/RGBMLoader.js"],"sourcesContent":["import {\n\tDataTextureLoader,\n\tRGBAFormat,\n\tLinearFilter,\n\tCubeTexture,\n\tHalfFloatType,\n\tDataUtils\n} from 'three';\n\n/**\n * A loader for the RGBM HDR texture format.\n *\n * ```js\n * const loader = new RGBMLoader();\n * loader.setMaxRange( 16 );\n *\n * const texture = await loader.loadAsync( 'textures/memorial.png' );\n * ```\n *\n * @augments DataTextureLoader\n * @three_import import { RGBMLoader } from 'three/addons/loaders/RGBMLoader.js';\n */\nclass RGBMLoader extends DataTextureLoader {\n\n\t/**\n\t * Constructs a new RGBM loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\t/**\n\t\t * The texture type.\n\t\t *\n\t\t * @type {(HalfFloatType|FloatType)}\n\t\t * @default HalfFloatType\n\t\t */\n\t\tthis.type = HalfFloatType;\n\n\t\t/**\n\t\t * More information about this property at [The difference between RGBM and RGBD]{@link https://iwasbeingirony.blogspot.com/2010/06/difference-between-rgbm-and-rgbd.html}\n\t\t *\n\t\t * @type {(7|16)}\n\t\t * @default 7\n\t\t */\n\t\tthis.maxRange = 7;\n\n\t}\n\n\t/**\n\t * Sets the texture type.\n\t *\n\t * @param {(HalfFloatType|FloatType)} value - The texture type to set.\n\t * @return {RGBMLoader} A reference to this loader.\n\t */\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the maximum range.\n\t *\n\t * @param {(7|16)} value - The maximum range to set.\n\t * @return {RGBMLoader} A reference to this loader.\n\t */\n\tsetMaxRange( value ) {\n\n\t\tthis.maxRange = value;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Starts loading from the given URLs and passes the loaded RGBM cube map\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {Array<string>} urls - The paths/URLs of the files to be loaded. This can also be a data URIs.\n\t * @param {function(CubeTexture)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t * @return {CubeTexture} The cube texture.\n\t */\n\tloadCubemap( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\ttexture.images[ i ] = undefined;\n\n\t\t}\n\n\t\tlet loaded = 0;\n\n\t\tconst scope = this;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tscope.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\ttexture.type = this.type;\n\t\ttexture.format = RGBAFormat;\n\t\ttexture.minFilter = LinearFilter;\n\t\ttexture.generateMipmaps = false;\n\n\t\treturn texture;\n\n\t}\n\n\t/**\n\t * Async version of {@link RGBMLoader#loadCubemap}.\n\t *\n\t * @async\n\t * @param {Array<string>} urls - The paths/URLs of the files to be loaded. This can also be a data URIs.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @return {Promise<CubeTexture>} A Promise that resolves with the loaded cube map.\n\t */\n\tloadCubemapAsync( urls, onProgress ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tthis.loadCubemap( urls, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Parses the given RGBM texture data.\n\t *\n\t * @param {ArrayBuffer} buffer - The raw texture data.\n\t * @return {DataTextureLoader~TexData} An object representing the parsed texture data.\n\t */\n\tparse( buffer ) {\n\n\t\tconst img = UPNG.decode( buffer );\n\t\tconst rgba = UPNG.toRGBA8( img )[ 0 ];\n\n\t\tconst data = new Uint8Array( rgba );\n\t\tconst size = img.width * img.height * 4;\n\n\t\tconst output = ( this.type === HalfFloatType ) ? new Uint16Array( size ) : new Float32Array( size );\n\n\t\t// decode RGBM\n\n\t\tfor ( let i = 0; i < data.length; i += 4 ) {\n\n\t\t\tconst r = data[ i + 0 ] / 255;\n\t\t\tconst g = data[ i + 1 ] / 255;\n\t\t\tconst b = data[ i + 2 ] / 255;\n\t\t\tconst a = data[ i + 3 ] / 255;\n\n\t\t\tif ( this.type === HalfFloatType ) {\n\n\t\t\t\toutput[ i + 0 ] = DataUtils.toHalfFloat( Math.min( r * a * this.maxRange, 65504 ) );\n\t\t\t\toutput[ i + 1 ] = DataUtils.toHalfFloat( Math.min( g * a * this.maxRange, 65504 ) );\n\t\t\t\toutput[ i + 2 ] = DataUtils.toHalfFloat( Math.min( b * a * this.maxRange, 65504 ) );\n\t\t\t\toutput[ i + 3 ] = DataUtils.toHalfFloat( 1 );\n\n\t\t\t} else {\n\n\t\t\t\toutput[ i + 0 ] = r * a * this.maxRange;\n\t\t\t\toutput[ i + 1 ] = g * a * this.maxRange;\n\t\t\t\toutput[ i + 2 ] = b * a * this.maxRange;\n\t\t\t\toutput[ i + 3 ] = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: img.width,\n\t\t\theight: img.height,\n\t\t\tdata: output,\n\t\t\tformat: RGBAFormat,\n\t\t\ttype: this.type,\n\t\t\tflipY: true\n\t\t};\n\n\t}\n\n}\n\n// from https://github.com/photopea/UPNG.js (MIT License)\n\nvar UPNG = {};\n\nUPNG.toRGBA8 = function ( out ) {\n\n\tvar w = out.width, h = out.height;\n\tif ( out.tabs.acTL == null ) return [ UPNG.toRGBA8.decodeImage( out.data, w, h, out ).buffer ];\n\n\tvar frms = [];\n\tif ( out.frames[ 0 ].data == null ) out.frames[ 0 ].data = out.data;\n\n\tvar len = w * h * 4, img = new Uint8Array( len ), empty = new Uint8Array( len ), prev = new Uint8Array( len );\n\tfor ( var i = 0; i < out.frames.length; i ++ ) {\n\n\t\tvar frm = out.frames[ i ];\n\t\tvar fx = frm.rect.x, fy = frm.rect.y, fw = frm.rect.width, fh = frm.rect.height;\n\t\tvar fdata = UPNG.toRGBA8.decodeImage( frm.data, fw, fh, out );\n\n\t\tif ( i != 0 ) for ( var j = 0; j < len; j ++ ) prev[ j ] = img[ j ];\n\n\t\tif ( frm.blend == 0 ) UPNG._copyTile( fdata, fw, fh, img, w, h, fx, fy, 0 );\n\t\telse if ( frm.blend == 1 ) UPNG._copyTile( fdata, fw, fh, img, w, h, fx, fy, 1 );\n\n\t\tfrms.push( img.buffer.slice( 0 ) );\n\n\t\tif ( frm.dispose == 1 ) UPNG._copyTile( empty, fw, fh, img, w, h, fx, fy, 0 );\n\t\telse if ( frm.dispose == 2 ) for ( var j = 0; j < len; j ++ ) img[ j ] = prev[ j ];\n\n\t}\n\n\treturn frms;\n\n};\n\nUPNG.toRGBA8.decodeImage = function ( data, w, h, out ) {\n\n\tvar area = w * h, bpp = UPNG.decode._getBPP( out );\n\tvar bpl = Math.ceil( w * bpp / 8 );\t// bytes per line\n\n\tvar bf = new Uint8Array( area * 4 ), bf32 = new Uint32Array( bf.buffer );\n\tvar ctype = out.ctype, depth = out.depth;\n\tvar rs = UPNG._bin.readUshort;\n\n\tif ( ctype == 6 ) { // RGB + alpha\n\n\t\tvar qarea = area << 2;\n\t\tif ( depth == 8 ) for ( var i = 0; i < qarea; i += 4 ) {\n\n\t\t\tbf[ i ] = data[ i ]; bf[ i + 1 ] = data[ i + 1 ]; bf[ i + 2 ] = data[ i + 2 ]; bf[ i + 3 ] = data[ i + 3 ];\n\n\t\t}\n\n\t\tif ( depth == 16 ) for ( var i = 0; i < qarea; i ++ ) {\n\n\t\t\tbf[ i ] = data[ i << 1 ];\n\n\t\t}\n\n\t} else if ( ctype == 2 ) {\t// RGB\n\n\t\tvar ts = out.tabs[ 'tRNS' ];\n\t\tif ( ts == null ) {\n\n\t\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar ti = i * 3; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 2 ] << 16 ) | ( data[ ti + 1 ] << 8 ) | data[ ti ];\n\n\t\t\t}\n\n\t\t\tif ( depth == 16 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar ti = i * 6; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 4 ] << 16 ) | ( data[ ti + 2 ] << 8 ) | data[ ti ];\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar tr = ts[ 0 ], tg = ts[ 1 ], tb = ts[ 2 ];\n\t\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar qi = i << 2, ti = i * 3; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 2 ] << 16 ) | ( data[ ti + 1 ] << 8 ) | data[ ti ];\n\t\t\t\tif ( data[ ti ] == tr && data[ ti + 1 ] == tg && data[ ti + 2 ] == tb ) bf[ qi + 3 ] = 0;\n\n\t\t\t}\n\n\t\t\tif ( depth == 16 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar qi = i << 2, ti = i * 6; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 4 ] << 16 ) | ( data[ ti + 2 ] << 8 ) | data[ ti ];\n\t\t\t\tif ( rs( data, ti ) == tr && rs( data, ti + 2 ) == tg && rs( data, ti + 4 ) == tb ) bf[ qi + 3 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t} else if ( ctype == 3 ) {\t// palette\n\n\t\tvar p = out.tabs[ 'PLTE' ], ap = out.tabs[ 'tRNS' ], tl = ap ? ap.length : 0;\n\t\t//console.log(p, ap);\n\t\tif ( depth == 1 ) for ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar s0 = y * bpl, t0 = y * w;\n\t\t\tfor ( var i = 0; i < w; i ++ ) {\n\n\t\t\t\tvar qi = ( t0 + i ) << 2, j = ( ( data[ s0 + ( i >> 3 ) ] >> ( 7 - ( ( i & 7 ) << 0 ) ) ) & 1 ), cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( depth == 2 ) for ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar s0 = y * bpl, t0 = y * w;\n\t\t\tfor ( var i = 0; i < w; i ++ ) {\n\n\t\t\t\tvar qi = ( t0 + i ) << 2, j = ( ( data[ s0 + ( i >> 2 ) ] >> ( 6 - ( ( i & 3 ) << 1 ) ) ) & 3 ), cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( depth == 4 ) for ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar s0 = y * bpl, t0 = y * w;\n\t\t\tfor ( var i = 0; i < w; i ++ ) {\n\n\t\t\t\tvar qi = ( t0 + i ) << 2, j = ( ( data[ s0 + ( i >> 1 ) ] >> ( 4 - ( ( i & 1 ) << 2 ) ) ) & 15 ), cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\tvar qi = i << 2, j = data[ i ], cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t}\n\n\t} else if ( ctype == 4 ) {\t// gray + alpha\n\n\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\tvar qi = i << 2, di = i << 1, gr = data[ di ]; bf[ qi ] = gr; bf[ qi + 1 ] = gr; bf[ qi + 2 ] = gr; bf[ qi + 3 ] = data[ di + 1 ];\n\n\t\t}\n\n\t\tif ( depth == 16 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\tvar qi = i << 2, di = i << 2, gr = data[ di ]; bf[ qi ] = gr; bf[ qi + 1 ] = gr; bf[ qi + 2 ] = gr; bf[ qi + 3 ] = data[ di + 2 ];\n\n\t\t}\n\n\t} else if ( ctype == 0 ) {\t// gray\n\n\t\tvar tr = out.tabs[ 'tRNS' ] ? out.tabs[ 'tRNS' ] : - 1;\n\t\tfor ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar off = y * bpl, to = y * w;\n\t\t\tif ( depth == 1 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = 255 * ( ( data[ off + ( x >>> 3 ) ] >>> ( 7 - ( x & 7 ) ) ) & 1 ), al = ( gr == tr * 255 ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 2 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = 85 * ( ( data[ off + ( x >>> 2 ) ] >>> ( 6 - ( ( x & 3 ) << 1 ) ) ) & 3 ), al = ( gr == tr * 85 ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 4 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = 17 * ( ( data[ off + ( x >>> 1 ) ] >>> ( 4 - ( ( x & 1 ) << 2 ) ) ) & 15 ), al = ( gr == tr * 17 ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 8 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = data[ off + x ], al = ( gr == tr ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 16 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = data[ off + ( x << 1 ) ], al = ( rs( data, off + ( x << 1 ) ) == tr ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//console.log(Date.now()-time);\n\treturn bf;\n\n};\n\n\n\nUPNG.decode = function ( buff ) {\n\n\tvar data = new Uint8Array( buff ), offset = 8, bin = UPNG._bin, rUs = bin.readUshort, rUi = bin.readUint;\n\tvar out = { tabs: {}, frames: [] };\n\tvar dd = new Uint8Array( data.length ), doff = 0;\t // put all IDAT data into it\n\tvar fd, foff = 0;\t// frames\n\tvar text, keyw, bfr;\n\n\tvar mgck = [ 0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a ];\n\tfor ( var i = 0; i < 8; i ++ ) if ( data[ i ] != mgck[ i ] ) throw new Error( 'The input is not a PNG file!' );\n\n\twhile ( offset < data.length ) {\n\n\t\tvar len = bin.readUint( data, offset ); offset += 4;\n\t\tvar type = bin.readASCII( data, offset, 4 ); offset += 4;\n\t\t//console.log(type,len);\n\n\t\tif ( type == 'IHDR' ) {\n\n\t\t\tUPNG.decode._IHDR( data, offset, out );\n\n\t\t} else if ( type == 'CgBI' ) {\n\n\t\t\tout.tabs[ type ] = data.slice( offset, offset + 4 );\n\n\t\t} else if ( type == 'IDAT' ) {\n\n\t\t\tfor ( var i = 0; i < len; i ++ ) dd[ doff + i ] = data[ offset + i ];\n\t\t\tdoff += len;\n\n\t\t} else if ( type == 'acTL' ) {\n\n\t\t\tout.tabs[ type ] = { num_frames: rUi( data, offset ), num_plays: rUi( data, offset + 4 ) };\n\t\t\tfd = new Uint8Array( data.length );\n\n\t\t} else if ( type == 'fcTL' ) {\n\n\t\t\tif ( foff != 0 ) {\n\n\t\t\t\tvar fr = out.frames[ out.frames.length - 1 ];\n\t\t\t\tfr.data = UPNG.decode._decompress( out, fd.slice( 0, foff ), fr.rect.width, fr.rect.height ); foff = 0;\n\n\t\t\t}\n\n\t\t\tvar rct = { x: rUi( data, offset + 12 ), y: rUi( data, offset + 16 ), width: rUi( data, offset + 4 ), height: rUi( data, offset + 8 ) };\n\t\t\tvar del = rUs( data, offset + 22 ); del = rUs( data, offset + 20 ) / ( del == 0 ? 100 : del );\n\t\t\tvar frm = { rect: rct, delay: Math.round( del * 1000 ), dispose: data[ offset + 24 ], blend: data[ offset + 25 ] };\n\t\t\t//console.log(frm);\n\t\t\tout.frames.push( frm );\n\n\t\t} else if ( type == 'fdAT' ) {\n\n\t\t\tfor ( var i = 0; i < len - 4; i ++ ) fd[ foff + i ] = data[ offset + i + 4 ];\n\t\t\tfoff += len - 4;\n\n\t\t} else if ( type == 'pHYs' ) {\n\n\t\t\tout.tabs[ type ] = [ bin.readUint( data, offset ), bin.readUint( data, offset + 4 ), data[ offset + 8 ] ];\n\n\t\t} else if ( type == 'cHRM' ) {\n\n\t\t\tout.tabs[ type ] = [];\n\t\t\tfor ( var i = 0; i < 8; i ++ ) out.tabs[ type ].push( bin.readUint( data, offset + i * 4 ) );\n\n\t\t} else if ( type == 'tEXt' || type == 'zTXt' ) {\n\n\t\t\tif ( out.tabs[ type ] == null ) out.tabs[ type ] = {};\n\t\t\tvar nz = bin.nextZero( data, offset );\n\t\t\tkeyw = bin.readASCII( data, offset, nz - offset );\n\t\t\tvar tl = offset + len - nz - 1;\n\t\t\tif ( type == 'tEXt' ) text = bin.readASCII( data, nz + 1, tl );\n\t\t\telse {\n\n\t\t\t\tbfr = UPNG.decode._inflate( data.slice( nz + 2, nz + 2 + tl ) );\n\t\t\t\ttext = bin.readUTF8( bfr, 0, bfr.length );\n\n\t\t\t}\n\n\t\t\tout.tabs[ type ][ keyw ] = text;\n\n\t\t} else if ( type == 'iTXt' ) {\n\n\t\t\tif ( out.tabs[ type ] == null ) out.tabs[ type ] = {};\n\t\t\tvar nz = 0, off = offset;\n\t\t\tnz = bin.nextZero( data, off );\n\t\t\tkeyw = bin.readASCII( data, off, nz - off ); off = nz + 1;\n\t\t\tvar cflag = data[ off ]; off += 2;\n\t\t\tnz = bin.nextZero( data, off );\n\t\t\tbin.readASCII( data, off, nz - off ); off = nz + 1;\n\t\t\tnz = bin.nextZero( data, off );\n\t\t\tbin.readUTF8( data, off, nz - off ); off = nz + 1;\n\t\t\tvar tl = len - ( off - offset );\n\t\t\tif ( cflag == 0 ) text = bin.readUTF8( data, off, tl );\n\t\t\telse {\n\n\t\t\t\tbfr = UPNG.decode._inflate( data.slice( off, off + tl ) );\n\t\t\t\ttext = bin.readUTF8( bfr, 0, bfr.length );\n\n\t\t\t}\n\n\t\t\tout.tabs[ type ][ keyw ] = text;\n\n\t\t} else if ( type == 'PLTE' ) {\n\n\t\t\tout.tabs[ type ] = bin.readBytes( data, offset, len );\n\n\t\t} else if ( type == 'hIST' ) {\n\n\t\t\tvar pl = out.tabs[ 'PLTE' ].length / 3;\n\t\t\tout.tabs[ type ] = []; for ( var i = 0; i < pl; i ++ ) out.tabs[ type ].push( rUs( data, offset + i * 2 ) );\n\n\t\t} else if ( type == 'tRNS' ) {\n\n\t\t\tif ( out.ctype == 3 ) out.tabs[ type ] = bin.readBytes( data, offset, len );\n\t\t\telse if ( out.ctype == 0 ) out.tabs[ type ] = rUs( data, offset );\n\t\t\telse if ( out.ctype == 2 ) out.tabs[ type ] = [ rUs( data, offset ), rUs( data, offset + 2 ), rUs( data, offset + 4 ) ];\n\t\t\t//else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n\n\t\t} else if ( type == 'gAMA' ) out.tabs[ type ] = bin.readUint( data, offset ) / 100000;\n\t\telse if ( type == 'sRGB' ) out.tabs[ type ] = data[ offset ];\n\t\telse if ( type == 'bKGD' ) {\n\n\t\t\tif ( out.ctype == 0 || out.ctype == 4 ) out.tabs[ type ] = [ rUs( data, offset ) ];\n\t\t\telse if ( out.ctype == 2 || out.ctype == 6 ) out.tabs[ type ] = [ rUs( data, offset ), rUs( data, offset + 2 ), rUs( data, offset + 4 ) ];\n\t\t\telse if ( out.ctype == 3 ) out.tabs[ type ] = data[ offset ];\n\n\t\t} else if ( type == 'IEND' ) {\n\n\t\t\tbreak;\n\n\t\t}\n\n\t\t//else {  console.log(\"unknown chunk type\", type, len);  out.tabs[type]=data.slice(offset,offset+len);  }\n\t\toffset += len;\n\t\tbin.readUint( data, offset ); offset += 4;\n\n\t}\n\n\tif ( foff != 0 ) {\n\n\t\tvar fr = out.frames[ out.frames.length - 1 ];\n\t\tfr.data = UPNG.decode._decompress( out, fd.slice( 0, foff ), fr.rect.width, fr.rect.height );\n\n\t}\n\n\tout.data = UPNG.decode._decompress( out, dd, out.width, out.height );\n\n\tdelete out.compress; delete out.interlace; delete out.filter;\n\treturn out;\n\n};\n\nUPNG.decode._decompress = function ( out, dd, w, h ) {\n\n\tvar bpp = UPNG.decode._getBPP( out ), bpl = Math.ceil( w * bpp / 8 ), buff = new Uint8Array( ( bpl + 1 + out.interlace ) * h );\n\tif ( out.tabs[ 'CgBI' ] ) dd = UPNG.inflateRaw( dd, buff );\n\telse dd = UPNG.decode._inflate( dd, buff );\n\n\tif ( out.interlace == 0 ) dd = UPNG.decode._filterZero( dd, out, 0, w, h );\n\telse if ( out.interlace == 1 ) dd = UPNG.decode._readInterlace( dd, out );\n\n\treturn dd;\n\n};\n\nUPNG.decode._inflate = function ( data, buff ) {\n\n\tvar out = UPNG[ 'inflateRaw' ]( new Uint8Array( data.buffer, 2, data.length - 6 ), buff ); return out;\n\n};\n\nUPNG.inflateRaw = function () {\n\n\tvar H = {}; H.H = {}; H.H.N = function ( N, W ) {\n\n\t\tvar R = Uint8Array, i = 0, m = 0, J = 0, h = 0, Q = 0, X = 0, u = 0, w = 0, d = 0, v, C;\n\t\tif ( N[ 0 ] == 3 && N[ 1 ] == 0 ) return W ? W : new R( 0 ); var V = H.H, n = V.b, A = V.e, l = V.R, M = V.n, I = V.A, e = V.Z, b = V.m, Z = W == null;\n\t\tif ( Z )W = new R( N.length >>> 2 << 5 ); while ( i == 0 ) {\n\n\t\t\ti = n( N, d, 1 ); m = n( N, d + 1, 2 ); d += 3; if ( m == 0 ) {\n\n\t\t\t\tif ( ( d & 7 ) != 0 )d += 8 - ( d & 7 );\n\t\t\t\tvar D = ( d >>> 3 ) + 4, q = N[ D - 4 ] | N[ D - 3 ] << 8; if ( Z )W = H.H.W( W, w + q ); W.set( new R( N.buffer, N.byteOffset + D, q ), w ); d = D + q << 3;\n\t\t\t\tw += q; continue\n\t\t\t\t;\n\n\t\t\t}\n\n\t\t\tif ( Z )W = H.H.W( W, w + ( 1 << 17 ) ); if ( m == 1 ) {\n\n\t\t\t\tv = b.J; C = b.h; X = ( 1 << 9 ) - 1; u = ( 1 << 5 ) - 1;\n\n\t\t\t}\n\n\t\t\tif ( m == 2 ) {\n\n\t\t\t\tJ = A( N, d, 5 ) + 257;\n\t\t\t\th = A( N, d + 5, 5 ) + 1; Q = A( N, d + 10, 4 ) + 4; d += 14; var j = 1; for ( var c = 0; c < 38; c += 2 ) {\n\n\t\t\t\t\tb.Q[ c ] = 0; b.Q[ c + 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var c = 0;\n\t\t\t\t\tc < Q; c ++ ) {\n\n\t\t\t\t\tvar K = A( N, d + c * 3, 3 ); b.Q[ ( b.X[ c ] << 1 ) + 1 ] = K; if ( K > j )j = K\n\t\t\t\t\t;\n\n\t\t\t\t}\n\n\t\t\t\td += 3 * Q; M( b.Q, j ); I( b.Q, j, b.u ); v = b.w; C = b.d;\n\t\t\t\td = l( b.u, ( 1 << j ) - 1, J + h, N, d, b.v ); var r = V.V( b.v, 0, J, b.C ); X = ( 1 << r ) - 1; var S = V.V( b.v, J, h, b.D ); u = ( 1 << S ) - 1; M( b.C, r );\n\t\t\t\tI( b.C, r, v ); M( b.D, S ); I( b.D, S, C )\n\t\t\t\t;\n\n\t\t\t}\n\n\t\t\twhile ( ! 0 ) {\n\n\t\t\t\tvar T = v[ e( N, d ) & X ]; d += T & 15; var p = T >>> 4; if ( p >>> 8 == 0 ) {\n\n\t\t\t\t\tW[ w ++ ] = p;\n\n\t\t\t\t} else if ( p == 256 ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar z = w + p - 254;\n\t\t\t\t\tif ( p > 264 ) {\n\n\t\t\t\t\t\tvar _ = b.q[ p - 257 ]; z = w + ( _ >>> 3 ) + A( N, d, _ & 7 ); d += _ & 7;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar $ = C[ e( N, d ) & u ]; d += $ & 15; var s = $ >>> 4, Y = b.c[ s ], a = ( Y >>> 4 ) + n( N, d, Y & 15 );\n\t\t\t\t\td += Y & 15; while ( w < z ) {\n\n\t\t\t\t\t\tW[ w ] = W[ w ++ - a ]; W[ w ] = W[ w ++ - a ]; W[ w ] = W[ w ++ - a ]; W[ w ] = W[ w ++ - a ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tw = z\n\t\t\t\t\t;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn W.length == w ? W : W.slice( 0, w )\n\t\t;\n\n\t};\n\n\tH.H.W = function ( N, W ) {\n\n\t\tvar R = N.length; if ( W <= R ) return N; var V = new Uint8Array( R << 1 ); V.set( N, 0 ); return V;\n\n\t};\n\n\tH.H.R = function ( N, W, R, V, n, A ) {\n\n\t\tvar l = H.H.e, M = H.H.Z, I = 0; while ( I < R ) {\n\n\t\t\tvar e = N[ M( V, n ) & W ]; n += e & 15; var b = e >>> 4;\n\t\t\tif ( b <= 15 ) {\n\n\t\t\t\tA[ I ] = b; I ++;\n\n\t\t\t} else {\n\n\t\t\t\tvar Z = 0, m = 0; if ( b == 16 ) {\n\n\t\t\t\t\tm = 3 + l( V, n, 2 ); n += 2; Z = A[ I - 1 ];\n\n\t\t\t\t} else if ( b == 17 ) {\n\n\t\t\t\t\tm = 3 + l( V, n, 3 );\n\t\t\t\t\tn += 3\n\t\t\t\t\t;\n\n\t\t\t\t} else if ( b == 18 ) {\n\n\t\t\t\t\tm = 11 + l( V, n, 7 ); n += 7;\n\n\t\t\t\t}\n\n\t\t\t\tvar J = I + m; while ( I < J ) {\n\n\t\t\t\t\tA[ I ] = Z; I ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn n\n\t\t;\n\n\t};\n\n\tH.H.V = function ( N, W, R, V ) {\n\n\t\tvar n = 0, A = 0, l = V.length >>> 1;\n\t\twhile ( A < R ) {\n\n\t\t\tvar M = N[ A + W ]; V[ A << 1 ] = 0; V[ ( A << 1 ) + 1 ] = M; if ( M > n )n = M; A ++;\n\n\t\t}\n\n\t\twhile ( A < l ) {\n\n\t\t\tV[ A << 1 ] = 0; V[ ( A << 1 ) + 1 ] = 0; A ++;\n\n\t\t}\n\n\t\treturn n\n\t\t;\n\n\t};\n\n\tH.H.n = function ( N, W ) {\n\n\t\tvar R = H.H.m, V = N.length, n, A, l, M, I, e = R.j; for ( var M = 0; M <= W; M ++ )e[ M ] = 0; for ( M = 1; M < V; M += 2 )e[ N[ M ] ] ++;\n\t\tvar b = R.K; n = 0; e[ 0 ] = 0; for ( A = 1; A <= W; A ++ ) {\n\n\t\t\tn = n + e[ A - 1 ] << 1; b[ A ] = n;\n\n\t\t}\n\n\t\tfor ( l = 0; l < V; l += 2 ) {\n\n\t\t\tI = N[ l + 1 ]; if ( I != 0 ) {\n\n\t\t\t\tN[ l ] = b[ I ];\n\t\t\t\tb[ I ] ++\n\t\t\t\t;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tH.H.A = function ( N, W, R ) {\n\n\t\tvar V = N.length, n = H.H.m, A = n.r; for ( var l = 0; l < V; l += 2 ) if ( N[ l + 1 ] != 0 ) {\n\n\t\t\tvar M = l >> 1, I = N[ l + 1 ], e = M << 4 | I, b = W - I, Z = N[ l ] << b, m = Z + ( 1 << b );\n\t\t\twhile ( Z != m ) {\n\n\t\t\t\tvar J = A[ Z ] >>> 15 - W; R[ J ] = e; Z ++;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tH.H.l = function ( N, W ) {\n\n\t\tvar R = H.H.m.r, V = 15 - W; for ( var n = 0; n < N.length;\n\t\t\tn += 2 ) {\n\n\t\t\tvar A = N[ n ] << W - N[ n + 1 ]; N[ n ] = R[ A ] >>> V;\n\n\t\t}\n\n\t};\n\n\tH.H.M = function ( N, W, R ) {\n\n\t\tR = R << ( W & 7 ); var V = W >>> 3; N[ V ] |= R; N[ V + 1 ] |= R >>> 8;\n\n\t};\n\n\tH.H.I = function ( N, W, R ) {\n\n\t\tR = R << ( W & 7 ); var V = W >>> 3; N[ V ] |= R; N[ V + 1 ] |= R >>> 8; N[ V + 2 ] |= R >>> 16;\n\n\t};\n\n\tH.H.e = function ( N, W, R ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 ) >>> ( W & 7 ) & ( 1 << R ) - 1;\n\n\t};\n\n\tH.H.b = function ( N, W, R ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 | N[ ( W >>> 3 ) + 2 ] << 16 ) >>> ( W & 7 ) & ( 1 << R ) - 1;\n\n\t};\n\n\tH.H.Z = function ( N, W ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 | N[ ( W >>> 3 ) + 2 ] << 16 ) >>> ( W & 7 );\n\n\t};\n\n\tH.H.i = function ( N, W ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 | N[ ( W >>> 3 ) + 2 ] << 16 | N[ ( W >>> 3 ) + 3 ] << 24 ) >>> ( W & 7 );\n\n\t};\n\n\tH.H.m = function () {\n\n\t\tvar N = Uint16Array, W = Uint32Array;\n\t\treturn { K: new N( 16 ), j: new N( 16 ), X: [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ], S: [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999 ], T: [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0 ], q: new N( 32 ), p: [ 1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535 ], z: [ 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0 ], c: new W( 32 ), J: new N( 512 ), _: [], h: new N( 32 ), $: [], w: new N( 32768 ), C: [], v: [], d: new N( 32768 ), D: [], u: new N( 512 ), Q: [], r: new N( 1 << 15 ), s: new W( 286 ), Y: new W( 30 ), a: new W( 19 ), t: new W( 15e3 ), k: new N( 1 << 16 ), g: new N( 1 << 15 ) }\n\t\t;\n\n\t}();\n\t( function () {\n\n\t\tvar N = H.H.m, W = 1 << 15; for ( var R = 0; R < W; R ++ ) {\n\n\t\t\tvar V = R; V = ( V & 2863311530 ) >>> 1 | ( V & 1431655765 ) << 1;\n\t\t\tV = ( V & 3435973836 ) >>> 2 | ( V & 858993459 ) << 2; V = ( V & 4042322160 ) >>> 4 | ( V & 252645135 ) << 4; V = ( V & 4278255360 ) >>> 8 | ( V & 16711935 ) << 8;\n\t\t\tN.r[ R ] = ( V >>> 16 | V << 16 ) >>> 17\n\t\t\t;\n\n\t\t}\n\n\t\tfunction n( A, l, M ) {\n\n\t\t\twhile ( l -- != 0 )A.push( 0, M )\n\t\t\t;\n\n\t\t}\n\n\t\tfor ( var R = 0; R < 32; R ++ ) {\n\n\t\t\tN.q[ R ] = N.S[ R ] << 3 | N.T[ R ];\n\t\t\tN.c[ R ] = N.p[ R ] << 4 | N.z[ R ]\n\t\t\t;\n\n\t\t}\n\n\t\tn( N._, 144, 8 ); n( N._, 255 - 143, 9 ); n( N._, 279 - 255, 7 ); n( N._, 287 - 279, 8 ); H.H.n( N._, 9 );\n\t\tH.H.A( N._, 9, N.J ); H.H.l( N._, 9 ); n( N.$, 32, 5 ); H.H.n( N.$, 5 ); H.H.A( N.$, 5, N.h ); H.H.l( N.$, 5 ); n( N.Q, 19, 0 ); n( N.C, 286, 0 );\n\t\tn( N.D, 30, 0 ); n( N.v, 320, 0 )\n\t\t;\n\n\t}() );\n\n\treturn H.H.N\n\t;\n\n}();\n\n\nUPNG.decode._readInterlace = function ( data, out ) {\n\n\tvar w = out.width, h = out.height;\n\tvar bpp = UPNG.decode._getBPP( out ), cbpp = bpp >> 3, bpl = Math.ceil( w * bpp / 8 );\n\tvar img = new Uint8Array( h * bpl );\n\tvar di = 0;\n\n\tvar starting_row = [ 0, 0, 4, 0, 2, 0, 1 ];\n\tvar starting_col = [ 0, 4, 0, 2, 0, 1, 0 ];\n\tvar row_increment = [ 8, 8, 8, 4, 4, 2, 2 ];\n\tvar col_increment = [ 8, 8, 4, 4, 2, 2, 1 ];\n\n\tvar pass = 0;\n\twhile ( pass < 7 ) {\n\n\t\tvar ri = row_increment[ pass ], ci = col_increment[ pass ];\n\t\tvar sw = 0, sh = 0;\n\t\tvar cr = starting_row[ pass ]; while ( cr < h ) {\n\n\t\t\tcr += ri; sh ++;\n\n\t\t}\n\n\t\tvar cc = starting_col[ pass ]; while ( cc < w ) {\n\n\t\t\tcc += ci; sw ++;\n\n\t\t}\n\n\t\tvar bpll = Math.ceil( sw * bpp / 8 );\n\t\tUPNG.decode._filterZero( data, out, di, sw, sh );\n\n\t\tvar y = 0, row = starting_row[ pass ];\n\t\tvar val;\n\n\t\twhile ( row < h ) {\n\n\t\t\tvar col = starting_col[ pass ];\n\t\t\tvar cdi = ( di + y * bpll ) << 3;\n\n\t\t\twhile ( col < w ) {\n\n\t\t\t\tif ( bpp == 1 ) {\n\n\t\t\t\t\tval = data[ cdi >> 3 ]; val = ( val >> ( 7 - ( cdi & 7 ) ) ) & 1;\n\t\t\t\t\timg[ row * bpl + ( col >> 3 ) ] |= ( val << ( 7 - ( ( col & 7 ) << 0 ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bpp == 2 ) {\n\n\t\t\t\t\tval = data[ cdi >> 3 ]; val = ( val >> ( 6 - ( cdi & 7 ) ) ) & 3;\n\t\t\t\t\timg[ row * bpl + ( col >> 2 ) ] |= ( val << ( 6 - ( ( col & 3 ) << 1 ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bpp == 4 ) {\n\n\t\t\t\t\tval = data[ cdi >> 3 ]; val = ( val >> ( 4 - ( cdi & 7 ) ) ) & 15;\n\t\t\t\t\timg[ row * bpl + ( col >> 1 ) ] |= ( val << ( 4 - ( ( col & 1 ) << 2 ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bpp >= 8 ) {\n\n\t\t\t\t\tvar ii = row * bpl + col * cbpp;\n\t\t\t\t\tfor ( var j = 0; j < cbpp; j ++ ) img[ ii + j ] = data[ ( cdi >> 3 ) + j ];\n\n\t\t\t\t}\n\n\t\t\t\tcdi += bpp; col += ci;\n\n\t\t\t}\n\n\t\t\ty ++; row += ri;\n\n\t\t}\n\n\t\tif ( sw * sh != 0 ) di += sh * ( 1 + bpll );\n\t\tpass = pass + 1;\n\n\t}\n\n\treturn img;\n\n};\n\nUPNG.decode._getBPP = function ( out ) {\n\n\tvar noc = [ 1, null, 3, 1, 2, null, 4 ][ out.ctype ];\n\treturn noc * out.depth;\n\n};\n\nUPNG.decode._filterZero = function ( data, out, off, w, h ) {\n\n\tvar bpp = UPNG.decode._getBPP( out ), bpl = Math.ceil( w * bpp / 8 ), paeth = UPNG.decode._paeth;\n\tbpp = Math.ceil( bpp / 8 );\n\n\tvar i, di, type = data[ off ], x = 0;\n\n\tif ( type > 1 ) data[ off ] = [ 0, 0, 1 ][ type - 2 ];\n\tif ( type == 3 ) for ( x = bpp; x < bpl; x ++ ) data[ x + 1 ] = ( data[ x + 1 ] + ( data[ x + 1 - bpp ] >>> 1 ) ) & 255;\n\n\tfor ( var y = 0; y < h; y ++ ) {\n\n\t\ti = off + y * bpl; di = i + y + 1;\n\t\ttype = data[ di - 1 ]; x = 0;\n\n\t\tif ( type == 0 ) for ( ; x < bpl; x ++ ) data[ i + x ] = data[ di + x ];\n\t\telse if ( type == 1 ) {\n\n\t\t\tfor ( ; x < bpp; x ++ ) data[ i + x ] = data[ di + x ];\n\t\t\t\t\t\t   for ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + data[ i + x - bpp ] );\n\n\t\t} else if ( type == 2 ) {\n\n\t\t\tfor ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + data[ i + x - bpl ] );\n\n\t\t} else if ( type == 3 ) {\n\n\t\t\tfor ( ; x < bpp; x ++ ) data[ i + x ] = ( data[ di + x ] + ( data[ i + x - bpl ] >>> 1 ) );\n\t\t\t               for ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + ( ( data[ i + x - bpl ] + data[ i + x - bpp ] ) >>> 1 ) );\n\n\t\t} else {\n\n\t\t\tfor ( ; x < bpp; x ++ ) data[ i + x ] = ( data[ di + x ] + paeth( 0, data[ i + x - bpl ], 0 ) );\n\t\t\t\t\t\t   for ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + paeth( data[ i + x - bpp ], data[ i + x - bpl ], data[ i + x - bpp - bpl ] ) );\n\n\t\t}\n\n\t}\n\n\treturn data;\n\n};\n\nUPNG.decode._paeth = function ( a, b, c ) {\n\n\tvar p = a + b - c, pa = ( p - a ), pb = ( p - b ), pc = ( p - c );\n\tif ( pa * pa <= pb * pb && pa * pa <= pc * pc ) return a;\n\telse if ( pb * pb <= pc * pc ) return b;\n\treturn c;\n\n};\n\nUPNG.decode._IHDR = function ( data, offset, out ) {\n\n\tvar bin = UPNG._bin;\n\tout.width = bin.readUint( data, offset ); offset += 4;\n\tout.height = bin.readUint( data, offset ); offset += 4;\n\tout.depth = data[ offset ]; offset ++;\n\tout.ctype = data[ offset ]; offset ++;\n\tout.compress = data[ offset ]; offset ++;\n\tout.filter = data[ offset ]; offset ++;\n\tout.interlace = data[ offset ]; offset ++;\n\n};\n\nUPNG._bin = {\n\tnextZero: function ( data, p ) {\n\n\t\twhile ( data[ p ] != 0 ) p ++; return p;\n\n\t},\n\treadUshort: function ( buff, p ) {\n\n\t\treturn ( buff[ p ] << 8 ) | buff[ p + 1 ];\n\n\t},\n\twriteUshort: function ( buff, p, n ) {\n\n\t\tbuff[ p ] = ( n >> 8 ) & 255; buff[ p + 1 ] = n & 255;\n\n\t},\n\treadUint: function ( buff, p ) {\n\n\t\treturn ( buff[ p ] * ( 256 * 256 * 256 ) ) + ( ( buff[ p + 1 ] << 16 ) | ( buff[ p + 2 ] << 8 ) | buff[ p + 3 ] );\n\n\t},\n\twriteUint: function ( buff, p, n ) {\n\n\t\tbuff[ p ] = ( n >> 24 ) & 255; buff[ p + 1 ] = ( n >> 16 ) & 255; buff[ p + 2 ] = ( n >> 8 ) & 255; buff[ p + 3 ] = n & 255;\n\n\t},\n\treadASCII: function ( buff, p, l ) {\n\n\t\tvar s = ''; for ( var i = 0; i < l; i ++ ) s += String.fromCharCode( buff[ p + i ] ); return s;\n\n\t},\n\twriteASCII: function ( data, p, s ) {\n\n\t\tfor ( var i = 0; i < s.length; i ++ ) data[ p + i ] = s.charCodeAt( i );\n\n\t},\n\treadBytes: function ( buff, p, l ) {\n\n\t\tvar arr = []; for ( var i = 0; i < l; i ++ ) arr.push( buff[ p + i ] ); return arr;\n\n\t},\n\tpad: function ( n ) {\n\n\t\treturn n.length < 2 ? '0' + n : n;\n\n\t},\n\treadUTF8: function ( buff, p, l ) {\n\n\t\tvar s = '', ns;\n\t\tfor ( var i = 0; i < l; i ++ ) s += '%' + UPNG._bin.pad( buff[ p + i ].toString( 16 ) );\n\t\ttry {\n\n\t\t\tns = decodeURIComponent( s );\n\n\t\t} catch ( e ) {\n\n\t\t\treturn UPNG._bin.readASCII( buff, p, l );\n\n\t\t}\n\n\t\treturn ns;\n\n\t}\n};\nUPNG._copyTile = function ( sb, sw, sh, tb, tw, th, xoff, yoff, mode ) {\n\n\tvar w = Math.min( sw, tw ), h = Math.min( sh, th );\n\tvar si = 0, ti = 0;\n\tfor ( var y = 0; y < h; y ++ )\n\t\tfor ( var x = 0; x < w; x ++ ) {\n\n\t\t\tif ( xoff >= 0 && yoff >= 0 ) {\n\n\t\t\t\tsi = ( y * sw + x ) << 2; ti = ( ( yoff + y ) * tw + xoff + x ) << 2;\n\n\t\t\t} else {\n\n\t\t\t\tsi = ( ( - yoff + y ) * sw - xoff + x ) << 2; ti = ( y * tw + x ) << 2;\n\n\t\t\t}\n\n\t\t\tif ( mode == 0 ) {\n\n\t\t\t\ttb[ ti ] = sb[ si ]; tb[ ti + 1 ] = sb[ si + 1 ]; tb[ ti + 2 ] = sb[ si + 2 ]; tb[ ti + 3 ] = sb[ si + 3 ];\n\n\t\t\t} else if ( mode == 1 ) {\n\n\t\t\t\tvar fa = sb[ si + 3 ] * ( 1 / 255 ), fr = sb[ si ] * fa, fg = sb[ si + 1 ] * fa, fb = sb[ si + 2 ] * fa;\n\t\t\t\tvar ba = tb[ ti + 3 ] * ( 1 / 255 ), br = tb[ ti ] * ba, bg = tb[ ti + 1 ] * ba, bb = tb[ ti + 2 ] * ba;\n\n\t\t\t\tvar ifa = 1 - fa, oa = fa + ba * ifa, ioa = ( oa == 0 ? 0 : 1 / oa );\n\t\t\t\ttb[ ti + 3 ] = 255 * oa;\n\t\t\t\ttb[ ti + 0 ] = ( fr + br * ifa ) * ioa;\n\t\t\t\ttb[ ti + 1 ] = ( fg + bg * ifa ) * ioa;\n\t\t\t\ttb[ ti + 2 ] = ( fb + bb * ifa ) * ioa;\n\n\t\t\t} else if ( mode == 2 ) {\t// copy only differences, otherwise zero\n\n\t\t\t\tvar fa = sb[ si + 3 ], fr = sb[ si ], fg = sb[ si + 1 ], fb = sb[ si + 2 ];\n\t\t\t\tvar ba = tb[ ti + 3 ], br = tb[ ti ], bg = tb[ ti + 1 ], bb = tb[ ti + 2 ];\n\t\t\t\tif ( fa == ba && fr == br && fg == bg && fb == bb ) {\n\n\t\t\t\t\ttb[ ti ] = 0; tb[ ti + 1 ] = 0; tb[ ti + 2 ] = 0; tb[ ti + 3 ] = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttb[ ti ] = fr; tb[ ti + 1 ] = fg; tb[ ti + 2 ] = fb; tb[ ti + 3 ] = fa;\n\n\t\t\t\t}\n\n\t\t\t} else if ( mode == 3 ) {\t// check if can be blended\n\n\t\t\t\tvar fa = sb[ si + 3 ], fr = sb[ si ], fg = sb[ si + 1 ], fb = sb[ si + 2 ];\n\t\t\t\tvar ba = tb[ ti + 3 ], br = tb[ ti ], bg = tb[ ti + 1 ], bb = tb[ ti + 2 ];\n\t\t\t\tif ( fa == ba && fr == br && fg == bg && fb == bb ) continue;\n\t\t\t\t//if(fa!=255 && ba!=0) return false;\n\t\t\t\tif ( fa < 220 && ba > 20 ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\treturn true;\n\n};\n\nexport { RGBMLoader };\n"],"mappings":"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","ignoreList":[]}