import{BufferAttribute,BufferGeometry,Color,FileLoader,Float32BufferAttribute,Loader,Vector3,SRGBColorSpace}from"three";class STLLoader extends Loader{constructor(e){super(e)}load(e,t,r,o){const n=this,a=new FileLoader(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(r){try{t(n.parse(r))}catch(t){o?o(t):console.error(t),n.manager.itemError(e)}}),r,o)}parse(e){function t(e,t,r){for(let o=0,n=e.length;o<n;o++)if(e[o]!==t.getUint8(r+o))return!1;return!0}const r=function(e){if("string"==typeof e){const t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=255&e.charCodeAt(r);return t.buffer||t}return e}(e);return function(e){const r=new DataView(e);if(84+50*r.getUint32(80,!0)===r.byteLength)return!0;const o=[115,111,108,105,100];for(let e=0;e<5;e++)if(t(o,r,e))return!1;return!0}(r)?function(e){const t=new DataView(e),r=t.getUint32(80,!0);let o,n,a,s,i,l,u,f,c=!1;for(let e=0;e<70;e++)1129270351==t.getUint32(e,!1)&&82==t.getUint8(e+4)&&61==t.getUint8(e+5)&&(c=!0,s=new Float32Array(3*r*3),i=t.getUint8(e+6)/255,l=t.getUint8(e+7)/255,u=t.getUint8(e+8)/255,f=t.getUint8(e+9)/255);const g=new BufferGeometry,d=new Float32Array(3*r*3),h=new Float32Array(3*r*3),p=new Color;for(let e=0;e<r;e++){const r=84+50*e,f=t.getFloat32(r,!0),g=t.getFloat32(r+4,!0),w=t.getFloat32(r+8,!0);if(c){const e=t.getUint16(r+48,!0);0==(32768&e)?(o=(31&e)/31,n=(e>>5&31)/31,a=(e>>10&31)/31):(o=i,n=l,a=u)}for(let i=1;i<=3;i++){const l=r+12*i,u=3*e*3+3*(i-1);d[u]=t.getFloat32(l,!0),d[u+1]=t.getFloat32(l+4,!0),d[u+2]=t.getFloat32(l+8,!0),h[u]=f,h[u+1]=g,h[u+2]=w,c&&(p.setRGB(o,n,a,SRGBColorSpace),s[u]=p.r,s[u+1]=p.g,s[u+2]=p.b)}}return g.setAttribute("position",new BufferAttribute(d,3)),g.setAttribute("normal",new BufferAttribute(h,3)),c&&(g.setAttribute("color",new BufferAttribute(s,3)),g.hasColors=!0,g.alpha=f),g}(r):function(e){const t=new BufferGeometry,r=/solid([\s\S]*?)endsolid/g,o=/facet([\s\S]*?)endfacet/g,n=/solid\s(.+)/;let a=0;const s=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,i=new RegExp("vertex"+s+s+s,"g"),l=new RegExp("normal"+s+s+s,"g"),u=[],f=[],c=[],g=new Vector3;let d,h=0,p=0,w=0;for(;null!==(d=r.exec(e));){p=w;const e=d[0],r=null!==(d=n.exec(e))?d[1]:"";for(c.push(r);null!==(d=o.exec(e));){let e=0,t=0;const r=d[0];for(;null!==(d=l.exec(r));)g.x=parseFloat(d[1]),g.y=parseFloat(d[2]),g.z=parseFloat(d[3]),t++;for(;null!==(d=i.exec(r));)u.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3])),f.push(g.x,g.y,g.z),e++,w++;1!==t&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+a),3!==e&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+a),a++}const s=p,F=w-p;t.userData.groupNames=c,t.addGroup(s,F,h),h++}return t.setAttribute("position",new Float32BufferAttribute(u,3)),t.setAttribute("normal",new Float32BufferAttribute(f,3)),t}("string"!=typeof(o=e)?(new TextDecoder).decode(o):o);var o}}export{STLLoader};
//# sourceMappingURL=STLLoader.js.map