import{ClampToEdgeWrapping,DataTexture,DataUtils,FileLoader,HalfFloatType,LinearFilter,LinearMipMapLinearFilter,LinearSRGBColorSpace,Loader,RGBAFormat,UVMapping}from"three";const SRGB_TO_LINEAR=Array(1024).fill(0).map(((t,e)=>Math.pow(e/255*.9478672986+.0521327014,2.4)));class UltraHDRLoader extends Loader{constructor(t){super(t),this.type=HalfFloatType}setDataType(t){return this.type=t,this}parse(t,e){const a={version:null,baseRenditionIsHDR:null,gainMapMin:null,gainMapMax:null,gamma:null,offsetSDR:null,offsetHDR:null,hdrCapacityMin:null,hdrCapacityMax:null},r=new TextDecoder,i=new DataView(t);let n=0;const o=[];for(;n<i.byteLength;){const t=i.getUint8(n);if(255===t){const e=i.getUint8(n+1);[216,224,225,226].includes(e)?(o.push({sectionType:e,section:[t,e],sectionOffset:n+2}),n+=2):(o[o.length-1].section.push(t,e),n+=2)}else o[o.length-1].section.push(t),n++}let s,l;for(let t=0;t<o.length;t++){const{sectionType:e,section:n,sectionOffset:h}=o[t];if(224===e);else if(225===e)this._parseXMPMetadata(r.decode(new Uint8Array(n)),a);else if(226===e){const t=new DataView(new Uint8Array(n.slice(2)).buffer);if(1297106432===t.getUint32(2,!1)){const e=1229531648===t.getUint32(6),a=60,r=t.getUint32(a,e),n=t.getUint32(a+4,e),o=t.getUint32(a+16,e),p=t.getUint32(a+20,e)+h+6;s=new Uint8Array(i.buffer,n,r),l=new Uint8Array(i.buffer,p,o)}}}if(!a.version)throw new Error("THREE.UltraHDRLoader: Not a valid UltraHDR image");if(!s||!l)throw new Error("THREE.UltraHDRLoader: Could not parse UltraHDR images");this._applyGainmapToSDR(a,s,l,((t,a,r)=>{e({width:a,height:r,data:t,format:RGBAFormat,type:this.type})}),(t=>{throw new Error(t)}))}load(t,e,a,r){const i=new DataTexture(this.type===HalfFloatType?new Uint16Array:new Float32Array,0,0,RGBAFormat,this.type,UVMapping,ClampToEdgeWrapping,ClampToEdgeWrapping,LinearFilter,LinearMipMapLinearFilter,1,LinearSRGBColorSpace);i.generateMipmaps=!0,i.flipY=!0;const n=new FileLoader(this.manager);return n.setResponseType("arraybuffer"),n.setRequestHeader(this.requestHeader),n.setPath(this.path),n.setWithCredentials(this.withCredentials),n.load(t,(t=>{try{this.parse(t,(t=>{i.image={data:t.data,width:t.width,height:t.height},i.needsUpdate=!0,e&&e(i,t)}))}catch(t){r&&r(t),console.error(t)}}),a,r),i}_parseXMPMetadata(t,e){const a=(new DOMParser).parseFromString(t.substring(t.indexOf("<"),t.lastIndexOf(">")+1),"text/xml"),[r]=a.getElementsByTagName("Container:Directory");if(r);else{const[t]=a.getElementsByTagName("rdf:Description");e.version=t.getAttribute("hdrgm:Version"),e.baseRenditionIsHDR="True"===t.getAttribute("hdrgm:BaseRenditionIsHDR"),e.gainMapMin=parseFloat(t.getAttribute("hdrgm:GainMapMin")||0),e.gainMapMax=parseFloat(t.getAttribute("hdrgm:GainMapMax")||1),e.gamma=parseFloat(t.getAttribute("hdrgm:Gamma")||1),e.offsetSDR=parseFloat(t.getAttribute("hdrgm:OffsetSDR")/(1/64)),e.offsetHDR=parseFloat(t.getAttribute("hdrgm:OffsetHDR")/(1/64)),e.hdrCapacityMin=parseFloat(t.getAttribute("hdrgm:HDRCapacityMin")||0),e.hdrCapacityMax=parseFloat(t.getAttribute("hdrgm:HDRCapacityMax")||1)}}_srgbToLinear(t){return t/255<.04045?t/255*.0773993808:t<1024?SRGB_TO_LINEAR[~~t]:Math.pow(t/255*.9478672986+.0521327014,2.4)}_applyGainmapToSDR(t,e,a,r,i){const n=t=>new Promise(((e,a)=>{const r=document.createElement("img");r.onload=()=>{const t={width:r.naturalWidth,height:r.naturalHeight,source:r};URL.revokeObjectURL(r.src),e(t)},r.onerror=()=>{URL.revokeObjectURL(r.src),a()},r.src=URL.createObjectURL(new Blob([t],{type:"image/jpeg"}))}));Promise.all([n(e),n(a)]).then((([e,a])=>{if(e.width/e.height!==a.width/a.height)return void i("THREE.UltraHDRLoader Error: Aspect ratio mismatch between SDR and Gainmap images");const n=document.createElement("canvas"),o=n.getContext("2d",{willReadFrequently:!0,colorSpace:"srgb"});n.width=e.width,n.height=e.height,o.drawImage(a.source,0,0,a.width,a.height,0,0,e.width,e.height);const s=o.getImageData(0,0,e.width,e.height,{colorSpace:"srgb"});o.drawImage(e.source,0,0);const l=o.getImageData(0,0,e.width,e.height,{colorSpace:"srgb"});let h;h=this.type===HalfFloatType?new Uint16Array(l.data.length).fill(23544):new Float32Array(l.data.length).fill(255);const p=Math.sqrt(Math.pow(1.8,t.hdrCapacityMax)),g=(Math.log2(p)-t.hdrCapacityMin)/(t.hdrCapacityMax-t.hdrCapacityMin),d=Math.min(Math.max(g,0),1),c=1===t.gamma;for(let a=0;a<l.data.length;a+=4){const r=a/4%e.width,i=Math.floor(a/4/e.width);for(let n=0;n<3;n++){const o=l.data[a+n],p=4*(i*e.width+r)+n,g=s.data[p]/255,m=c?g:Math.pow(g,1/t.gamma),f=t.gainMapMin*(1-m)+t.gainMapMax*m,w=(o+t.offsetSDR)*(f*d==0?1:Math.pow(2,f*d))-t.offsetHDR,M=Math.min(Math.max(this._srgbToLinear(w),0),65504);h[a+n]=this.type===HalfFloatType?DataUtils.toHalfFloat(M):M}}r(h,e.width,e.height)})).catch((()=>{throw new Error("THREE.UltraHDRLoader Error: Could not parse UltraHDR images")}))}}export{UltraHDRLoader};
//# sourceMappingURL=UltraHDRLoader.js.map