import{BufferGeometry,Color,FileLoader,Float32BufferAttribute,Loader,SRGBColorSpace}from"three";class XYZLoader extends Loader{load(e,t,r,o){const a=this,s=new FileLoader(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,(function(r){try{t(a.parse(r))}catch(t){o?o(t):console.error(t),a.manager.itemError(e)}}),r,o)}parse(e){const t=e.split("\n"),r=[],o=[],a=new Color;for(let e of t){if(e=e.trim(),"#"===e.charAt(0))continue;const t=e.split(/\s+/);if(3===t.length&&(r.push(parseFloat(t[0])),r.push(parseFloat(t[1])),r.push(parseFloat(t[2]))),6===t.length){r.push(parseFloat(t[0])),r.push(parseFloat(t[1])),r.push(parseFloat(t[2]));const e=parseFloat(t[3])/255,s=parseFloat(t[4])/255,l=parseFloat(t[5])/255;a.setRGB(e,s,l,SRGBColorSpace),o.push(a.r,a.g,a.b)}}const s=new BufferGeometry;return s.setAttribute("position",new Float32BufferAttribute(r,3)),o.length>0&&s.setAttribute("color",new Float32BufferAttribute(o,3)),s}}export{XYZLoader};
//# sourceMappingURL=XYZLoader.js.map