{"version":3,"file":"node_modules/three/examples/jsm/loaders/lwo/LWO3Parser.js","names":["LWO3Parser","constructor","IFFParser","this","IFF","parseBlock","debugger","offset","reader","closeForms","blockID","getIDTag","length","getUint32","dataOffset","parseForm","skipped","skip","currentNode","getInt32","parseObjectTag","parseLayer","parsePoints","parseVertexMapping","parsePolygonList","parseTagStrings","parsePolygonTagMapping","currentForm","description","getString","comment","channelName","wrap","w","getUint16","h","index","getVariableLengthIndex","imageIndex","referenceObject","referenceObjectID","currentSurface","surfaceShaderName","surfaceCustomAOVName","disabled","realName","refName","nodes","nodeName","push","inputNodeName","inputName","inputOutputName","fileName","textureChannel","maxSmoothingAngle","getFloat32","attributes","smooth","Color","value","getFloat32Array","Luminosity","Specular","Diffuse","Reflection","Glossiness","opacity","bumpStrength","side","reflectionMap","refractiveIndex","refractionMap","imageMapIndex","UVChannel","widthWrappingMode","heightWrappingMode","parseUnknownCHUNK","node","nodeID","log","currentFormEnd","parentForm"],"sources":["node_modules/three/examples/jsm/loaders/lwo/LWO3Parser.js"],"sourcesContent":["class LWO3Parser {\n\n\tconstructor( IFFParser ) {\n\n\t\tthis.IFF = IFFParser;\n\n\t}\n\n\tparseBlock() {\n\n\t\tthis.IFF.debugger.offset = this.IFF.reader.offset;\n\t\tthis.IFF.debugger.closeForms();\n\n\t\tconst blockID = this.IFF.reader.getIDTag();\n\t\tconst length = this.IFF.reader.getUint32(); // size of data in bytes\n\n\t\tthis.IFF.debugger.dataOffset = this.IFF.reader.offset;\n\t\tthis.IFF.debugger.length = length;\n\n\t\t// Data types may be found in either LWO2 OR LWO3 spec\n\t\tswitch ( blockID ) {\n\n\t\t\tcase 'FORM': // form blocks may consist of sub -chunks or sub-forms\n\t\t\t\tthis.IFF.parseForm( length );\n\t\t\t\tbreak;\n\n\t\t\t// SKIPPED CHUNKS\n\t\t\t// MISC skipped\n\t\t\tcase 'ICON': // Thumbnail Icon Image\n\t\t\tcase 'VMPA': // Vertex Map Parameter\n\t\t\tcase 'BBOX': // bounding box\n\t\t\t// case 'VMMD':\n\t\t\t// case 'VTYP':\n\n\t\t\t// normal maps can be specified, normally on models imported from other applications. Currently ignored\n\t\t\tcase 'NORM':\n\n\t\t\t// ENVL FORM skipped\n\t\t\tcase 'PRE ': // Pre-loop behavior for the keyframe\n\t\t\tcase 'POST': // Post-loop behavior for the keyframe\n\t\t\tcase 'KEY ':\n\t\t\tcase 'SPAN':\n\n\t\t\t// CLIP FORM skipped\n\t\t\tcase 'TIME':\n\t\t\tcase 'CLRS':\n\t\t\tcase 'CLRA':\n\t\t\tcase 'FILT':\n\t\t\tcase 'DITH':\n\t\t\tcase 'CONT':\n\t\t\tcase 'BRIT':\n\t\t\tcase 'SATR':\n\t\t\tcase 'HUE ':\n\t\t\tcase 'GAMM':\n\t\t\tcase 'NEGA':\n\t\t\tcase 'IFLT':\n\t\t\tcase 'PFLT':\n\n\t\t\t// Image Map Layer skipped\n\t\t\tcase 'PROJ':\n\t\t\tcase 'AXIS':\n\t\t\tcase 'AAST':\n\t\t\tcase 'PIXB':\n\t\t\tcase 'STCK':\n\n\t\t\t// Procedural Textures skipped\n\t\t\tcase 'VALU':\n\n\t\t\t// Gradient Textures skipped\n\t\t\tcase 'PNAM':\n\t\t\tcase 'INAM':\n\t\t\tcase 'GRST':\n\t\t\tcase 'GREN':\n\t\t\tcase 'GRPT':\n\t\t\tcase 'FKEY':\n\t\t\tcase 'IKEY':\n\n\t\t\t// Texture Mapping Form skipped\n\t\t\tcase 'CSYS':\n\n\t\t\t\t// Surface CHUNKs skipped\n\t\t\tcase 'OPAQ': // top level 'opacity' checkbox\n\t\t\tcase 'CMAP': // clip map\n\n\t\t\t// Surface node CHUNKS skipped\n\t\t\t// These mainly specify the node editor setup in LW\n\t\t\tcase 'NLOC':\n\t\t\tcase 'NZOM':\n\t\t\tcase 'NVER':\n\t\t\tcase 'NSRV':\n\t\t\tcase 'NCRD':\n\t\t\tcase 'NMOD':\n\t\t\tcase 'NSEL':\n\t\t\tcase 'NPRW':\n\t\t\tcase 'NPLA':\n\t\t\tcase 'VERS':\n\t\t\tcase 'ENUM':\n\t\t\tcase 'TAG ':\n\n\t\t\t// Car Material CHUNKS\n\t\t\tcase 'CGMD':\n\t\t\tcase 'CGTY':\n\t\t\tcase 'CGST':\n\t\t\tcase 'CGEN':\n\t\t\tcase 'CGTS':\n\t\t\tcase 'CGTE':\n\t\t\tcase 'OSMP':\n\t\t\tcase 'OMDE':\n\t\t\tcase 'OUTR':\n\t\t\tcase 'FLAG':\n\n\t\t\tcase 'TRNL':\n\t\t\tcase 'SHRP':\n\t\t\tcase 'RFOP':\n\t\t\tcase 'RSAN':\n\t\t\tcase 'TROP':\n\t\t\tcase 'RBLR':\n\t\t\tcase 'TBLR':\n\t\t\tcase 'CLRH':\n\t\t\tcase 'CLRF':\n\t\t\tcase 'ADTR':\n\t\t\tcase 'GLOW':\n\t\t\tcase 'LINE':\n\t\t\tcase 'ALPH':\n\t\t\tcase 'VCOL':\n\t\t\tcase 'ENAB':\n\t\t\t\tthis.IFF.debugger.skipped = true;\n\t\t\t\tthis.IFF.reader.skip( length );\n\t\t\t\tbreak;\n\n\t\t\t// Texture node chunks (not in spec)\n\t\t\tcase 'IPIX': // usePixelBlending\n\t\t\tcase 'IMIP': // useMipMaps\n\t\t\tcase 'IMOD': // imageBlendingMode\n\t\t\tcase 'AMOD': // unknown\n\t\t\tcase 'IINV': // imageInvertAlpha\n\t\t\tcase 'INCR': // imageInvertColor\n\t\t\tcase 'IAXS': // imageAxis ( for non-UV maps)\n\t\t\tcase 'IFOT': // imageFallofType\n\t\t\tcase 'ITIM': // timing for animated textures\n\t\t\tcase 'IWRL':\n\t\t\tcase 'IUTI':\n\t\t\tcase 'IINX':\n\t\t\tcase 'IINY':\n\t\t\tcase 'IINZ':\n\t\t\tcase 'IREF': // possibly a VX for reused texture nodes\n\t\t\t\tif ( length === 4 ) this.IFF.currentNode[ blockID ] = this.IFF.reader.getInt32();\n\t\t\t\telse this.IFF.reader.skip( length );\n\t\t\t\tbreak;\n\n\t\t\tcase 'OTAG':\n\t\t\t\tthis.IFF.parseObjectTag();\n\t\t\t\tbreak;\n\n\t\t\tcase 'LAYR':\n\t\t\t\tthis.IFF.parseLayer( length );\n\t\t\t\tbreak;\n\n\t\t\tcase 'PNTS':\n\t\t\t\tthis.IFF.parsePoints( length );\n\t\t\t\tbreak;\n\n\t\t\tcase 'VMAP':\n\t\t\t\tthis.IFF.parseVertexMapping( length );\n\t\t\t\tbreak;\n\n\t\t\tcase 'POLS':\n\t\t\t\tthis.IFF.parsePolygonList( length );\n\t\t\t\tbreak;\n\n\t\t\tcase 'TAGS':\n\t\t\t\tthis.IFF.parseTagStrings( length );\n\t\t\t\tbreak;\n\n\t\t\tcase 'PTAG':\n\t\t\t\tthis.IFF.parsePolygonTagMapping( length );\n\t\t\t\tbreak;\n\n\t\t\tcase 'VMAD':\n\t\t\t\tthis.IFF.parseVertexMapping( length, true );\n\t\t\t\tbreak;\n\n\t\t\t// Misc CHUNKS\n\t\t\tcase 'DESC': // Description Line\n\t\t\t\tthis.IFF.currentForm.description = this.IFF.reader.getString();\n\t\t\t\tbreak;\n\n\t\t\tcase 'TEXT':\n\t\t\tcase 'CMNT':\n\t\t\tcase 'NCOM':\n\t\t\t\tthis.IFF.currentForm.comment = this.IFF.reader.getString();\n\t\t\t\tbreak;\n\n\t\t\t// Envelope Form\n\t\t\tcase 'NAME':\n\t\t\t\tthis.IFF.currentForm.channelName = this.IFF.reader.getString();\n\t\t\t\tbreak;\n\n\t\t\t// Image Map Layer\n\t\t\tcase 'WRAP':\n\t\t\t\tthis.IFF.currentForm.wrap = { w: this.IFF.reader.getUint16(), h: this.IFF.reader.getUint16() };\n\t\t\t\tbreak;\n\n\t\t\tcase 'IMAG':\n\t\t\t\tconst index = this.IFF.reader.getVariableLengthIndex();\n\t\t\t\tthis.IFF.currentForm.imageIndex = index;\n\t\t\t\tbreak;\n\n\t\t\t// Texture Mapping Form\n\t\t\tcase 'OREF':\n\t\t\t\tthis.IFF.currentForm.referenceObject = this.IFF.reader.getString();\n\t\t\t\tbreak;\n\n\t\t\tcase 'ROID':\n\t\t\t\tthis.IFF.currentForm.referenceObjectID = this.IFF.reader.getUint32();\n\t\t\t\tbreak;\n\n\t\t\t// Surface Blocks\n\t\t\tcase 'SSHN':\n\t\t\t\tthis.IFF.currentSurface.surfaceShaderName = this.IFF.reader.getString();\n\t\t\t\tbreak;\n\n\t\t\tcase 'AOVN':\n\t\t\t\tthis.IFF.currentSurface.surfaceCustomAOVName = this.IFF.reader.getString();\n\t\t\t\tbreak;\n\n\t\t\t// Nodal Blocks\n\t\t\tcase 'NSTA':\n\t\t\t\tthis.IFF.currentForm.disabled = this.IFF.reader.getUint16();\n\t\t\t\tbreak;\n\n\t\t\tcase 'NRNM':\n\t\t\t\tthis.IFF.currentForm.realName = this.IFF.reader.getString();\n\t\t\t\tbreak;\n\n\t\t\tcase 'NNME':\n\t\t\t\tthis.IFF.currentForm.refName = this.IFF.reader.getString();\n\t\t\t\tthis.IFF.currentSurface.nodes[ this.IFF.currentForm.refName ] = this.IFF.currentForm;\n\t\t\t\tbreak;\n\n\t\t\t// Nodal Blocks : connections\n\t\t\tcase 'INME':\n\t\t\t\tif ( ! this.IFF.currentForm.nodeName ) this.IFF.currentForm.nodeName = [];\n\t\t\t\tthis.IFF.currentForm.nodeName.push( this.IFF.reader.getString() );\n\t\t\t\tbreak;\n\n\t\t\tcase 'IINN':\n\t\t\t\tif ( ! this.IFF.currentForm.inputNodeName ) this.IFF.currentForm.inputNodeName = [];\n\t\t\t\tthis.IFF.currentForm.inputNodeName.push( this.IFF.reader.getString() );\n\t\t\t\tbreak;\n\n\t\t\tcase 'IINM':\n\t\t\t\tif ( ! this.IFF.currentForm.inputName ) this.IFF.currentForm.inputName = [];\n\t\t\t\tthis.IFF.currentForm.inputName.push( this.IFF.reader.getString() );\n\t\t\t\tbreak;\n\n\t\t\tcase 'IONM':\n\t\t\t\tif ( ! this.IFF.currentForm.inputOutputName ) this.IFF.currentForm.inputOutputName = [];\n\t\t\t\tthis.IFF.currentForm.inputOutputName.push( this.IFF.reader.getString() );\n\t\t\t\tbreak;\n\n\t\t\tcase 'FNAM':\n\t\t\t\tthis.IFF.currentForm.fileName = this.IFF.reader.getString();\n\t\t\t\tbreak;\n\n\t\t\tcase 'CHAN': // NOTE: ENVL Forms may also have CHAN chunk, however ENVL is currently ignored\n\t\t\t\tif ( length === 4 ) this.IFF.currentForm.textureChannel = this.IFF.reader.getIDTag();\n\t\t\t\telse this.IFF.reader.skip( length );\n\t\t\t\tbreak;\n\n\t\t\t// LWO2 Spec chunks: these are needed since the SURF FORMs are often in LWO2 format\n\t\t\tcase 'SMAN':\n\t\t\t\tconst maxSmoothingAngle = this.IFF.reader.getFloat32();\n\t\t\t\tthis.IFF.currentSurface.attributes.smooth = ( maxSmoothingAngle < 0 ) ? false : true;\n\t\t\t\tbreak;\n\n\t\t\t// LWO2: Basic Surface Parameters\n\t\t\tcase 'COLR':\n\t\t\t\tthis.IFF.currentSurface.attributes.Color = { value: this.IFF.reader.getFloat32Array( 3 ) };\n\t\t\t\tthis.IFF.reader.skip( 2 ); // VX: envelope\n\t\t\t\tbreak;\n\n\t\t\tcase 'LUMI':\n\t\t\t\tthis.IFF.currentSurface.attributes.Luminosity = { value: this.IFF.reader.getFloat32() };\n\t\t\t\tthis.IFF.reader.skip( 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'SPEC':\n\t\t\t\tthis.IFF.currentSurface.attributes.Specular = { value: this.IFF.reader.getFloat32() };\n\t\t\t\tthis.IFF.reader.skip( 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'DIFF':\n\t\t\t\tthis.IFF.currentSurface.attributes.Diffuse = { value: this.IFF.reader.getFloat32() };\n\t\t\t\tthis.IFF.reader.skip( 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'REFL':\n\t\t\t\tthis.IFF.currentSurface.attributes.Reflection = { value: this.IFF.reader.getFloat32() };\n\t\t\t\tthis.IFF.reader.skip( 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'GLOS':\n\t\t\t\tthis.IFF.currentSurface.attributes.Glossiness = { value: this.IFF.reader.getFloat32() };\n\t\t\t\tthis.IFF.reader.skip( 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'TRAN':\n\t\t\t\tthis.IFF.currentSurface.attributes.opacity = this.IFF.reader.getFloat32();\n\t\t\t\tthis.IFF.reader.skip( 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'BUMP':\n\t\t\t\tthis.IFF.currentSurface.attributes.bumpStrength = this.IFF.reader.getFloat32();\n\t\t\t\tthis.IFF.reader.skip( 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'SIDE':\n\t\t\t\tthis.IFF.currentSurface.attributes.side = this.IFF.reader.getUint16();\n\t\t\t\tbreak;\n\n\t\t\tcase 'RIMG':\n\t\t\t\tthis.IFF.currentSurface.attributes.reflectionMap = this.IFF.reader.getVariableLengthIndex();\n\t\t\t\tbreak;\n\n\t\t\tcase 'RIND':\n\t\t\t\tthis.IFF.currentSurface.attributes.refractiveIndex = this.IFF.reader.getFloat32();\n\t\t\t\tthis.IFF.reader.skip( 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'TIMG':\n\t\t\t\tthis.IFF.currentSurface.attributes.refractionMap = this.IFF.reader.getVariableLengthIndex();\n\t\t\t\tbreak;\n\n\t\t\tcase 'IMAP':\n\t\t\t\tthis.IFF.currentSurface.attributes.imageMapIndex = this.IFF.reader.getUint32();\n\t\t\t\tbreak;\n\n\t\t\tcase 'IUVI': // uv channel name\n\t\t\t\tthis.IFF.currentNode.UVChannel = this.IFF.reader.getString( length );\n\t\t\t\tbreak;\n\n\t\t\tcase 'IUTL': // widthWrappingMode: 0 = Reset, 1 = Repeat, 2 = Mirror, 3 = Edge\n\t\t\t\tthis.IFF.currentNode.widthWrappingMode = this.IFF.reader.getUint32();\n\t\t\t\tbreak;\n\t\t\tcase 'IVTL': // heightWrappingMode\n\t\t\t\tthis.IFF.currentNode.heightWrappingMode = this.IFF.reader.getUint32();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis.IFF.parseUnknownCHUNK( blockID, length );\n\n\t\t}\n\n\t\tif ( blockID != 'FORM' ) {\n\n\t\t\tthis.IFF.debugger.node = 1;\n\t\t\tthis.IFF.debugger.nodeID = blockID;\n\t\t\tthis.IFF.debugger.log();\n\n\t\t}\n\n\t\tif ( this.IFF.reader.offset >= this.IFF.currentFormEnd ) {\n\n\t\t\tthis.IFF.currentForm = this.IFF.parentForm;\n\n\t\t}\n\n\t}\n\n}\n\nexport { LWO3Parser };\n"],"mappings":"AAAA,MAAMA,WAEL,WAAAC,CAAaC,GAEZC,KAAKC,IAAMF,CAEZ,CAEA,UAAAG,GAECF,KAAKC,IAAIE,SAASC,OAASJ,KAAKC,IAAII,OAAOD,OAC3CJ,KAAKC,IAAIE,SAASG,aAElB,MAAMC,EAAUP,KAAKC,IAAII,OAAOG,WAC1BC,EAAST,KAAKC,IAAII,OAAOK,YAM/B,OAJAV,KAAKC,IAAIE,SAASQ,WAAaX,KAAKC,IAAII,OAAOD,OAC/CJ,KAAKC,IAAIE,SAASM,OAASA,EAGlBF,GAER,IAAK,OACJP,KAAKC,IAAIW,UAAWH,GACpB,MAID,IAAK,OACL,IAAK,OACL,IAAK,OAKL,IAAK,OAGL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OAGL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OAGL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OAGL,IAAK,OAGL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OAGL,IAAK,OAGL,IAAK,OACL,IAAK,OAIL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OAGL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OAEL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACJT,KAAKC,IAAIE,SAASU,SAAU,EAC5Bb,KAAKC,IAAII,OAAOS,KAAML,GACtB,MAGD,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACY,IAAXA,EAAeT,KAAKC,IAAIc,YAAaR,GAAYP,KAAKC,IAAII,OAAOW,WACjEhB,KAAKC,IAAII,OAAOS,KAAML,GAC3B,MAED,IAAK,OACJT,KAAKC,IAAIgB,iBACT,MAED,IAAK,OACJjB,KAAKC,IAAIiB,WAAYT,GACrB,MAED,IAAK,OACJT,KAAKC,IAAIkB,YAAaV,GACtB,MAED,IAAK,OACJT,KAAKC,IAAImB,mBAAoBX,GAC7B,MAED,IAAK,OACJT,KAAKC,IAAIoB,iBAAkBZ,GAC3B,MAED,IAAK,OACJT,KAAKC,IAAIqB,gBAAiBb,GAC1B,MAED,IAAK,OACJT,KAAKC,IAAIsB,uBAAwBd,GACjC,MAED,IAAK,OACJT,KAAKC,IAAImB,mBAAoBX,GAAQ,GACrC,MAGD,IAAK,OACJT,KAAKC,IAAIuB,YAAYC,YAAczB,KAAKC,IAAII,OAAOqB,YACnD,MAED,IAAK,OACL,IAAK,OACL,IAAK,OACJ1B,KAAKC,IAAIuB,YAAYG,QAAU3B,KAAKC,IAAII,OAAOqB,YAC/C,MAGD,IAAK,OACJ1B,KAAKC,IAAIuB,YAAYI,YAAc5B,KAAKC,IAAII,OAAOqB,YACnD,MAGD,IAAK,OACJ1B,KAAKC,IAAIuB,YAAYK,KAAO,CAAEC,EAAG9B,KAAKC,IAAII,OAAO0B,YAAaC,EAAGhC,KAAKC,IAAII,OAAO0B,aACjF,MAED,IAAK,OACJ,MAAME,EAAQjC,KAAKC,IAAII,OAAO6B,yBAC9BlC,KAAKC,IAAIuB,YAAYW,WAAaF,EAClC,MAGD,IAAK,OACJjC,KAAKC,IAAIuB,YAAYY,gBAAkBpC,KAAKC,IAAII,OAAOqB,YACvD,MAED,IAAK,OACJ1B,KAAKC,IAAIuB,YAAYa,kBAAoBrC,KAAKC,IAAII,OAAOK,YACzD,MAGD,IAAK,OACJV,KAAKC,IAAIqC,eAAeC,kBAAoBvC,KAAKC,IAAII,OAAOqB,YAC5D,MAED,IAAK,OACJ1B,KAAKC,IAAIqC,eAAeE,qBAAuBxC,KAAKC,IAAII,OAAOqB,YAC/D,MAGD,IAAK,OACJ1B,KAAKC,IAAIuB,YAAYiB,SAAWzC,KAAKC,IAAII,OAAO0B,YAChD,MAED,IAAK,OACJ/B,KAAKC,IAAIuB,YAAYkB,SAAW1C,KAAKC,IAAII,OAAOqB,YAChD,MAED,IAAK,OACJ1B,KAAKC,IAAIuB,YAAYmB,QAAU3C,KAAKC,IAAII,OAAOqB,YAC/C1B,KAAKC,IAAIqC,eAAeM,MAAO5C,KAAKC,IAAIuB,YAAYmB,SAAY3C,KAAKC,IAAIuB,YACzE,MAGD,IAAK,OACGxB,KAAKC,IAAIuB,YAAYqB,WAAW7C,KAAKC,IAAIuB,YAAYqB,SAAW,IACvE7C,KAAKC,IAAIuB,YAAYqB,SAASC,KAAM9C,KAAKC,IAAII,OAAOqB,aACpD,MAED,IAAK,OACG1B,KAAKC,IAAIuB,YAAYuB,gBAAgB/C,KAAKC,IAAIuB,YAAYuB,cAAgB,IACjF/C,KAAKC,IAAIuB,YAAYuB,cAAcD,KAAM9C,KAAKC,IAAII,OAAOqB,aACzD,MAED,IAAK,OACG1B,KAAKC,IAAIuB,YAAYwB,YAAYhD,KAAKC,IAAIuB,YAAYwB,UAAY,IACzEhD,KAAKC,IAAIuB,YAAYwB,UAAUF,KAAM9C,KAAKC,IAAII,OAAOqB,aACrD,MAED,IAAK,OACG1B,KAAKC,IAAIuB,YAAYyB,kBAAkBjD,KAAKC,IAAIuB,YAAYyB,gBAAkB,IACrFjD,KAAKC,IAAIuB,YAAYyB,gBAAgBH,KAAM9C,KAAKC,IAAII,OAAOqB,aAC3D,MAED,IAAK,OACJ1B,KAAKC,IAAIuB,YAAY0B,SAAWlD,KAAKC,IAAII,OAAOqB,YAChD,MAED,IAAK,OACY,IAAXjB,EAAeT,KAAKC,IAAIuB,YAAY2B,eAAiBnD,KAAKC,IAAII,OAAOG,WACrER,KAAKC,IAAII,OAAOS,KAAML,GAC3B,MAGD,IAAK,OACJ,MAAM2C,EAAoBpD,KAAKC,IAAII,OAAOgD,aAC1CrD,KAAKC,IAAIqC,eAAegB,WAAWC,SAAWH,EAAoB,GAClE,MAGD,IAAK,OACJpD,KAAKC,IAAIqC,eAAegB,WAAWE,MAAQ,CAAEC,MAAOzD,KAAKC,IAAII,OAAOqD,gBAAiB,IACrF1D,KAAKC,IAAII,OAAOS,KAAM,GACtB,MAED,IAAK,OACJd,KAAKC,IAAIqC,eAAegB,WAAWK,WAAa,CAAEF,MAAOzD,KAAKC,IAAII,OAAOgD,cACzErD,KAAKC,IAAII,OAAOS,KAAM,GACtB,MAED,IAAK,OACJd,KAAKC,IAAIqC,eAAegB,WAAWM,SAAW,CAAEH,MAAOzD,KAAKC,IAAII,OAAOgD,cACvErD,KAAKC,IAAII,OAAOS,KAAM,GACtB,MAED,IAAK,OACJd,KAAKC,IAAIqC,eAAegB,WAAWO,QAAU,CAAEJ,MAAOzD,KAAKC,IAAII,OAAOgD,cACtErD,KAAKC,IAAII,OAAOS,KAAM,GACtB,MAED,IAAK,OACJd,KAAKC,IAAIqC,eAAegB,WAAWQ,WAAa,CAAEL,MAAOzD,KAAKC,IAAII,OAAOgD,cACzErD,KAAKC,IAAII,OAAOS,KAAM,GACtB,MAED,IAAK,OACJd,KAAKC,IAAIqC,eAAegB,WAAWS,WAAa,CAAEN,MAAOzD,KAAKC,IAAII,OAAOgD,cACzErD,KAAKC,IAAII,OAAOS,KAAM,GACtB,MAED,IAAK,OACJd,KAAKC,IAAIqC,eAAegB,WAAWU,QAAUhE,KAAKC,IAAII,OAAOgD,aAC7DrD,KAAKC,IAAII,OAAOS,KAAM,GACtB,MAED,IAAK,OACJd,KAAKC,IAAIqC,eAAegB,WAAWW,aAAejE,KAAKC,IAAII,OAAOgD,aAClErD,KAAKC,IAAII,OAAOS,KAAM,GACtB,MAED,IAAK,OACJd,KAAKC,IAAIqC,eAAegB,WAAWY,KAAOlE,KAAKC,IAAII,OAAO0B,YAC1D,MAED,IAAK,OACJ/B,KAAKC,IAAIqC,eAAegB,WAAWa,cAAgBnE,KAAKC,IAAII,OAAO6B,yBACnE,MAED,IAAK,OACJlC,KAAKC,IAAIqC,eAAegB,WAAWc,gBAAkBpE,KAAKC,IAAII,OAAOgD,aACrErD,KAAKC,IAAII,OAAOS,KAAM,GACtB,MAED,IAAK,OACJd,KAAKC,IAAIqC,eAAegB,WAAWe,cAAgBrE,KAAKC,IAAII,OAAO6B,yBACnE,MAED,IAAK,OACJlC,KAAKC,IAAIqC,eAAegB,WAAWgB,cAAgBtE,KAAKC,IAAII,OAAOK,YACnE,MAED,IAAK,OACJV,KAAKC,IAAIc,YAAYwD,UAAYvE,KAAKC,IAAII,OAAOqB,UAAWjB,GAC5D,MAED,IAAK,OACJT,KAAKC,IAAIc,YAAYyD,kBAAoBxE,KAAKC,IAAII,OAAOK,YACzD,MACD,IAAK,OACJV,KAAKC,IAAIc,YAAY0D,mBAAqBzE,KAAKC,IAAII,OAAOK,YAC1D,MAED,QACCV,KAAKC,IAAIyE,kBAAmBnE,EAASE,GAIvB,QAAXF,IAEJP,KAAKC,IAAIE,SAASwE,KAAO,EACzB3E,KAAKC,IAAIE,SAASyE,OAASrE,EAC3BP,KAAKC,IAAIE,SAAS0E,OAId7E,KAAKC,IAAII,OAAOD,QAAUJ,KAAKC,IAAI6E,iBAEvC9E,KAAKC,IAAIuB,YAAcxB,KAAKC,IAAI8E,WAIlC,SAIQlF","ignoreList":[]}