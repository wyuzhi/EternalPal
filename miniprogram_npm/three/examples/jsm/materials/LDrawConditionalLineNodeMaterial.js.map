{"version":3,"file":"node_modules/three/examples/jsm/materials/LDrawConditionalLineNodeMaterial.js","names":["Color","attribute","cameraProjectionMatrix","dot","float","Fn","modelViewMatrix","modelViewProjection","NodeMaterial","normalize","positionGeometry","sign","uniform","varyingProperty","vec2","vec4","LDrawConditionalLineMaterial","type","constructor","parameters","super","vertexNode","control0","control1","direction","mvp","mul","c0","toVar","c1","p0","p1","add","xy","divAssign","w","dir","sub","norm","y","negate","x","c0dir","c1dir","d0","d1","discardFlag","notEqual","select","assign","fragmentNode","greaterThan","discard","this","_diffuseUniform","_opacityUniform","Object","defineProperties","opacity","get","value","set","color","copy","setValues","isLDrawConditionalLineMaterial"],"sources":["node_modules/three/examples/jsm/materials/LDrawConditionalLineNodeMaterial.js"],"sourcesContent":["import { Color } from 'three';\nimport { attribute, cameraProjectionMatrix, dot, float, Fn, modelViewMatrix, modelViewProjection, NodeMaterial, normalize, positionGeometry, sign, uniform, varyingProperty, vec2, vec4 } from 'three/tsl';\n\n/**\n * A special line material for meshes loaded via {@link LDrawLoader}.\n *\n * This module can only be used with {@link WebGPURenderer}. When using {@link WebGLRenderer},\n * import the class from `LDrawConditionalLineMaterial.js`.\n *\n * @augments NodeMaterial\n * @three_import import { LDrawConditionalLineMaterial } from 'three/addons/materials/LDrawConditionalLineMaterial.js';\n */\nclass LDrawConditionalLineMaterial extends NodeMaterial {\n\n\tstatic get type() {\n\n\t\treturn 'LDrawConditionalLineMaterial';\n\n\t}\n\n\t/**\n\t * Constructs a new conditional line material.\n\t *\n\t * @param {Object} [parameters] - An object with one or more properties\n\t * defining the material's appearance. Any property of the material\n\t * (including any property from inherited materials) can be passed\n\t * in here. Color values can be passed any type of value accepted\n\t * by {@link Color#set}.\n\t */\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tconst vertexNode = /*@__PURE__*/ Fn( () => {\n\n\t\t\tconst control0 = attribute( 'control0', 'vec3' );\n\t\t\tconst control1 = attribute( 'control1', 'vec3' );\n\t\t\tconst direction = attribute( 'direction', 'vec3' );\n\n\t\t\tconst mvp = cameraProjectionMatrix.mul( modelViewMatrix );\n\n\t\t\t// Transform the line segment ends and control points into camera clip space\n\n\t\t\tconst c0 = mvp.mul( vec4( control0, 1 ) ).toVar();\n\t\t\tconst c1 = mvp.mul( vec4( control1, 1 ) ).toVar();\n\t\t\tconst p0 = mvp.mul( vec4( positionGeometry, 1 ) ).toVar();\n\t\t\tconst p1 = mvp.mul( vec4( positionGeometry.add( direction ), 1 ) ).toVar();\n\n\t\t\tc0.xy.divAssign( c0.w );\n\t\t\tc1.xy.divAssign( c1.w );\n\t\t\tp0.xy.divAssign( p0.w );\n\t\t\tp1.xy.divAssign( p1.w );\n\n\t\t\t// Get the direction of the segment and an orthogonal vector\n\n\t\t\tconst dir = p1.xy.sub( p0.xy ).toVar();\n\t\t\tconst norm = vec2( dir.y.negate(), dir.x ).toVar();\n\n\t\t\t// Get control point directions from the line\n\t\t\tconst c0dir = c0.xy.sub( p1.xy ).toVar();\n\t\t\tconst c1dir = c1.xy.sub( p1.xy ).toVar();\n\n\t\t\t// If the vectors to the controls points are pointed in different directions away\n\t\t\t// from the line segment then the line should not be drawn.\n\t\t\tconst d0 = dot( normalize( norm ), normalize( c0dir ) ).toVar();\n\t\t\tconst d1 = dot( normalize( norm ), normalize( c1dir ) ).toVar();\n\t\t\tconst discardFlag = sign( d0 ).notEqual( sign( d1 ) ).select( float( 1 ), float( 0 ) );\n\n\t\t\tvaryingProperty( 'float', 'discardFlag' ).assign( discardFlag );\n\n\t\t\treturn modelViewProjection;\n\n\t\t} )();\n\n\t\tconst fragmentNode = /*@__PURE__*/ Fn( () => {\n\n\t\t\tconst discardFlag = varyingProperty( 'float', 'discardFlag' );\n\n\t\t\tdiscardFlag.greaterThan( float( 0.5 ) ).discard();\n\n\t\t\treturn vec4( this._diffuseUniform, this._opacityUniform );\n\n\t\t} )();\n\n\t\tthis.vertexNode = vertexNode;\n\t\tthis.fragmentNode = fragmentNode;\n\n\t\tthis._diffuseUniform = uniform( new Color() );\n\t\tthis._opacityUniform = uniform( 1 );\n\n\t\t//\n\n\t\tObject.defineProperties( this, {\n\n\t\t\t/**\n\t\t\t * The material's opacity.\n\t\t\t *\n\t\t\t * @name LDrawConditionalLineMaterial#opacity\n\t\t\t * @type {number}\n\t\t\t * @default 1\n\t\t\t */\n\t\t\topacity: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this._opacityUniform.value;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis._opacityUniform.value = value;\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The material's color.\n\t\t\t *\n\t\t\t * @name LDrawConditionalLineMaterial#color\n\t\t\t * @type {Color}\n\t\t\t * @default (1,1,1)\n\t\t\t */\n\t\t\tcolor: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this._diffuseUniform.value;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis._diffuseUniform.value.copy( value );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\t\tthis.setValues( parameters );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isLDrawConditionalLineMaterial = true;\n\n\t}\n\n}\n\nexport { LDrawConditionalLineMaterial };\n"],"mappings":"OAASA,UAAa,eACbC,UAAWC,uBAAwBC,IAAKC,MAAOC,GAAIC,gBAAiBC,oBAAqBC,aAAcC,UAAWC,iBAAkBC,KAAMC,QAASC,gBAAiBC,KAAMC,SAAY,YAW/L,MAAMC,qCAAqCR,aAE1C,eAAWS,GAEV,MAAO,8BAER,CAWA,WAAAC,CAAaC,GAEZC,QAEA,MAAMC,EAA2BhB,IAAI,KAEpC,MAAMiB,EAAWrB,UAAW,WAAY,QAClCsB,EAAWtB,UAAW,WAAY,QAClCuB,EAAYvB,UAAW,YAAa,QAEpCwB,EAAMvB,uBAAuBwB,IAAKpB,iBAIlCqB,EAAKF,EAAIC,IAAKX,KAAMO,EAAU,IAAMM,QACpCC,EAAKJ,EAAIC,IAAKX,KAAMQ,EAAU,IAAMK,QACpCE,EAAKL,EAAIC,IAAKX,KAAML,iBAAkB,IAAMkB,QAC5CG,EAAKN,EAAIC,IAAKX,KAAML,iBAAiBsB,IAAKR,GAAa,IAAMI,QAEnED,EAAGM,GAAGC,UAAWP,EAAGQ,GACpBN,EAAGI,GAAGC,UAAWL,EAAGM,GACpBL,EAAGG,GAAGC,UAAWJ,EAAGK,GACpBJ,EAAGE,GAAGC,UAAWH,EAAGI,GAIpB,MAAMC,EAAML,EAAGE,GAAGI,IAAKP,EAAGG,IAAKL,QACzBU,EAAOxB,KAAMsB,EAAIG,EAAEC,SAAUJ,EAAIK,GAAIb,QAGrCc,EAAQf,EAAGM,GAAGI,IAAKN,EAAGE,IAAKL,QAC3Be,EAAQd,EAAGI,GAAGI,IAAKN,EAAGE,IAAKL,QAI3BgB,EAAKzC,IAAKM,UAAW6B,GAAQ7B,UAAWiC,IAAUd,QAClDiB,EAAK1C,IAAKM,UAAW6B,GAAQ7B,UAAWkC,IAAUf,QAClDkB,EAAcnC,KAAMiC,GAAKG,SAAUpC,KAAMkC,IAAOG,OAAQ5C,MAAO,GAAKA,MAAO,IAIjF,OAFAS,gBAAiB,QAAS,eAAgBoC,OAAQH,GAE3CvC,mBAAmB,GArCMF,GAyC3B6C,EAA6B7C,IAAI,KAElBQ,gBAAiB,QAAS,eAElCsC,YAAa/C,MAAO,KAAQgD,UAEjCrC,KAAMsC,KAAKC,gBAAiBD,KAAKE,mBANNlD,GAUnCgD,KAAKhC,WAAaA,EAClBgC,KAAKH,aAAeA,EAEpBG,KAAKC,gBAAkB1C,QAAS,IAAIZ,OACpCqD,KAAKE,gBAAkB3C,QAAS,GAIhC4C,OAAOC,iBAAkBJ,KAAM,CAS9BK,QAAS,CACRC,IAAK,WAEJ,OAAON,KAAKE,gBAAgBK,KAE7B,EAEAC,IAAK,SAAWD,GAEfP,KAAKE,gBAAgBK,MAAQA,CAE9B,GAUDE,MAAO,CACNH,IAAK,WAEJ,OAAON,KAAKC,gBAAgBM,KAE7B,EAEAC,IAAK,SAAWD,GAEfP,KAAKC,gBAAgBM,MAAMG,KAAMH,EAElC,KAKFP,KAAKW,UAAW7C,GAShBkC,KAAKY,gCAAiC,CAEvC,SAIQjD","ignoreList":[]}