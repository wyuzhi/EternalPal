class SimplexNoise{constructor(t=Math){this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]],this.p=[];for(let s=0;s<256;s++)this.p[s]=Math.floor(256*t.random());this.perm=[];for(let t=0;t<512;t++)this.perm[t]=this.p[255&t];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]}noise(t,s){let h,r,i;const e=(t+s)*(.5*(Math.sqrt(3)-1)),o=Math.floor(t+e),l=Math.floor(s+e),p=(3-Math.sqrt(3))/6,d=(o+l)*p,a=t-(o-d),m=s-(l-d);let n,M;a>m?(n=1,M=0):(n=0,M=1);const _=a-n+p,f=m-M+p,g=a-1+2*p,c=m-1+2*p,u=255&o,x=255&l,q=this.perm[u+this.perm[x]]%12,N=this.perm[u+n+this.perm[x+M]]%12,S=this.perm[u+1+this.perm[x+1]]%12;let b=.5-a*a-m*m;b<0?h=0:(b*=b,h=b*b*this._dot(this.grad3[q],a,m));let j=.5-_*_-f*f;j<0?r=0:(j*=j,r=j*j*this._dot(this.grad3[N],_,f));let k=.5-g*g-c*c;return k<0?i=0:(k*=k,i=k*k*this._dot(this.grad3[S],g,c)),70*(h+r+i)}noise3d(t,s,h){let r,i,e,o;const l=(t+s+h)*(1/3),p=Math.floor(t+l),d=Math.floor(s+l),a=Math.floor(h+l),m=1/6,n=(p+d+a)*m,M=t-(p-n),_=s-(d-n),f=h-(a-n);let g,c,u,x,q,N;M>=_?_>=f?(g=1,c=0,u=0,x=1,q=1,N=0):M>=f?(g=1,c=0,u=0,x=1,q=0,N=1):(g=0,c=0,u=1,x=1,q=0,N=1):_<f?(g=0,c=0,u=1,x=0,q=1,N=1):M<f?(g=0,c=1,u=0,x=0,q=1,N=1):(g=0,c=1,u=0,x=1,q=1,N=0);const S=M-g+m,b=_-c+m,j=f-u+m,k=M-x+2*m,v=_-q+2*m,w=f-N+2*m,y=M-1+.5,z=_-1+.5,A=f-1+.5,B=255&p,C=255&d,D=255&a,E=this.perm[B+this.perm[C+this.perm[D]]]%12,F=this.perm[B+g+this.perm[C+c+this.perm[D+u]]]%12,G=this.perm[B+x+this.perm[C+q+this.perm[D+N]]]%12,H=this.perm[B+1+this.perm[C+1+this.perm[D+1]]]%12;let I=.6-M*M-_*_-f*f;I<0?r=0:(I*=I,r=I*I*this._dot3(this.grad3[E],M,_,f));let J=.6-S*S-b*b-j*j;J<0?i=0:(J*=J,i=J*J*this._dot3(this.grad3[F],S,b,j));let K=.6-k*k-v*v-w*w;K<0?e=0:(K*=K,e=K*K*this._dot3(this.grad3[G],k,v,w));let L=.6-y*y-z*z-A*A;return L<0?o=0:(L*=L,o=L*L*this._dot3(this.grad3[H],y,z,A)),32*(r+i+e+o)}noise4d(t,s,h,r){const i=this.grad4,e=this.simplex,o=this.perm,l=(Math.sqrt(5)-1)/4,p=(5-Math.sqrt(5))/20;let d,a,m,n,M;const _=(t+s+h+r)*l,f=Math.floor(t+_),g=Math.floor(s+_),c=Math.floor(h+_),u=Math.floor(r+_),x=(f+g+c+u)*p,q=t-(f-x),N=s-(g-x),S=h-(c-x),b=r-(u-x),j=(q>N?32:0)+(q>S?16:0)+(N>S?8:0)+(q>b?4:0)+(N>b?2:0)+(S>b?1:0),k=e[j][0]>=3?1:0,v=e[j][1]>=3?1:0,w=e[j][2]>=3?1:0,y=e[j][3]>=3?1:0,z=e[j][0]>=2?1:0,A=e[j][1]>=2?1:0,B=e[j][2]>=2?1:0,C=e[j][3]>=2?1:0,D=e[j][0]>=1?1:0,E=e[j][1]>=1?1:0,F=e[j][2]>=1?1:0,G=e[j][3]>=1?1:0,H=q-k+p,I=N-v+p,J=S-w+p,K=b-y+p,L=q-z+2*p,O=N-A+2*p,P=S-B+2*p,Q=b-C+2*p,R=q-D+3*p,T=N-E+3*p,U=S-F+3*p,V=b-G+3*p,W=q-1+4*p,X=N-1+4*p,Y=S-1+4*p,Z=b-1+4*p,$=255&f,tt=255&g,st=255&c,ht=255&u,rt=o[$+o[tt+o[st+o[ht]]]]%32,it=o[$+k+o[tt+v+o[st+w+o[ht+y]]]]%32,et=o[$+z+o[tt+A+o[st+B+o[ht+C]]]]%32,ot=o[$+D+o[tt+E+o[st+F+o[ht+G]]]]%32,lt=o[$+1+o[tt+1+o[st+1+o[ht+1]]]]%32;let pt=.6-q*q-N*N-S*S-b*b;pt<0?d=0:(pt*=pt,d=pt*pt*this._dot4(i[rt],q,N,S,b));let dt=.6-H*H-I*I-J*J-K*K;dt<0?a=0:(dt*=dt,a=dt*dt*this._dot4(i[it],H,I,J,K));let at=.6-L*L-O*O-P*P-Q*Q;at<0?m=0:(at*=at,m=at*at*this._dot4(i[et],L,O,P,Q));let mt=.6-R*R-T*T-U*U-V*V;mt<0?n=0:(mt*=mt,n=mt*mt*this._dot4(i[ot],R,T,U,V));let nt=.6-W*W-X*X-Y*Y-Z*Z;return nt<0?M=0:(nt*=nt,M=nt*nt*this._dot4(i[lt],W,X,Y,Z)),27*(d+a+m+n+M)}_dot(t,s,h){return t[0]*s+t[1]*h}_dot3(t,s,h,r){return t[0]*s+t[1]*h+t[2]*r}_dot4(t,s,h,r,i){return t[0]*s+t[1]*h+t[2]*r+t[3]*i}}export{SimplexNoise};
//# sourceMappingURL=SimplexNoise.js.map