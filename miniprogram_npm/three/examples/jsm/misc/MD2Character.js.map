{"version":3,"file":"node_modules/three/examples/jsm/misc/MD2Character.js","names":["AnimationMixer","Box3","Mesh","MeshLambertMaterial","Object3D","TextureLoader","UVMapping","SRGBColorSpace","MD2Loader","MD2Character","constructor","this","scale","animationFPS","root","meshBody","meshWeapon","skinsBody","skinsWeapon","weapons","activeAnimationClipName","mixer","onLoadComplete","loadCounter","loadParts","config","scope","createPart","geometry","skinMap","materialWireframe","color","wireframe","materialTexture","map","mesh","rotation","y","Math","PI","castShadow","receiveShadow","loadTextures","baseUrl","textureUrls","textureLoader","textures","i","length","load","checkLoadingComplete","mapping","name","colorSpace","skins","weaponsTextures","loader","body","geo","boundingBox","setFromBufferAttribute","attributes","position","min","set","add","clipOffset","animations","generateCallback","index","visible","setPlaybackRate","rate","timeScale","setWireframe","wireframeEnabled","material","setSkin","setWeapon","activeWeapon","syncWeaponAnimation","setAnimation","clipName","activeAction","stop","action","clipAction","play","activeClipName","syncWith","update","delta"],"sources":["node_modules/three/examples/jsm/misc/MD2Character.js"],"sourcesContent":["import {\n\tAnimationMixer,\n\tBox3,\n\tMesh,\n\tMeshLambertMaterial,\n\tObject3D,\n\tTextureLoader,\n\tUVMapping,\n\tSRGBColorSpace\n} from 'three';\nimport { MD2Loader } from '../loaders/MD2Loader.js';\n\n/**\n * This class represents a management component for animated MD2\n * character assets.\n *\n * @three_import import { MD2Character } from 'three/addons/misc/MD2Character.js';\n */\nclass MD2Character {\n\n\t/**\n\t * Constructs a new MD2 character.\n\t */\n\tconstructor() {\n\n\t\t/**\n\t\t * The mesh scale.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.scale = 1;\n\n\t\t/**\n\t\t * The FPS\n\t\t *\n\t\t * @type {number}\n\t\t * @default 6\n\t\t */\n\t\tthis.animationFPS = 6;\n\n\t\t/**\n\t\t * The root 3D object\n\t\t *\n\t\t * @type {Object3D}\n\t\t */\n\t\tthis.root = new Object3D();\n\n\t\t/**\n\t\t * The body mesh.\n\t\t *\n\t\t * @type {?Mesh}\n\t\t * @default null\n\t\t */\n\t\tthis.meshBody = null;\n\n\t\t/**\n\t\t * The weapon mesh.\n\t\t *\n\t\t * @type {?Mesh}\n\t\t * @default null\n\t\t */\n\t\tthis.meshWeapon = null;\n\n\t\t/**\n\t\t * The body skins.\n\t\t *\n\t\t * @type {Array<Texture>}\n\t\t */\n\t\tthis.skinsBody = [];\n\n\t\t/**\n\t\t * The weapon skins.\n\t\t *\n\t\t * @type {Array<Texture>}\n\t\t */\n\t\tthis.skinsWeapon = [];\n\n\t\t/**\n\t\t * The weapon meshes.\n\t\t *\n\t\t * @type {Array<Mesh>}\n\t\t */\n\t\tthis.weapons = [];\n\n\t\t/**\n\t\t * The name of the active animation clip.\n\t\t *\n\t\t * @type {?string}\n\t\t * @default null\n\t\t */\n\t\tthis.activeAnimationClipName = null;\n\n\t\t/**\n\t\t * The animation mixer.\n\t\t *\n\t\t * @type {?AnimationMixer}\n\t\t * @default null\n\t\t */\n\t\tthis.mixer = null;\n\n\t\t/**\n\t\t * The `onLoad` callback function.\n\t\t *\n\t\t * @type {Function}\n\t\t */\n\t\tthis.onLoadComplete = function () {};\n\n\t\t// internal\n\n\t\tthis.loadCounter = 0;\n\n\t}\n\n\t/**\n\t * Loads the character model for the given config.\n\t *\n\t * @param {Object} config - The config which defines the model and textures paths.\n\t */\n\tloadParts( config ) {\n\n\t\tconst scope = this;\n\n\t\tfunction createPart( geometry, skinMap ) {\n\n\t\t\tconst materialWireframe = new MeshLambertMaterial( { color: 0xffaa00, wireframe: true } );\n\t\t\tconst materialTexture = new MeshLambertMaterial( { color: 0xffffff, wireframe: false, map: skinMap } );\n\n\t\t\t//\n\n\t\t\tconst mesh = new Mesh( geometry, materialTexture );\n\t\t\tmesh.rotation.y = - Math.PI / 2;\n\n\t\t\tmesh.castShadow = true;\n\t\t\tmesh.receiveShadow = true;\n\n\t\t\t//\n\n\t\t\tmesh.materialTexture = materialTexture;\n\t\t\tmesh.materialWireframe = materialWireframe;\n\n\t\t\treturn mesh;\n\n\t\t}\n\n\t\tfunction loadTextures( baseUrl, textureUrls ) {\n\n\t\t\tconst textureLoader = new TextureLoader();\n\t\t\tconst textures = [];\n\n\t\t\tfor ( let i = 0; i < textureUrls.length; i ++ ) {\n\n\t\t\t\ttextures[ i ] = textureLoader.load( baseUrl + textureUrls[ i ], checkLoadingComplete );\n\t\t\t\ttextures[ i ].mapping = UVMapping;\n\t\t\t\ttextures[ i ].name = textureUrls[ i ];\n\t\t\t\ttextures[ i ].colorSpace = SRGBColorSpace;\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t}\n\n\t\tfunction checkLoadingComplete() {\n\n\t\t\tscope.loadCounter -= 1;\n\n\t\t\tif ( scope.loadCounter === 0 ) scope.onLoadComplete();\n\n\t\t}\n\n\t\tthis.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n\n\t\tconst weaponsTextures = [];\n\t\tfor ( let i = 0; i < config.weapons.length; i ++ ) weaponsTextures[ i ] = config.weapons[ i ][ 1 ];\n\t\t// SKINS\n\n\t\tthis.skinsBody = loadTextures( config.baseUrl + 'skins/', config.skins );\n\t\tthis.skinsWeapon = loadTextures( config.baseUrl + 'skins/', weaponsTextures );\n\n\t\t// BODY\n\n\t\tconst loader = new MD2Loader();\n\n\t\tloader.load( config.baseUrl + config.body, function ( geo ) {\n\n\t\t\tconst boundingBox = new Box3();\n\t\t\tboundingBox.setFromBufferAttribute( geo.attributes.position );\n\n\t\t\tscope.root.position.y = - scope.scale * boundingBox.min.y;\n\n\t\t\tconst mesh = createPart( geo, scope.skinsBody[ 0 ] );\n\t\t\tmesh.scale.set( scope.scale, scope.scale, scope.scale );\n\n\t\t\tscope.root.add( mesh );\n\n\t\t\tscope.meshBody = mesh;\n\n\t\t\tscope.meshBody.clipOffset = 0;\n\t\t\tscope.activeAnimationClipName = mesh.geometry.animations[ 0 ].name;\n\n\t\t\tscope.mixer = new AnimationMixer( mesh );\n\n\t\t\tcheckLoadingComplete();\n\n\t\t} );\n\n\t\t// WEAPONS\n\n\t\tconst generateCallback = function ( index, name ) {\n\n\t\t\treturn function ( geo ) {\n\n\t\t\t\tconst mesh = createPart( geo, scope.skinsWeapon[ index ] );\n\t\t\t\tmesh.scale.set( scope.scale, scope.scale, scope.scale );\n\t\t\t\tmesh.visible = false;\n\n\t\t\t\tmesh.name = name;\n\n\t\t\t\tscope.root.add( mesh );\n\n\t\t\t\tscope.weapons[ index ] = mesh;\n\t\t\t\tscope.meshWeapon = mesh;\n\n\t\t\t\tcheckLoadingComplete();\n\n\t\t\t};\n\n\t\t};\n\n\t\tfor ( let i = 0; i < config.weapons.length; i ++ ) {\n\n\t\t\tloader.load( config.baseUrl + config.weapons[ i ][ 0 ], generateCallback( i, config.weapons[ i ][ 0 ] ) );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Sets the animation playback rate.\n\t *\n\t * @param {number} rate - The playback rate to set.\n\t */\n\tsetPlaybackRate( rate ) {\n\n\t\tif ( rate !== 0 ) {\n\n\t\t\tthis.mixer.timeScale = 1 / rate;\n\n\t\t} else {\n\n\t\t\tthis.mixer.timeScale = 0;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Sets the wireframe material flag.\n\t *\n\t * @param {boolean} wireframeEnabled - Whether to enable wireframe rendering or not.\n\t */\n\tsetWireframe( wireframeEnabled ) {\n\n\t\tif ( wireframeEnabled ) {\n\n\t\t\tif ( this.meshBody ) this.meshBody.material = this.meshBody.materialWireframe;\n\t\t\tif ( this.meshWeapon ) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n\n\t\t} else {\n\n\t\t\tif ( this.meshBody ) this.meshBody.material = this.meshBody.materialTexture;\n\t\t\tif ( this.meshWeapon ) this.meshWeapon.material = this.meshWeapon.materialTexture;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Sets the skin defined by the given skin index. This will result in a different texture\n\t * for the body mesh.\n\t *\n\t * @param {number} index - The skin index.\n\t */\n\tsetSkin( index ) {\n\n\t\tif ( this.meshBody && this.meshBody.material.wireframe === false ) {\n\n\t\t\tthis.meshBody.material.map = this.skinsBody[ index ];\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Sets the weapon defined by the given weapon index. This will result in a different weapon\n\t * hold by the character.\n\t *\n\t * @param {number} index - The weapon index.\n\t */\n\tsetWeapon( index ) {\n\n\t\tfor ( let i = 0; i < this.weapons.length; i ++ ) this.weapons[ i ].visible = false;\n\n\t\tconst activeWeapon = this.weapons[ index ];\n\n\t\tif ( activeWeapon ) {\n\n\t\t\tactiveWeapon.visible = true;\n\t\t\tthis.meshWeapon = activeWeapon;\n\n\t\t\tthis.syncWeaponAnimation();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Sets the defined animation clip as the active animation.\n\t *\n\t * @param {string} clipName - The name of the animation clip.\n\t */\n\tsetAnimation( clipName ) {\n\n\t\tif ( this.meshBody ) {\n\n\t\t\tif ( this.meshBody.activeAction ) {\n\n\t\t\t\tthis.meshBody.activeAction.stop();\n\t\t\t\tthis.meshBody.activeAction = null;\n\n\t\t\t}\n\n\t\t\tconst action = this.mixer.clipAction( clipName, this.meshBody );\n\n\t\t\tif ( action ) {\n\n\t\t\t\tthis.meshBody.activeAction = action.play();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.activeClipName = clipName;\n\n\t\tthis.syncWeaponAnimation();\n\n\t}\n\n\t/**\n\t * Synchronizes the weapon with the body animation.\n\t */\n\tsyncWeaponAnimation() {\n\n\t\tconst clipName = this.activeClipName;\n\n\t\tif ( this.meshWeapon ) {\n\n\t\t\tif ( this.meshWeapon.activeAction ) {\n\n\t\t\t\tthis.meshWeapon.activeAction.stop();\n\t\t\t\tthis.meshWeapon.activeAction = null;\n\n\t\t\t}\n\n\t\t\tconst action = this.mixer.clipAction( clipName, this.meshWeapon );\n\n\t\t\tif ( action ) {\n\n\t\t\t\tthis.meshWeapon.activeAction = action.syncWith( this.meshBody.activeAction ).play();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the animations of the mesh. Must be called inside the animation loop.\n\t *\n\t * @param {number} delta - The delta time in seconds.\n\t */\n\tupdate( delta ) {\n\n\t\tif ( this.mixer ) this.mixer.update( delta );\n\n\t}\n\n}\n\nexport { MD2Character };\n"],"mappings":"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","ignoreList":[]}