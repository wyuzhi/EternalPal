{"version":3,"file":"node_modules/three/examples/jsm/objects/MarchingCubes.js","names":["BufferAttribute","BufferGeometry","Color","DynamicDrawUsage","Mesh","Sphere","Vector3","MarchingCubes","constructor","resolution","material","enableUvs","enableColors","maxPolyCount","geometry","super","this","isMarchingCubes","scope","vlist","Float32Array","nlist","clist","lerp","a","b","t","VIntX","q","offset","isol","x","y","z","valp1","valp2","c_offset1","c_offset2","mu","nc","normal_cache","delta","palette","VIntY","q2","yd","VIntZ","zd","compNorm","q3","field","polygonize","fx","fy","fz","q1","qy","qz","q1y","q1z","qyz","q1yz","cubeindex","field0","field1","field2","field3","field4","field5","field6","field7","bits","edgeTable","d","fx2","fy2","fz2","o1","o2","o3","numtris","i","triTable","posnormtriv","pos","norm","colors","c","count","positionArray","flatShading","nx","ny","nz","normalArray","uvArray","colorArray","init","isolation","size","size2","size3","halfsize","maxVertexCount","positionAttribute","setUsage","setAttribute","normalAttribute","uvAttribute","colorAttribute","boundingSphere","addBall","ballx","bally","ballz","strength","subtract","sign","Math","abs","userDefineColor","ballColor","Array","isArray","min","err","radius","sqrt","zs","ys","xs","min_z","floor","max_z","min_y","max_y","min_x","y_offset","z_offset","val","max_x","ratio","contrib","r","g","addPlaneX","xx","xdiv","cxy","dist","addPlaneY","yy","ydiv","cy","addPlaneZ","zz","zdiv","cz","cyz","setCell","value","index","getCell","blur","intensity","fieldCopy","slice","x2","x3","y2","y3","z2","z3","reset","update","smin2","setDrawRange","getAttribute","needsUpdate","console","warn","Int32Array"],"sources":["node_modules/three/examples/jsm/objects/MarchingCubes.js"],"sourcesContent":["import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tColor,\n\tDynamicDrawUsage,\n\tMesh,\n\tSphere,\n\tVector3\n} from 'three';\n\n/**\n * A marching cubes implementation.\n *\n * Port of: {@link http://webglsamples.org/blob/blob.html}\n *\n * @three_import import { MarchingCubes } from 'three/addons/objects/MarchingCubes.js';\n */\nclass MarchingCubes extends Mesh {\n\n\t/**\n\t * Constructs a new marching cubes instance.\n\t *\n\t * @param {number} resolution - The effect's resolution.\n\t * @param {Material} material - The cube's material.\n\t * @param {boolean} [enableUvs=false] - Whether texture coordinates should be animated or not.\n\t * @param {boolean} [enableColors=false] - Whether colors should be animated or not.\n\t * @param {number} [maxPolyCount=10000] - The maximum size of the geometry buffers.\n\t */\n\tconstructor( resolution, material, enableUvs = false, enableColors = false, maxPolyCount = 10000 ) {\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tsuper( geometry, material );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isMarchingCubes = true;\n\n\t\tconst scope = this;\n\n\t\t// temp buffers used in polygonize\n\n\t\tconst vlist = new Float32Array( 12 * 3 );\n\t\tconst nlist = new Float32Array( 12 * 3 );\n\t\tconst clist = new Float32Array( 12 * 3 );\n\n\t\t/**\n\t\t * Whether texture coordinates should be animated or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.enableUvs = enableUvs;\n\n\t\t/**\n\t\t * Whether colors should be animated or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.enableColors = enableColors;\n\n\t\t// functions have to be object properties\n\t\t// prototype functions kill performance\n\t\t// (tested and it was 4x slower !!!)\n\n\t\tthis.init = function ( resolution ) {\n\n\t\t\tthis.resolution = resolution;\n\n\t\t\t// parameters\n\n\t\t\tthis.isolation = 80.0;\n\n\t\t\t// size of field, 32 is pushing it in Javascript :)\n\n\t\t\tthis.size = resolution;\n\t\t\tthis.size2 = this.size * this.size;\n\t\t\tthis.size3 = this.size2 * this.size;\n\t\t\tthis.halfsize = this.size / 2.0;\n\n\t\t\t// deltas\n\n\t\t\tthis.delta = 2.0 / this.size;\n\t\t\tthis.yd = this.size;\n\t\t\tthis.zd = this.size2;\n\n\t\t\tthis.field = new Float32Array( this.size3 );\n\t\t\tthis.normal_cache = new Float32Array( this.size3 * 3 );\n\t\t\tthis.palette = new Float32Array( this.size3 * 3 );\n\n\t\t\t//\n\n\t\t\tthis.count = 0;\n\n\t\t\tconst maxVertexCount = maxPolyCount * 3;\n\n\t\t\tthis.positionArray = new Float32Array( maxVertexCount * 3 );\n\t\t\tconst positionAttribute = new BufferAttribute( this.positionArray, 3 );\n\t\t\tpositionAttribute.setUsage( DynamicDrawUsage );\n\t\t\tgeometry.setAttribute( 'position', positionAttribute );\n\n\t\t\tthis.normalArray = new Float32Array( maxVertexCount * 3 );\n\t\t\tconst normalAttribute = new BufferAttribute( this.normalArray, 3 );\n\t\t\tnormalAttribute.setUsage( DynamicDrawUsage );\n\t\t\tgeometry.setAttribute( 'normal', normalAttribute );\n\n\t\t\tif ( this.enableUvs ) {\n\n\t\t\t\tthis.uvArray = new Float32Array( maxVertexCount * 2 );\n\t\t\t\tconst uvAttribute = new BufferAttribute( this.uvArray, 2 );\n\t\t\t\tuvAttribute.setUsage( DynamicDrawUsage );\n\t\t\t\tgeometry.setAttribute( 'uv', uvAttribute );\n\n\t\t\t}\n\n\t\t\tif ( this.enableColors ) {\n\n\t\t\t\tthis.colorArray = new Float32Array( maxVertexCount * 3 );\n\t\t\t\tconst colorAttribute = new BufferAttribute( this.colorArray, 3 );\n\t\t\t\tcolorAttribute.setUsage( DynamicDrawUsage );\n\t\t\t\tgeometry.setAttribute( 'color', colorAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( new Vector3(), 1 );\n\n\t\t};\n\n\t\t///////////////////////\n\t\t// Polygonization\n\t\t///////////////////////\n\n\t\tfunction lerp( a, b, t ) {\n\n\t\t\treturn a + ( b - a ) * t;\n\n\t\t}\n\n\t\tfunction VIntX( q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2 ) {\n\n\t\t\tconst mu = ( isol - valp1 ) / ( valp2 - valp1 ),\n\t\t\t\tnc = scope.normal_cache;\n\n\t\t\tvlist[ offset + 0 ] = x + mu * scope.delta;\n\t\t\tvlist[ offset + 1 ] = y;\n\t\t\tvlist[ offset + 2 ] = z;\n\n\t\t\tnlist[ offset + 0 ] = lerp( nc[ q + 0 ], nc[ q + 3 ], mu );\n\t\t\tnlist[ offset + 1 ] = lerp( nc[ q + 1 ], nc[ q + 4 ], mu );\n\t\t\tnlist[ offset + 2 ] = lerp( nc[ q + 2 ], nc[ q + 5 ], mu );\n\n\t\t\tclist[ offset + 0 ] = lerp( scope.palette[ c_offset1 * 3 + 0 ], scope.palette[ c_offset2 * 3 + 0 ], mu );\n\t\t\tclist[ offset + 1 ] = lerp( scope.palette[ c_offset1 * 3 + 1 ], scope.palette[ c_offset2 * 3 + 1 ], mu );\n\t\t\tclist[ offset + 2 ] = lerp( scope.palette[ c_offset1 * 3 + 2 ], scope.palette[ c_offset2 * 3 + 2 ], mu );\n\n\t\t}\n\n\t\tfunction VIntY( q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2 ) {\n\n\t\t\tconst mu = ( isol - valp1 ) / ( valp2 - valp1 ),\n\t\t\t\tnc = scope.normal_cache;\n\n\t\t\tvlist[ offset + 0 ] = x;\n\t\t\tvlist[ offset + 1 ] = y + mu * scope.delta;\n\t\t\tvlist[ offset + 2 ] = z;\n\n\t\t\tconst q2 = q + scope.yd * 3;\n\n\t\t\tnlist[ offset + 0 ] = lerp( nc[ q + 0 ], nc[ q2 + 0 ], mu );\n\t\t\tnlist[ offset + 1 ] = lerp( nc[ q + 1 ], nc[ q2 + 1 ], mu );\n\t\t\tnlist[ offset + 2 ] = lerp( nc[ q + 2 ], nc[ q2 + 2 ], mu );\n\n\t\t\tclist[ offset + 0 ] = lerp( scope.palette[ c_offset1 * 3 + 0 ], scope.palette[ c_offset2 * 3 + 0 ], mu );\n\t\t\tclist[ offset + 1 ] = lerp( scope.palette[ c_offset1 * 3 + 1 ], scope.palette[ c_offset2 * 3 + 1 ], mu );\n\t\t\tclist[ offset + 2 ] = lerp( scope.palette[ c_offset1 * 3 + 2 ], scope.palette[ c_offset2 * 3 + 2 ], mu );\n\n\t\t}\n\n\t\tfunction VIntZ( q, offset, isol, x, y, z, valp1, valp2, c_offset1, c_offset2 ) {\n\n\t\t\tconst mu = ( isol - valp1 ) / ( valp2 - valp1 ),\n\t\t\t\tnc = scope.normal_cache;\n\n\t\t\tvlist[ offset + 0 ] = x;\n\t\t\tvlist[ offset + 1 ] = y;\n\t\t\tvlist[ offset + 2 ] = z + mu * scope.delta;\n\n\t\t\tconst q2 = q + scope.zd * 3;\n\n\t\t\tnlist[ offset + 0 ] = lerp( nc[ q + 0 ], nc[ q2 + 0 ], mu );\n\t\t\tnlist[ offset + 1 ] = lerp( nc[ q + 1 ], nc[ q2 + 1 ], mu );\n\t\t\tnlist[ offset + 2 ] = lerp( nc[ q + 2 ], nc[ q2 + 2 ], mu );\n\n\t\t\tclist[ offset + 0 ] = lerp( scope.palette[ c_offset1 * 3 + 0 ], scope.palette[ c_offset2 * 3 + 0 ], mu );\n\t\t\tclist[ offset + 1 ] = lerp( scope.palette[ c_offset1 * 3 + 1 ], scope.palette[ c_offset2 * 3 + 1 ], mu );\n\t\t\tclist[ offset + 2 ] = lerp( scope.palette[ c_offset1 * 3 + 2 ], scope.palette[ c_offset2 * 3 + 2 ], mu );\n\n\t\t}\n\n\t\tfunction compNorm( q ) {\n\n\t\t\tconst q3 = q * 3;\n\n\t\t\tif ( scope.normal_cache[ q3 ] === 0.0 ) {\n\n\t\t\t\tscope.normal_cache[ q3 + 0 ] = scope.field[ q - 1 ] - scope.field[ q + 1 ];\n\t\t\t\tscope.normal_cache[ q3 + 1 ] =\n\t\t\t\t\tscope.field[ q - scope.yd ] - scope.field[ q + scope.yd ];\n\t\t\t\tscope.normal_cache[ q3 + 2 ] =\n\t\t\t\t\tscope.field[ q - scope.zd ] - scope.field[ q + scope.zd ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Returns total number of triangles. Fills triangles.\n\t\t// (this is where most of time is spent - it's inner work of O(n3) loop )\n\n\t\tfunction polygonize( fx, fy, fz, q, isol ) {\n\n\t\t\t// cache indices\n\t\t\tconst q1 = q + 1,\n\t\t\t\tqy = q + scope.yd,\n\t\t\t\tqz = q + scope.zd,\n\t\t\t\tq1y = q1 + scope.yd,\n\t\t\t\tq1z = q1 + scope.zd,\n\t\t\t\tqyz = q + scope.yd + scope.zd,\n\t\t\t\tq1yz = q1 + scope.yd + scope.zd;\n\n\t\t\tlet cubeindex = 0;\n\t\t\tconst field0 = scope.field[ q ],\n\t\t\t\tfield1 = scope.field[ q1 ],\n\t\t\t\tfield2 = scope.field[ qy ],\n\t\t\t\tfield3 = scope.field[ q1y ],\n\t\t\t\tfield4 = scope.field[ qz ],\n\t\t\t\tfield5 = scope.field[ q1z ],\n\t\t\t\tfield6 = scope.field[ qyz ],\n\t\t\t\tfield7 = scope.field[ q1yz ];\n\n\t\t\tif ( field0 < isol ) cubeindex |= 1;\n\t\t\tif ( field1 < isol ) cubeindex |= 2;\n\t\t\tif ( field2 < isol ) cubeindex |= 8;\n\t\t\tif ( field3 < isol ) cubeindex |= 4;\n\t\t\tif ( field4 < isol ) cubeindex |= 16;\n\t\t\tif ( field5 < isol ) cubeindex |= 32;\n\t\t\tif ( field6 < isol ) cubeindex |= 128;\n\t\t\tif ( field7 < isol ) cubeindex |= 64;\n\n\t\t\t// if cube is entirely in/out of the surface - bail, nothing to draw\n\n\t\t\tconst bits = edgeTable[ cubeindex ];\n\t\t\tif ( bits === 0 ) return 0;\n\n\t\t\tconst d = scope.delta,\n\t\t\t\tfx2 = fx + d,\n\t\t\t\tfy2 = fy + d,\n\t\t\t\tfz2 = fz + d;\n\n\t\t\t// top of the cube\n\n\t\t\tif ( bits & 1 ) {\n\n\t\t\t\tcompNorm( q );\n\t\t\t\tcompNorm( q1 );\n\t\t\t\tVIntX( q * 3, 0, isol, fx, fy, fz, field0, field1, q, q1 );\n\n\t\t\t}\n\n\t\t\tif ( bits & 2 ) {\n\n\t\t\t\tcompNorm( q1 );\n\t\t\t\tcompNorm( q1y );\n\t\t\t\tVIntY( q1 * 3, 3, isol, fx2, fy, fz, field1, field3, q1, q1y );\n\n\t\t\t}\n\n\t\t\tif ( bits & 4 ) {\n\n\t\t\t\tcompNorm( qy );\n\t\t\t\tcompNorm( q1y );\n\t\t\t\tVIntX( qy * 3, 6, isol, fx, fy2, fz, field2, field3, qy, q1y );\n\n\t\t\t}\n\n\t\t\tif ( bits & 8 ) {\n\n\t\t\t\tcompNorm( q );\n\t\t\t\tcompNorm( qy );\n\t\t\t\tVIntY( q * 3, 9, isol, fx, fy, fz, field0, field2, q, qy );\n\n\t\t\t}\n\n\t\t\t// bottom of the cube\n\n\t\t\tif ( bits & 16 ) {\n\n\t\t\t\tcompNorm( qz );\n\t\t\t\tcompNorm( q1z );\n\t\t\t\tVIntX( qz * 3, 12, isol, fx, fy, fz2, field4, field5, qz, q1z );\n\n\t\t\t}\n\n\t\t\tif ( bits & 32 ) {\n\n\t\t\t\tcompNorm( q1z );\n\t\t\t\tcompNorm( q1yz );\n\t\t\t\tVIntY(\n\t\t\t\t\tq1z * 3,\n\t\t\t\t\t15,\n\t\t\t\t\tisol,\n\t\t\t\t\tfx2,\n\t\t\t\t\tfy,\n\t\t\t\t\tfz2,\n\t\t\t\t\tfield5,\n\t\t\t\t\tfield7,\n\t\t\t\t\tq1z,\n\t\t\t\t\tq1yz\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( bits & 64 ) {\n\n\t\t\t\tcompNorm( qyz );\n\t\t\t\tcompNorm( q1yz );\n\t\t\t\tVIntX(\n\t\t\t\t\tqyz * 3,\n\t\t\t\t\t18,\n\t\t\t\t\tisol,\n\t\t\t\t\tfx,\n\t\t\t\t\tfy2,\n\t\t\t\t\tfz2,\n\t\t\t\t\tfield6,\n\t\t\t\t\tfield7,\n\t\t\t\t\tqyz,\n\t\t\t\t\tq1yz\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( bits & 128 ) {\n\n\t\t\t\tcompNorm( qz );\n\t\t\t\tcompNorm( qyz );\n\t\t\t\tVIntY( qz * 3, 21, isol, fx, fy, fz2, field4, field6, qz, qyz );\n\n\t\t\t}\n\n\t\t\t// vertical lines of the cube\n\t\t\tif ( bits & 256 ) {\n\n\t\t\t\tcompNorm( q );\n\t\t\t\tcompNorm( qz );\n\t\t\t\tVIntZ( q * 3, 24, isol, fx, fy, fz, field0, field4, q, qz );\n\n\t\t\t}\n\n\t\t\tif ( bits & 512 ) {\n\n\t\t\t\tcompNorm( q1 );\n\t\t\t\tcompNorm( q1z );\n\t\t\t\tVIntZ( q1 * 3, 27, isol, fx2, fy, fz, field1, field5, q1, q1z );\n\n\t\t\t}\n\n\t\t\tif ( bits & 1024 ) {\n\n\t\t\t\tcompNorm( q1y );\n\t\t\t\tcompNorm( q1yz );\n\t\t\t\tVIntZ(\n\t\t\t\t\tq1y * 3,\n\t\t\t\t\t30,\n\t\t\t\t\tisol,\n\t\t\t\t\tfx2,\n\t\t\t\t\tfy2,\n\t\t\t\t\tfz,\n\t\t\t\t\tfield3,\n\t\t\t\t\tfield7,\n\t\t\t\t\tq1y,\n\t\t\t\t\tq1yz\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( bits & 2048 ) {\n\n\t\t\t\tcompNorm( qy );\n\t\t\t\tcompNorm( qyz );\n\t\t\t\tVIntZ( qy * 3, 33, isol, fx, fy2, fz, field2, field6, qy, qyz );\n\n\t\t\t}\n\n\t\t\tcubeindex <<= 4; // re-purpose cubeindex into an offset into triTable\n\n\t\t\tlet o1,\n\t\t\t\to2,\n\t\t\t\to3,\n\t\t\t\tnumtris = 0,\n\t\t\t\ti = 0;\n\n\t\t\t// here is where triangles are created\n\n\t\t\twhile ( triTable[ cubeindex + i ] != - 1 ) {\n\n\t\t\t\to1 = cubeindex + i;\n\t\t\t\to2 = o1 + 1;\n\t\t\t\to3 = o1 + 2;\n\n\t\t\t\tposnormtriv(\n\t\t\t\t\tvlist,\n\t\t\t\t\tnlist,\n\t\t\t\t\tclist,\n\t\t\t\t\t3 * triTable[ o1 ],\n\t\t\t\t\t3 * triTable[ o2 ],\n\t\t\t\t\t3 * triTable[ o3 ]\n\t\t\t\t);\n\n\t\t\t\ti += 3;\n\t\t\t\tnumtris ++;\n\n\t\t\t}\n\n\t\t\treturn numtris;\n\n\t\t}\n\n\t\tfunction posnormtriv( pos, norm, colors, o1, o2, o3 ) {\n\n\t\t\tconst c = scope.count * 3;\n\n\t\t\t// positions\n\n\t\t\tscope.positionArray[ c + 0 ] = pos[ o1 ];\n\t\t\tscope.positionArray[ c + 1 ] = pos[ o1 + 1 ];\n\t\t\tscope.positionArray[ c + 2 ] = pos[ o1 + 2 ];\n\n\t\t\tscope.positionArray[ c + 3 ] = pos[ o2 ];\n\t\t\tscope.positionArray[ c + 4 ] = pos[ o2 + 1 ];\n\t\t\tscope.positionArray[ c + 5 ] = pos[ o2 + 2 ];\n\n\t\t\tscope.positionArray[ c + 6 ] = pos[ o3 ];\n\t\t\tscope.positionArray[ c + 7 ] = pos[ o3 + 1 ];\n\t\t\tscope.positionArray[ c + 8 ] = pos[ o3 + 2 ];\n\n\t\t\t// normals\n\n\t\t\tif ( scope.material.flatShading === true ) {\n\n\t\t\t\tconst nx = ( norm[ o1 + 0 ] + norm[ o2 + 0 ] + norm[ o3 + 0 ] ) / 3;\n\t\t\t\tconst ny = ( norm[ o1 + 1 ] + norm[ o2 + 1 ] + norm[ o3 + 1 ] ) / 3;\n\t\t\t\tconst nz = ( norm[ o1 + 2 ] + norm[ o2 + 2 ] + norm[ o3 + 2 ] ) / 3;\n\n\t\t\t\tscope.normalArray[ c + 0 ] = nx;\n\t\t\t\tscope.normalArray[ c + 1 ] = ny;\n\t\t\t\tscope.normalArray[ c + 2 ] = nz;\n\n\t\t\t\tscope.normalArray[ c + 3 ] = nx;\n\t\t\t\tscope.normalArray[ c + 4 ] = ny;\n\t\t\t\tscope.normalArray[ c + 5 ] = nz;\n\n\t\t\t\tscope.normalArray[ c + 6 ] = nx;\n\t\t\t\tscope.normalArray[ c + 7 ] = ny;\n\t\t\t\tscope.normalArray[ c + 8 ] = nz;\n\n\t\t\t} else {\n\n\t\t\t\tscope.normalArray[ c + 0 ] = norm[ o1 + 0 ];\n\t\t\t\tscope.normalArray[ c + 1 ] = norm[ o1 + 1 ];\n\t\t\t\tscope.normalArray[ c + 2 ] = norm[ o1 + 2 ];\n\n\t\t\t\tscope.normalArray[ c + 3 ] = norm[ o2 + 0 ];\n\t\t\t\tscope.normalArray[ c + 4 ] = norm[ o2 + 1 ];\n\t\t\t\tscope.normalArray[ c + 5 ] = norm[ o2 + 2 ];\n\n\t\t\t\tscope.normalArray[ c + 6 ] = norm[ o3 + 0 ];\n\t\t\t\tscope.normalArray[ c + 7 ] = norm[ o3 + 1 ];\n\t\t\t\tscope.normalArray[ c + 8 ] = norm[ o3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( scope.enableUvs ) {\n\n\t\t\t\tconst d = scope.count * 2;\n\n\t\t\t\tscope.uvArray[ d + 0 ] = pos[ o1 + 0 ];\n\t\t\t\tscope.uvArray[ d + 1 ] = pos[ o1 + 2 ];\n\n\t\t\t\tscope.uvArray[ d + 2 ] = pos[ o2 + 0 ];\n\t\t\t\tscope.uvArray[ d + 3 ] = pos[ o2 + 2 ];\n\n\t\t\t\tscope.uvArray[ d + 4 ] = pos[ o3 + 0 ];\n\t\t\t\tscope.uvArray[ d + 5 ] = pos[ o3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tif ( scope.enableColors ) {\n\n\t\t\t\tscope.colorArray[ c + 0 ] = colors[ o1 + 0 ];\n\t\t\t\tscope.colorArray[ c + 1 ] = colors[ o1 + 1 ];\n\t\t\t\tscope.colorArray[ c + 2 ] = colors[ o1 + 2 ];\n\n\t\t\t\tscope.colorArray[ c + 3 ] = colors[ o2 + 0 ];\n\t\t\t\tscope.colorArray[ c + 4 ] = colors[ o2 + 1 ];\n\t\t\t\tscope.colorArray[ c + 5 ] = colors[ o2 + 2 ];\n\n\t\t\t\tscope.colorArray[ c + 6 ] = colors[ o3 + 0 ];\n\t\t\t\tscope.colorArray[ c + 7 ] = colors[ o3 + 1 ];\n\t\t\t\tscope.colorArray[ c + 8 ] = colors[ o3 + 2 ];\n\n\t\t\t}\n\n\t\t\tscope.count += 3;\n\n\t\t}\n\n\t\t/////////////////////////////////////\n\t\t// Metaballs\n\t\t/////////////////////////////////////\n\n\t\t/**\n\t\t * Adds a reciprocal ball (nice and blobby) that, to be fast, fades to zero after\n\t\t * a fixed distance, determined by strength and subtract.\n\t\t *\n\t\t * @param {number} ballx - The x-coordinate of the ball.\n\t\t * @param {number} bally - The y-coordinate of the ball.\n\t\t * @param {number} ballz - The z-coordinate of the ball.\n\t\t * @param {number} strength - The strength factor.\n\t\t * @param {number} subtract - The subtract factor.\n\t\t * @param {Color} colors - The color.\n\t\t */\n\t\tthis.addBall = function ( ballx, bally, ballz, strength, subtract, colors ) {\n\n\t\t\tconst sign = Math.sign( strength );\n\t\t\tstrength = Math.abs( strength );\n\t\t\tconst userDefineColor = ! ( colors === undefined || colors === null );\n\t\t\tlet ballColor = new Color( ballx, bally, ballz );\n\n\t\t\tif ( userDefineColor ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tballColor =\n\t\t\t\t\t\tcolors instanceof Color\n\t\t\t\t\t\t\t? colors\n\t\t\t\t\t\t\t: Array.isArray( colors )\n\t\t\t\t\t\t\t\t? new Color(\n\t\t\t\t\t\t\t\t\tMath.min( Math.abs( colors[ 0 ] ), 1 ),\n\t\t\t\t\t\t\t\t\tMath.min( Math.abs( colors[ 1 ] ), 1 ),\n\t\t\t\t\t\t\t\t\tMath.min( Math.abs( colors[ 2 ] ), 1 )\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: new Color( colors );\n\n\t\t\t\t} catch ( err ) {\n\n\t\t\t\t\tballColor = new Color( ballx, bally, ballz );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Let's solve the equation to find the radius:\n\t\t\t// 1.0 / (0.000001 + radius^2) * strength - subtract = 0\n\t\t\t// strength / (radius^2) = subtract\n\t\t\t// strength = subtract * radius^2\n\t\t\t// radius^2 = strength / subtract\n\t\t\t// radius = sqrt(strength / subtract)\n\n\t\t\tconst radius = this.size * Math.sqrt( strength / subtract ),\n\t\t\t\tzs = ballz * this.size,\n\t\t\t\tys = bally * this.size,\n\t\t\t\txs = ballx * this.size;\n\n\t\t\tlet min_z = Math.floor( zs - radius );\n\t\t\tif ( min_z < 1 ) min_z = 1;\n\t\t\tlet max_z = Math.floor( zs + radius );\n\t\t\tif ( max_z > this.size - 1 ) max_z = this.size - 1;\n\t\t\tlet min_y = Math.floor( ys - radius );\n\t\t\tif ( min_y < 1 ) min_y = 1;\n\t\t\tlet max_y = Math.floor( ys + radius );\n\t\t\tif ( max_y > this.size - 1 ) max_y = this.size - 1;\n\t\t\tlet min_x = Math.floor( xs - radius );\n\t\t\tif ( min_x < 1 ) min_x = 1;\n\t\t\tlet max_x = Math.floor( xs + radius );\n\t\t\tif ( max_x > this.size - 1 ) max_x = this.size - 1;\n\n\t\t\t// Don't polygonize in the outer layer because normals aren't\n\t\t\t// well-defined there.\n\n\t\t\tlet x, y, z, y_offset, z_offset, fx, fy, fz, fz2, fy2, val;\n\n\t\t\tfor ( z = min_z; z < max_z; z ++ ) {\n\n\t\t\t\tz_offset = this.size2 * z;\n\t\t\t\tfz = z / this.size - ballz;\n\t\t\t\tfz2 = fz * fz;\n\n\t\t\t\tfor ( y = min_y; y < max_y; y ++ ) {\n\n\t\t\t\t\ty_offset = z_offset + this.size * y;\n\t\t\t\t\tfy = y / this.size - bally;\n\t\t\t\t\tfy2 = fy * fy;\n\n\t\t\t\t\tfor ( x = min_x; x < max_x; x ++ ) {\n\n\t\t\t\t\t\tfx = x / this.size - ballx;\n\t\t\t\t\t\tval = strength / ( 0.000001 + fx * fx + fy2 + fz2 ) - subtract;\n\t\t\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\t\t\tthis.field[ y_offset + x ] += val * sign;\n\n\t\t\t\t\t\t\t// optimization\n\t\t\t\t\t\t\t// http://www.geisswerks.com/ryan/BLOBS/blobs.html\n\t\t\t\t\t\t\tconst ratio =\n\t\t\t\t\t\t\t\tMath.sqrt( ( x - xs ) * ( x - xs ) + ( y - ys ) * ( y - ys ) + ( z - zs ) * ( z - zs ) ) / radius;\n\t\t\t\t\t\t\tconst contrib =\n\t\t\t\t\t\t\t\t1 - ratio * ratio * ratio * ( ratio * ( ratio * 6 - 15 ) + 10 );\n\t\t\t\t\t\t\tthis.palette[ ( y_offset + x ) * 3 + 0 ] += ballColor.r * contrib;\n\t\t\t\t\t\t\tthis.palette[ ( y_offset + x ) * 3 + 1 ] += ballColor.g * contrib;\n\t\t\t\t\t\t\tthis.palette[ ( y_offset + x ) * 3 + 2 ] += ballColor.b * contrib;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Adds a plane along the x-axis.\n\t\t *\n\t\t * @param {number} strength - The strength factor.\n\t\t * @param {number} subtract - The subtract factor.\n\t\t */\n\t\tthis.addPlaneX = function ( strength, subtract ) {\n\n\t\t\t// cache attribute lookups\n\t\t\tconst size = this.size,\n\t\t\t\tyd = this.yd,\n\t\t\t\tzd = this.zd,\n\t\t\t\tfield = this.field;\n\n\t\t\tlet x,\n\t\t\t\ty,\n\t\t\t\tz,\n\t\t\t\txx,\n\t\t\t\tval,\n\t\t\t\txdiv,\n\t\t\t\tcxy,\n\t\t\t\tdist = size * Math.sqrt( strength / subtract );\n\n\t\t\tif ( dist > size ) dist = size;\n\n\t\t\tfor ( x = 0; x < dist; x ++ ) {\n\n\t\t\t\txdiv = x / size;\n\t\t\t\txx = xdiv * xdiv;\n\t\t\t\tval = strength / ( 0.0001 + xx ) - subtract;\n\n\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\tfor ( y = 0; y < size; y ++ ) {\n\n\t\t\t\t\t\tcxy = x + y * yd;\n\n\t\t\t\t\t\tfor ( z = 0; z < size; z ++ ) {\n\n\t\t\t\t\t\t\tfield[ zd * z + cxy ] += val;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Adds a plane along the y-axis.\n\t\t *\n\t\t * @param {number} strength - The strength factor.\n\t\t * @param {number} subtract - The subtract factor.\n\t\t */\n\t\tthis.addPlaneY = function ( strength, subtract ) {\n\n\t\t\t// cache attribute lookups\n\t\t\tconst size = this.size,\n\t\t\t\tyd = this.yd,\n\t\t\t\tzd = this.zd,\n\t\t\t\tfield = this.field;\n\n\t\t\tlet x,\n\t\t\t\ty,\n\t\t\t\tz,\n\t\t\t\tyy,\n\t\t\t\tval,\n\t\t\t\tydiv,\n\t\t\t\tcy,\n\t\t\t\tcxy,\n\t\t\t\tdist = size * Math.sqrt( strength / subtract );\n\n\t\t\tif ( dist > size ) dist = size;\n\n\t\t\tfor ( y = 0; y < dist; y ++ ) {\n\n\t\t\t\tydiv = y / size;\n\t\t\t\tyy = ydiv * ydiv;\n\t\t\t\tval = strength / ( 0.0001 + yy ) - subtract;\n\n\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\tcy = y * yd;\n\n\t\t\t\t\tfor ( x = 0; x < size; x ++ ) {\n\n\t\t\t\t\t\tcxy = cy + x;\n\n\t\t\t\t\t\tfor ( z = 0; z < size; z ++ ) field[ zd * z + cxy ] += val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Adds a plane along the z-axis.\n\t\t *\n\t\t * @param {number} strength - The strength factor.\n\t\t * @param {number} subtract - The subtract factor.\n\t\t */\n\t\tthis.addPlaneZ = function ( strength, subtract ) {\n\n\t\t\t// cache attribute lookups\n\n\t\t\tconst size = this.size,\n\t\t\t\tyd = this.yd,\n\t\t\t\tzd = this.zd,\n\t\t\t\tfield = this.field;\n\n\t\t\tlet x,\n\t\t\t\ty,\n\t\t\t\tz,\n\t\t\t\tzz,\n\t\t\t\tval,\n\t\t\t\tzdiv,\n\t\t\t\tcz,\n\t\t\t\tcyz,\n\t\t\t\tdist = size * Math.sqrt( strength / subtract );\n\n\t\t\tif ( dist > size ) dist = size;\n\n\t\t\tfor ( z = 0; z < dist; z ++ ) {\n\n\t\t\t\tzdiv = z / size;\n\t\t\t\tzz = zdiv * zdiv;\n\t\t\t\tval = strength / ( 0.0001 + zz ) - subtract;\n\t\t\t\tif ( val > 0.0 ) {\n\n\t\t\t\t\tcz = zd * z;\n\n\t\t\t\t\tfor ( y = 0; y < size; y ++ ) {\n\n\t\t\t\t\t\tcyz = cz + y * yd;\n\n\t\t\t\t\t\tfor ( x = 0; x < size; x ++ ) field[ cyz + x ] += val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t/////////////////////////////////////\n\t\t// Updates\n\t\t/////////////////////////////////////\n\n\t\t/**\n\t\t * Sets the cell value for the given coordinates.\n\t\t *\n\t\t * @param {number} x - The x value.\n\t\t * @param {number} y - The y value.\n\t\t * @param {number} z - The z value.\n\t\t * @param {number} value - The value to set.\n\t\t */\n\t\tthis.setCell = function ( x, y, z, value ) {\n\n\t\t\tconst index = this.size2 * z + this.size * y + x;\n\t\t\tthis.field[ index ] = value;\n\n\t\t};\n\n\t\t/**\n\t\t * Returns the cell value for the given coordinates.\n\t\t *\n\t\t * @param {number} x - The x value.\n\t\t * @param {number} y - The y value.\n\t\t * @param {number} z - The z value.\n\t\t * @return {number} The value.\n\t\t */\n\t\tthis.getCell = function ( x, y, z ) {\n\n\t\t\tconst index = this.size2 * z + this.size * y + x;\n\t\t\treturn this.field[ index ];\n\n\t\t};\n\n\t\t/**\n\t\t * Applies a blur with the given intensity.\n\t\t *\n\t\t * @param {number} [intensity=1] - The intensity of the blur.\n\t\t */\n\t\tthis.blur = function ( intensity = 1 ) {\n\n\t\t\tconst field = this.field;\n\t\t\tconst fieldCopy = field.slice();\n\t\t\tconst size = this.size;\n\t\t\tconst size2 = this.size2;\n\t\t\tfor ( let x = 0; x < size; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < size; y ++ ) {\n\n\t\t\t\t\tfor ( let z = 0; z < size; z ++ ) {\n\n\t\t\t\t\t\tconst index = size2 * z + size * y + x;\n\t\t\t\t\t\tlet val = fieldCopy[ index ];\n\t\t\t\t\t\tlet count = 1;\n\n\t\t\t\t\t\tfor ( let x2 = - 1; x2 <= 1; x2 += 2 ) {\n\n\t\t\t\t\t\t\tconst x3 = x2 + x;\n\t\t\t\t\t\t\tif ( x3 < 0 || x3 >= size ) continue;\n\n\t\t\t\t\t\t\tfor ( let y2 = - 1; y2 <= 1; y2 += 2 ) {\n\n\t\t\t\t\t\t\t\tconst y3 = y2 + y;\n\t\t\t\t\t\t\t\tif ( y3 < 0 || y3 >= size ) continue;\n\n\t\t\t\t\t\t\t\tfor ( let z2 = - 1; z2 <= 1; z2 += 2 ) {\n\n\t\t\t\t\t\t\t\t\tconst z3 = z2 + z;\n\t\t\t\t\t\t\t\t\tif ( z3 < 0 || z3 >= size ) continue;\n\n\t\t\t\t\t\t\t\t\tconst index2 = size2 * z3 + size * y3 + x3;\n\t\t\t\t\t\t\t\t\tconst val2 = fieldCopy[ index2 ];\n\n\t\t\t\t\t\t\t\t\tcount ++;\n\t\t\t\t\t\t\t\t\tval += intensity * ( val2 - val ) / count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfield[ index ] = val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Resets the effect.\n\t\t */\n\t\tthis.reset = function () {\n\n\t\t\t// wipe the normal cache\n\n\t\t\tfor ( let i = 0; i < this.size3; i ++ ) {\n\n\t\t\t\tthis.normal_cache[ i * 3 ] = 0.0;\n\t\t\t\tthis.field[ i ] = 0.0;\n\t\t\t\tthis.palette[ i * 3 ] = this.palette[ i * 3 + 1 ] = this.palette[\n\t\t\t\t\ti * 3 + 2\n\t\t\t\t] = 0.0;\n\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Updates the effect.\n\t\t */\n\t\tthis.update = function () {\n\n\t\t\tthis.count = 0;\n\n\t\t\t// Triangulate. Yeah, this is slow.\n\n\t\t\tconst smin2 = this.size - 2;\n\n\t\t\tfor ( let z = 1; z < smin2; z ++ ) {\n\n\t\t\t\tconst z_offset = this.size2 * z;\n\t\t\t\tconst fz = ( z - this.halfsize ) / this.halfsize; //+ 1\n\n\t\t\t\tfor ( let y = 1; y < smin2; y ++ ) {\n\n\t\t\t\t\tconst y_offset = z_offset + this.size * y;\n\t\t\t\t\tconst fy = ( y - this.halfsize ) / this.halfsize; //+ 1\n\n\t\t\t\t\tfor ( let x = 1; x < smin2; x ++ ) {\n\n\t\t\t\t\t\tconst fx = ( x - this.halfsize ) / this.halfsize; //+ 1\n\t\t\t\t\t\tconst q = y_offset + x;\n\n\t\t\t\t\t\t polygonize( fx, fy, fz, q, this.isolation );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// set the draw range to only the processed triangles\n\n\t\t\tthis.geometry.setDrawRange( 0, this.count );\n\n\t\t\t// update geometry data\n\n\t\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\t\t\tgeometry.getAttribute( 'normal' ).needsUpdate = true;\n\n\t\t\tif ( this.enableUvs ) geometry.getAttribute( 'uv' ).needsUpdate = true;\n\t\t\tif ( this.enableColors ) geometry.getAttribute( 'color' ).needsUpdate = true;\n\n\t\t\t// safety check\n\n\t\t\tif ( this.count / 3 > maxPolyCount ) console.warn( 'THREE.MarchingCubes: Geometry buffers too small for rendering. Please create an instance with a higher poly count.' );\n\n\t\t};\n\n\t\tthis.init( resolution );\n\n\t}\n\n}\n\n/////////////////////////////////////\n// Marching cubes lookup tables\n/////////////////////////////////////\n\n// These tables are straight from Paul Bourke's page:\n// http://paulbourke.net/geometry/polygonise/\n// who in turn got them from Cory Gene Bloyd.\n\nconst edgeTable = new Int32Array( [\n\t0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\n\t0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\n\t0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\n\t0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\n\t0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c,\n\t0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\n\t0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac,\n\t0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\n\t0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c,\n\t0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\n\t0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\n\t0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\n\t0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c,\n\t0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\n\t0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc,\n\t0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\n\t0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\n\t0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\n\t0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\n\t0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\n\t0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\n\t0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\n\t0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\n\t0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460,\n\t0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\n\t0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0,\n\t0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\n\t0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230,\n\t0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\n\t0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190,\n\t0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\n\t0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0 ] );\n\nconst triTable = new Int32Array( [\n\t- 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 8, 3, 9, 8, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 2, 10, 0, 2, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 8, 3, 2, 10, 8, 10, 9, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 11, 2, 8, 11, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 9, 0, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 11, 2, 1, 9, 11, 9, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 10, 1, 11, 10, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 10, 1, 0, 8, 10, 8, 11, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 9, 0, 3, 11, 9, 11, 10, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 8, 10, 10, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 3, 0, 7, 3, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 1, 9, 4, 7, 1, 7, 3, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 4, 7, 3, 0, 4, 1, 2, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 2, 10, 9, 0, 2, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, - 1, - 1, - 1, - 1,\n\t8, 4, 7, 3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 4, 7, 11, 2, 4, 2, 0, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 0, 1, 8, 4, 7, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, - 1, - 1, - 1, - 1,\n\t3, 10, 1, 3, 11, 10, 7, 8, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, - 1, - 1, - 1, - 1,\n\t4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, - 1, - 1, - 1, - 1,\n\t4, 7, 11, 4, 11, 9, 9, 11, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 5, 4, 1, 5, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 5, 4, 8, 3, 5, 3, 1, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 8, 1, 2, 10, 4, 9, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 2, 10, 5, 4, 2, 4, 0, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 11, 2, 0, 8, 11, 4, 9, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 5, 4, 0, 1, 5, 2, 3, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, - 1, - 1, - 1, - 1,\n\t10, 3, 11, 10, 1, 3, 9, 5, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, - 1, - 1, - 1, - 1,\n\t5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, - 1, - 1, - 1, - 1,\n\t5, 4, 8, 5, 8, 10, 10, 8, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 7, 8, 5, 7, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 3, 0, 9, 5, 3, 5, 7, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 7, 8, 0, 1, 7, 1, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 5, 3, 3, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 7, 8, 9, 5, 7, 10, 1, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, - 1, - 1, - 1, - 1,\n\t8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, - 1, - 1, - 1, - 1,\n\t2, 10, 5, 2, 5, 3, 3, 5, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 9, 5, 7, 8, 9, 3, 11, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, - 1, - 1, - 1, - 1,\n\t2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, - 1, - 1, - 1, - 1,\n\t11, 2, 1, 11, 1, 7, 7, 1, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, - 1, - 1, - 1, - 1,\n\t5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, - 1,\n\t11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, - 1,\n\t11, 10, 5, 7, 11, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 0, 1, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 8, 3, 1, 9, 8, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 6, 5, 2, 6, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 6, 5, 1, 2, 6, 3, 0, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 6, 5, 9, 0, 6, 0, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, - 1, - 1, - 1, - 1,\n\t2, 3, 11, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 0, 8, 11, 2, 0, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 2, 3, 11, 5, 10, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, - 1, - 1, - 1, - 1,\n\t6, 3, 11, 6, 5, 3, 5, 1, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, - 1, - 1, - 1, - 1,\n\t3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, - 1, - 1, - 1, - 1,\n\t6, 5, 9, 6, 9, 11, 11, 9, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 10, 6, 4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 3, 0, 4, 7, 3, 6, 5, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 9, 0, 5, 10, 6, 8, 4, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, - 1, - 1, - 1, - 1,\n\t6, 1, 2, 6, 5, 1, 4, 7, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, - 1, - 1, - 1, - 1,\n\t8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, - 1, - 1, - 1, - 1,\n\t7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, - 1,\n\t3, 11, 2, 7, 8, 4, 10, 6, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, - 1, - 1, - 1, - 1,\n\t9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, - 1,\n\t8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, - 1, - 1, - 1, - 1,\n\t5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, - 1,\n\t0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, - 1,\n\t6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, - 1, - 1, - 1, - 1,\n\t10, 4, 9, 6, 4, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 10, 6, 4, 9, 10, 0, 8, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 0, 1, 10, 6, 0, 6, 4, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, - 1, - 1, - 1, - 1,\n\t1, 4, 9, 1, 2, 4, 2, 6, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, - 1, - 1, - 1, - 1,\n\t0, 2, 4, 4, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 3, 2, 8, 2, 4, 4, 2, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 4, 9, 10, 6, 4, 11, 2, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, - 1, - 1, - 1, - 1,\n\t3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, - 1, - 1, - 1, - 1,\n\t6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, - 1,\n\t9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, - 1, - 1, - 1, - 1,\n\t8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, - 1,\n\t3, 11, 6, 3, 6, 0, 0, 6, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 4, 8, 11, 6, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 10, 6, 7, 8, 10, 8, 9, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, - 1, - 1, - 1, - 1,\n\t10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, - 1, - 1, - 1, - 1,\n\t10, 6, 7, 10, 7, 1, 1, 7, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, - 1, - 1, - 1, - 1,\n\t2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, - 1,\n\t7, 8, 0, 7, 0, 6, 6, 0, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 3, 2, 6, 7, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, - 1, - 1, - 1, - 1,\n\t2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, - 1,\n\t1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, - 1,\n\t11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, - 1, - 1, - 1, - 1,\n\t8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, - 1,\n\t0, 9, 1, 11, 6, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, - 1, - 1, - 1, - 1,\n\t7, 11, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 8, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 1, 9, 8, 3, 1, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 1, 2, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 3, 0, 8, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 9, 0, 2, 10, 9, 6, 11, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, - 1, - 1, - 1, - 1,\n\t7, 2, 3, 6, 2, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t7, 0, 8, 7, 6, 0, 6, 2, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 7, 6, 2, 3, 7, 0, 1, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, - 1, - 1, - 1, - 1,\n\t10, 7, 6, 10, 1, 7, 1, 3, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, - 1, - 1, - 1, - 1,\n\t0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, - 1, - 1, - 1, - 1,\n\t7, 6, 10, 7, 10, 8, 8, 10, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 8, 4, 11, 8, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 6, 11, 3, 0, 6, 0, 4, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 6, 11, 8, 4, 6, 9, 0, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, - 1, - 1, - 1, - 1,\n\t6, 8, 4, 6, 11, 8, 2, 10, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, - 1, - 1, - 1, - 1,\n\t4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, - 1, - 1, - 1, - 1,\n\t10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, - 1,\n\t8, 2, 3, 8, 4, 2, 4, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 4, 2, 4, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, - 1, - 1, - 1, - 1,\n\t1, 9, 4, 1, 4, 2, 2, 4, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, - 1, - 1, - 1, - 1,\n\t10, 1, 0, 10, 0, 6, 6, 0, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, - 1,\n\t10, 9, 4, 6, 10, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 5, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 4, 9, 5, 11, 7, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 0, 1, 5, 4, 0, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 10, 1, 2, 7, 6, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, - 1, - 1, - 1, - 1,\n\t7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, - 1, - 1, - 1, - 1,\n\t3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, - 1,\n\t7, 2, 3, 7, 6, 2, 5, 4, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, - 1, - 1, - 1, - 1,\n\t3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, - 1, - 1, - 1, - 1,\n\t6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, - 1,\n\t9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, - 1, - 1, - 1, - 1,\n\t1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, - 1,\n\t4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, - 1,\n\t7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, - 1, - 1, - 1, - 1,\n\t6, 9, 5, 6, 11, 9, 11, 8, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, - 1, - 1, - 1, - 1,\n\t0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, - 1, - 1, - 1, - 1,\n\t6, 11, 3, 6, 3, 5, 5, 3, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, - 1, - 1, - 1, - 1,\n\t0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, - 1,\n\t11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, - 1,\n\t6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, - 1, - 1, - 1, - 1,\n\t5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, - 1, - 1, - 1, - 1,\n\t9, 5, 6, 9, 6, 0, 0, 6, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, - 1,\n\t1, 5, 6, 2, 1, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, - 1,\n\t10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, - 1, - 1, - 1, - 1,\n\t0, 3, 8, 5, 6, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 5, 6, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 5, 10, 7, 5, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 5, 10, 11, 7, 5, 8, 3, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 11, 7, 5, 10, 11, 1, 9, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, - 1, - 1, - 1, - 1,\n\t11, 1, 2, 11, 7, 1, 7, 5, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, - 1, - 1, - 1, - 1,\n\t9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, - 1, - 1, - 1, - 1,\n\t7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, - 1,\n\t2, 5, 10, 2, 3, 5, 3, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, - 1, - 1, - 1, - 1,\n\t9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, - 1, - 1, - 1, - 1,\n\t9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, - 1,\n\t1, 3, 5, 3, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 7, 0, 7, 1, 1, 7, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 0, 3, 9, 3, 5, 5, 3, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 8, 7, 5, 9, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 8, 4, 5, 10, 8, 10, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, - 1, - 1, - 1, - 1,\n\t0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, - 1, - 1, - 1, - 1,\n\t10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, - 1,\n\t2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, - 1, - 1, - 1, - 1,\n\t0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, - 1,\n\t0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, - 1,\n\t9, 4, 5, 2, 11, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, - 1, - 1, - 1, - 1,\n\t5, 10, 2, 5, 2, 4, 4, 2, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, - 1,\n\t5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, - 1, - 1, - 1, - 1,\n\t8, 4, 5, 8, 5, 3, 3, 5, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 4, 5, 1, 0, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, - 1, - 1, - 1, - 1,\n\t9, 4, 5, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 11, 7, 4, 9, 11, 9, 10, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, - 1, - 1, - 1, - 1,\n\t1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, - 1, - 1, - 1, - 1,\n\t3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, - 1,\n\t4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, - 1, - 1, - 1, - 1,\n\t9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, - 1,\n\t11, 7, 4, 11, 4, 2, 2, 4, 0, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, - 1, - 1, - 1, - 1,\n\t2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, - 1, - 1, - 1, - 1,\n\t9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, - 1,\n\t3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, - 1,\n\t1, 10, 2, 8, 7, 4, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 1, 4, 1, 7, 7, 1, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, - 1, - 1, - 1, - 1,\n\t4, 0, 3, 7, 4, 3, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t4, 8, 7, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 10, 8, 10, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 9, 3, 9, 11, 11, 9, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 1, 10, 0, 10, 8, 8, 10, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 1, 10, 11, 3, 10, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 2, 11, 1, 11, 9, 9, 11, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, - 1, - 1, - 1, - 1,\n\t0, 2, 11, 8, 0, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t3, 2, 11, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 3, 8, 2, 8, 10, 10, 8, 9, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t9, 10, 2, 0, 9, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, - 1, - 1, - 1, - 1,\n\t1, 10, 2, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t1, 3, 8, 9, 1, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 9, 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t0, 3, 8, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1,\n\t- 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1 ] );\n\nexport { MarchingCubes, edgeTable, triTable };\n"],"mappings":"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","ignoreList":[]}