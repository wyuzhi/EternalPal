{"version":3,"file":"node_modules/three/examples/jsm/objects/SkyMesh.js","names":["BackSide","BoxGeometry","Mesh","Vector3","NodeMaterial","Fn","float","vec3","acos","add","mul","clamp","cos","dot","exp","max","mix","modelViewProjection","normalize","positionWorld","pow","smoothstep","sub","varyingProperty","vec4","uniform","cameraPosition","SkyMesh","constructor","material","super","this","turbidity","rayleigh","mieCoefficient","mieDirectionalG","sunPosition","upUniform","isSky","vSunDirection","vSunE","vSunfade","vBetaR","vBetaM","vertexNode","e","totalRayleigh","MieConst","cutoffAngle","steepness","EE","sunDirection","assign","angle","zenithAngleCos","sunIntensity","div","negate","sunfade","y","rayleighCoefficient","c","totalMie","position","z","w","colorNode","pi","rayleighZenithLength","mieZenithLength","sunAngularDiameterCos","THREE_OVER_SIXTEENPI","ONE_OVER_FOURPI","direction","zenithAngle","inverse","sR","sM","Fex","cosTheta","rPhase","betaRTheta","g2","inv","mPhase","betaMTheta","Lin","mulAssign","L0","sundisk","addAssign","texColor","retColor","side","depthWrite"],"sources":["node_modules/three/examples/jsm/objects/SkyMesh.js"],"sourcesContent":["import {\n\tBackSide,\n\tBoxGeometry,\n\tMesh,\n\tVector3,\n\tNodeMaterial\n} from 'three/webgpu';\n\nimport { Fn, float, vec3, acos, add, mul, clamp, cos, dot, exp, max, mix, modelViewProjection, normalize, positionWorld, pow, smoothstep, sub, varyingProperty, vec4, uniform, cameraPosition } from 'three/tsl';\n\n/**\n * Represents a skydome for scene backgrounds. Based on [A Practical Analytic Model for Daylight]{@link https://www.researchgate.net/publication/220720443_A_Practical_Analytic_Model_for_Daylight}\n * aka The Preetham Model, the de facto standard for analytical skydomes.\n *\n * Note that this class can only be used with {@link WebGLRenderer}.\n * When using {@link WebGPURenderer}, use {@link SkyMesh}.\n *\n * More references:\n *\n * - {@link http://simonwallner.at/project/atmospheric-scattering/}\n * - {@link http://blenderartists.org/forum/showthread.php?245954-preethams-sky-impementation-HDR}\n *\n * ```js\n * const sky = new SkyMesh();\n * sky.scale.setScalar( 10000 );\n * scene.add( sky );\n * ```\n *\n * @augments Mesh\n * @three_import import { SkyMesh } from 'three/addons/objects/SkyMesh.js';\n */\nclass SkyMesh extends Mesh {\n\n\t/**\n\t * Constructs a new skydome.\n\t */\n\tconstructor() {\n\n\t\tconst material = new NodeMaterial();\n\n\t\tsuper( new BoxGeometry( 1, 1, 1 ), material );\n\n\t\t/**\n\t\t * The turbidity uniform.\n\t\t *\n\t\t * @type {UniformNode<float>}\n\t\t */\n\t\tthis.turbidity = uniform( 2 );\n\n\t\t/**\n\t\t * The rayleigh uniform.\n\t\t *\n\t\t * @type {UniformNode<float>}\n\t\t */\n\t\tthis.rayleigh = uniform( 1 );\n\n\t\t/**\n\t\t * The mieCoefficient uniform.\n\t\t *\n\t\t * @type {UniformNode<float>}\n\t\t */\n\t\tthis.mieCoefficient = uniform( 0.005 );\n\n\t\t/**\n\t\t * The mieDirectionalG uniform.\n\t\t *\n\t\t * @type {UniformNode<float>}\n\t\t */\n\t\tthis.mieDirectionalG = uniform( 0.8 );\n\n\t\t/**\n\t\t * The sun position uniform.\n\t\t *\n\t\t * @type {UniformNode<vec3>}\n\t\t */\n\t\tthis.sunPosition = uniform( new Vector3() );\n\n\t\t/**\n\t\t * The up position.\n\t\t *\n\t\t * @type {UniformNode<vec3>}\n\t\t */\n\t\tthis.upUniform = uniform( new Vector3( 0, 1, 0 ) );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isSky = true;\n\n\t\t// Varyings\n\n\t\tconst vSunDirection = varyingProperty( 'vec3' );\n\t\tconst vSunE = varyingProperty( 'float' );\n\t\tconst vSunfade = varyingProperty( 'float' );\n\t\tconst vBetaR = varyingProperty( 'vec3' );\n\t\tconst vBetaM = varyingProperty( 'vec3' );\n\n\t\tconst vertexNode = /*@__PURE__*/ Fn( () => {\n\n\t\t\t// constants for atmospheric scattering\n\t\t\tconst e = float( 2.71828182845904523536028747135266249775724709369995957 );\n\t\t\t// const pi = float( 3.141592653589793238462643383279502884197169 );\n\n\t\t\t// wavelength of used primaries, according to preetham\n\t\t\t// const lambda = vec3( 680E-9, 550E-9, 450E-9 );\n\t\t\t// this pre-calculation replaces older TotalRayleigh(vec3 lambda) function:\n\t\t\t// (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))\n\t\t\tconst totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );\n\n\t\t\t// mie stuff\n\t\t\t// K coefficient for the primaries\n\t\t\t// const v = float( 4.0 );\n\t\t\t// const K = vec3( 0.686, 0.678, 0.666 );\n\t\t\t// MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K\n\t\t\tconst MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );\n\n\t\t\t// earth shadow hack\n\t\t\t// cutoffAngle = pi / 1.95;\n\t\t\tconst cutoffAngle = float( 1.6110731556870734 );\n\t\t\tconst steepness = float( 1.5 );\n\t\t\tconst EE = float( 1000.0 );\n\n\t\t\t// varying sun position\n\n\t\t\tconst sunDirection = normalize( this.sunPosition );\n\t\t\tvSunDirection.assign( sunDirection );\n\n\t\t\t// varying sun intensity\n\n\t\t\tconst angle = dot( sunDirection, this.upUniform );\n\t\t\tconst zenithAngleCos = clamp( angle, - 1, 1 );\n\t\t\tconst sunIntensity = EE.mul( max( 0.0, float( 1.0 ).sub( pow( e, cutoffAngle.sub( acos( zenithAngleCos ) ).div( steepness ).negate() ) ) ) );\n\t\t\tvSunE.assign( sunIntensity );\n\n\t\t\t// varying sun fade\n\n\t\t\tconst sunfade = float( 1.0 ).sub( clamp( float( 1.0 ).sub( exp( this.sunPosition.y.div( 450000.0 ) ) ), 0, 1 ) );\n\t\t\tvSunfade.assign( sunfade );\n\n\t\t\t// varying vBetaR\n\n\t\t\tconst rayleighCoefficient = this.rayleigh.sub( float( 1.0 ).mul( float( 1.0 ).sub( sunfade ) ) );\n\n\t\t\t// extinction (absorption + out scattering)\n\t\t\t// rayleigh coefficients\n\t\t\tvBetaR.assign( totalRayleigh.mul( rayleighCoefficient ) );\n\n\t\t\t// varying vBetaM\n\n\t\t\tconst c = float( 0.2 ).mul( this.turbidity ).mul( 10E-18 );\n\t\t\tconst totalMie = float( 0.434 ).mul( c ).mul( MieConst );\n\n\t\t\tvBetaM.assign( totalMie.mul( this.mieCoefficient ) );\n\n\t\t\t// position\n\n\t\t\tconst position = modelViewProjection;\n\t\t\tposition.z.assign( position.w ); // set z to camera.far\n\n\t\t\treturn position;\n\n\t\t} )();\n\n\t\tconst colorNode = /*@__PURE__*/ Fn( () => {\n\n\t\t\t// constants for atmospheric scattering\n\t\t\tconst pi = float( 3.141592653589793238462643383279502884197169 );\n\n\t\t\t// optical length at zenith for molecules\n\t\t\tconst rayleighZenithLength = float( 8.4E3 );\n\t\t\tconst mieZenithLength = float( 1.25E3 );\n\t\t\t// 66 arc seconds -> degrees, and the cosine of that\n\t\t\tconst sunAngularDiameterCos = float( 0.999956676946448443553574619906976478926848692873900859324 );\n\n\t\t\t// 3.0 / ( 16.0 * pi )\n\t\t\tconst THREE_OVER_SIXTEENPI = float( 0.05968310365946075 );\n\t\t\t// 1.0 / ( 4.0 * pi )\n\t\t\tconst ONE_OVER_FOURPI = float( 0.07957747154594767 );\n\n\t\t\t//\n\n\t\t\tconst direction = normalize( positionWorld.sub( cameraPosition ) );\n\n\t\t\t// optical length\n\t\t\t// cutoff angle at 90 to avoid singularity in next formula.\n\t\t\tconst zenithAngle = acos( max( 0.0, dot( this.upUniform, direction ) ) );\n\t\t\tconst inverse = float( 1.0 ).div( cos( zenithAngle ).add( float( 0.15 ).mul( pow( float( 93.885 ).sub( zenithAngle.mul( 180.0 ).div( pi ) ), - 1.253 ) ) ) );\n\t\t\tconst sR = rayleighZenithLength.mul( inverse );\n\t\t\tconst sM = mieZenithLength.mul( inverse );\n\n\t\t\t// combined extinction factor\n\t\t\tconst Fex = exp( mul( vBetaR, sR ).add( mul( vBetaM, sM ) ).negate() );\n\n\t\t\t// in scattering\n\t\t\tconst cosTheta = dot( direction, vSunDirection );\n\n\t\t\t// betaRTheta\n\n\t\t\tconst c = cosTheta.mul( 0.5 ).add( 0.5 );\n\t\t\tconst rPhase = THREE_OVER_SIXTEENPI.mul( float( 1.0 ).add( pow( c, 2.0 ) ) );\n\t\t\tconst betaRTheta = vBetaR.mul( rPhase );\n\n\t\t\t// betaMTheta\n\n\t\t\tconst g2 = pow( this.mieDirectionalG, 2.0 );\n\t\t\tconst inv = float( 1.0 ).div( pow( float( 1.0 ).sub( float( 2.0 ).mul( this.mieDirectionalG ).mul( cosTheta ) ).add( g2 ), 1.5 ) );\n\t\t\tconst mPhase = ONE_OVER_FOURPI.mul( float( 1.0 ).sub( g2 ) ).mul( inv );\n\t\t\tconst betaMTheta = vBetaM.mul( mPhase );\n\n\t\t\tconst Lin = pow( vSunE.mul( add( betaRTheta, betaMTheta ).div( add( vBetaR, vBetaM ) ) ).mul( sub( 1.0, Fex ) ), vec3( 1.5 ) );\n\t\t\tLin.mulAssign( mix( vec3( 1.0 ), pow( vSunE.mul( add( betaRTheta, betaMTheta ).div( add( vBetaR, vBetaM ) ) ).mul( Fex ), vec3( 1.0 / 2.0 ) ), clamp( pow( sub( 1.0, dot( this.upUniform, vSunDirection ) ), 5.0 ), 0.0, 1.0 ) ) );\n\n\t\t\t// nightsky\n\n\t\t\tconst L0 = vec3( 0.1 ).mul( Fex );\n\n\t\t\t// composition + solar disc\n\t\t\tconst sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos.add( 0.00002 ), cosTheta );\n\t\t\tL0.addAssign( vSunE.mul( 19000.0 ).mul( Fex ).mul( sundisk ) );\n\n\t\t\tconst texColor = add( Lin, L0 ).mul( 0.04 ).add( vec3( 0.0, 0.0003, 0.00075 ) );\n\n\t\t\tconst retColor = pow( texColor, vec3( float( 1.0 ).div( float( 1.2 ).add( vSunfade.mul( 1.2 ) ) ) ) );\n\n\t\t\treturn vec4( retColor, 1.0 );\n\n\t\t} )();\n\n\t\tmaterial.side = BackSide;\n\t\tmaterial.depthWrite = false;\n\n\t\tmaterial.vertexNode = vertexNode;\n\t\tmaterial.colorNode = colorNode;\n\n\t}\n\n}\n\nexport { SkyMesh };\n"],"mappings":"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","ignoreList":[]}