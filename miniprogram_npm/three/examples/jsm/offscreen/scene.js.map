{"version":3,"file":"node_modules/three/examples/jsm/offscreen/scene.js","names":["THREE","camera","scene","renderer","group","init","canvas","width","height","pixelRatio","path","PerspectiveCamera","position","z","Scene","fog","Fog","background","Color","Group","add","loader","ImageBitmapLoader","setPath","setOptions","imageOrientation","load","imageBitmap","texture","CanvasTexture","geometry","IcosahedronGeometry","materials","MeshMatcapMaterial","color","matcap","i","material","length","mesh","Mesh","x","random","y","scale","setScalar","WebGLRenderer","antialias","setPixelRatio","setSize","animate","rotation","Date","now","render","self","requestAnimationFrame","seed","Math","sin","floor"],"sources":["node_modules/three/examples/jsm/offscreen/scene.js"],"sourcesContent":["import * as THREE from '../../../build/three.module.js';\n\nlet camera, scene, renderer, group;\n\nfunction init( canvas, width, height, pixelRatio, path ) {\n\n\tcamera = new THREE.PerspectiveCamera( 40, width / height, 1, 1000 );\n\tcamera.position.z = 200;\n\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( 0x444466, 100, 400 );\n\tscene.background = new THREE.Color( 0x444466 );\n\n\tgroup = new THREE.Group();\n\tscene.add( group );\n\n\t// we don't use ImageLoader since it has a DOM dependency (HTML5 image element)\n\n\tconst loader = new THREE.ImageBitmapLoader().setPath( path );\n\tloader.setOptions( { imageOrientation: 'flipY' } );\n\tloader.load( 'textures/matcaps/matcap-porcelain-white.jpg', function ( imageBitmap ) {\n\n\t\tconst texture = new THREE.CanvasTexture( imageBitmap );\n\n\t\tconst geometry = new THREE.IcosahedronGeometry( 5, 8 );\n\t\tconst materials = [\n\t\t\tnew THREE.MeshMatcapMaterial( { color: 0xaa24df, matcap: texture } ),\n\t\t\tnew THREE.MeshMatcapMaterial( { color: 0x605d90, matcap: texture } ),\n\t\t\tnew THREE.MeshMatcapMaterial( { color: 0xe04a3f, matcap: texture } ),\n\t\t\tnew THREE.MeshMatcapMaterial( { color: 0xe30456, matcap: texture } )\n\t\t];\n\n\t\tfor ( let i = 0; i < 100; i ++ ) {\n\n\t\t\tconst material = materials[ i % materials.length ];\n\t\t\tconst mesh = new THREE.Mesh( geometry, material );\n\t\t\tmesh.position.x = random() * 200 - 100;\n\t\t\tmesh.position.y = random() * 200 - 100;\n\t\t\tmesh.position.z = random() * 200 - 100;\n\t\t\tmesh.scale.setScalar( random() + 1 );\n\t\t\tgroup.add( mesh );\n\n\t\t}\n\n\t\trenderer = new THREE.WebGLRenderer( { antialias: true, canvas: canvas } );\n\t\trenderer.setPixelRatio( pixelRatio );\n\t\trenderer.setSize( width, height, false );\n\n\t\tanimate();\n\n\t} );\n\n}\n\nfunction animate() {\n\n\t// group.rotation.x = Date.now() / 4000;\n\tgroup.rotation.y = - Date.now() / 4000;\n\n\trenderer.render( scene, camera );\n\n\tif ( self.requestAnimationFrame ) {\n\n\t\tself.requestAnimationFrame( animate );\n\n\t} else {\n\n\t\t// Firefox\n\n\t}\n\n}\n\n// PRNG\n\nlet seed = 1;\n\nfunction random() {\n\n\tconst x = Math.sin( seed ++ ) * 10000;\n\n\treturn x - Math.floor( x );\n\n}\n\nexport default init;\n"],"mappings":"UAAYA,UAAW,iCAEvB,IAAIC,OAAQC,MAAOC,SAAUC,MAE7B,SAASC,KAAMC,EAAQC,EAAOC,EAAQC,EAAYC,GAEjDT,OAAS,IAAID,MAAMW,kBAAmB,GAAIJ,EAAQC,EAAQ,EAAG,KAC7DP,OAAOW,SAASC,EAAI,IAEpBX,MAAQ,IAAIF,MAAMc,MAClBZ,MAAMa,IAAM,IAAIf,MAAMgB,IAAK,QAAU,IAAK,KAC1Cd,MAAMe,WAAa,IAAIjB,MAAMkB,MAAO,SAEpCd,MAAQ,IAAIJ,MAAMmB,MAClBjB,MAAMkB,IAAKhB,OAIX,MAAMiB,GAAS,IAAIrB,MAAMsB,mBAAoBC,QAASb,GACtDW,EAAOG,WAAY,CAAEC,iBAAkB,UACvCJ,EAAOK,KAAM,+CAA+C,SAAWC,GAEtE,MAAMC,EAAU,IAAI5B,MAAM6B,cAAeF,GAEnCG,EAAW,IAAI9B,MAAM+B,oBAAqB,EAAG,GAC7CC,EAAY,CACjB,IAAIhC,MAAMiC,mBAAoB,CAAEC,MAAO,SAAUC,OAAQP,IACzD,IAAI5B,MAAMiC,mBAAoB,CAAEC,MAAO,QAAUC,OAAQP,IACzD,IAAI5B,MAAMiC,mBAAoB,CAAEC,MAAO,SAAUC,OAAQP,IACzD,IAAI5B,MAAMiC,mBAAoB,CAAEC,MAAO,SAAUC,OAAQP,KAG1D,IAAM,IAAIQ,EAAI,EAAGA,EAAI,IAAKA,IAAO,CAEhC,MAAMC,EAAWL,EAAWI,EAAIJ,EAAUM,QACpCC,EAAO,IAAIvC,MAAMwC,KAAMV,EAAUO,GACvCE,EAAK3B,SAAS6B,EAAe,IAAXC,SAAiB,IACnCH,EAAK3B,SAAS+B,EAAe,IAAXD,SAAiB,IACnCH,EAAK3B,SAASC,EAAe,IAAX6B,SAAiB,IACnCH,EAAKK,MAAMC,UAAWH,SAAW,GACjCtC,MAAMgB,IAAKmB,EAEZ,CAEApC,SAAW,IAAIH,MAAM8C,cAAe,CAAEC,WAAW,EAAMzC,OAAQA,IAC/DH,SAAS6C,cAAevC,GACxBN,SAAS8C,QAAS1C,EAAOC,GAAQ,GAEjC0C,SAED,GAED,CAEA,SAASA,UAGR9C,MAAM+C,SAASR,GAAMS,KAAKC,MAAQ,IAElClD,SAASmD,OAAQpD,MAAOD,QAEnBsD,KAAKC,uBAETD,KAAKC,sBAAuBN,QAQ9B,CAIA,IAAIO,KAAO,EAEX,SAASf,SAER,MAAMD,EAA0B,IAAtBiB,KAAKC,IAAKF,QAEpB,OAAOhB,EAAIiB,KAAKE,MAAOnB,EAExB,gBAEepC","ignoreList":[]}