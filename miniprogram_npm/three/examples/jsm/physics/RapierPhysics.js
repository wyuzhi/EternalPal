import{Clock,Vector3,Quaternion,Matrix4}from"three";const RAPIER_PATH="https://cdn.skypack.dev/@dimforge/rapier3d-compat@0.17.3",frameRate=60,_scale=new Vector3(1,1,1),ZERO=new Vector3;let RAPIER=null;function getShape(e){const t=e.parameters;if("RoundedBoxGeometry"===e.type){const e=void 0!==t.width?t.width/2:.5,o=void 0!==t.height?t.height/2:.5,i=void 0!==t.depth?t.depth/2:.5,r=void 0!==t.radius?t.radius:.1;return RAPIER.ColliderDesc.roundCuboid(e-r,o-r,i-r,r)}if("BoxGeometry"===e.type){const e=void 0!==t.width?t.width/2:.5,o=void 0!==t.height?t.height/2:.5,i=void 0!==t.depth?t.depth/2:.5;return RAPIER.ColliderDesc.cuboid(e,o,i)}if("SphereGeometry"===e.type||"IcosahedronGeometry"===e.type){const e=void 0!==t.radius?t.radius:1;return RAPIER.ColliderDesc.ball(e)}if("CylinderGeometry"===e.type){const e=void 0!==t.radiusBottom?t.radiusBottom:.5,o=void 0!==t.height?t.height:.5;return RAPIER.ColliderDesc.cylinder(o/2,e)}if("CapsuleGeometry"===e.type){const e=void 0!==t.radius?t.radius:.5,o=void 0!==t.height?t.height:.5;return RAPIER.ColliderDesc.capsule(o/2,e)}if("BufferGeometry"===e.type){const t=[],o=new Vector3,i=e.getAttribute("position");for(let e=0;e<i.count;e++)o.fromBufferAttribute(i,e),t.push(o.x,o.y,o.z);const r=null===e.getIndex()?Uint32Array.from(Array(parseInt(t.length/3)).keys()):e.getIndex().array;return RAPIER.ColliderDesc.trimesh(t,r)}return null}async function RapierPhysics(){null===RAPIER&&(RAPIER=await import(`${RAPIER_PATH}`),await RAPIER.init());const e=new Vector3(0,-9.81,0),t=new RAPIER.World(e),o=[],i=new WeakMap,r=new Vector3,s=new Quaternion,n=new Matrix4;function a(e,t=0,s=0){const n=getShape(e.geometry);if(null===n)return;n.setMass(t),n.setRestitution(s);const{body:a,collider:d}=e.isInstancedMesh?function(e,t,o){const i=e.instanceMatrix.array,s=[],n=[];for(let a=0;a<e.count;a++){const e=r.fromArray(i,16*a+12),{body:d,collider:l}=c(e,null,t,o);s.push(d),n.push(l)}return{body:s,collider:n}}(e,t,n):c(e.position,e.quaternion,t,n);e.userData.physics||(e.userData.physics={}),e.userData.physics.body=a,e.userData.physics.collider=d,t>0&&(o.push(e),i.set(e,{body:a,collider:d}))}function c(e,o,i,r){const s=i>0?RAPIER.RigidBodyDesc.dynamic():RAPIER.RigidBodyDesc.fixed();s.setTranslation(...e),null!==o&&s.setRotation(o);const n=t.createRigidBody(s);return{body:n,collider:t.createCollider(r,n)}}const d=new Clock;return setInterval((function(){t.timestep=d.getDelta(),t.step();for(let e=0,t=o.length;e<t;e++){const t=o[e];if(t.isInstancedMesh){const e=t.instanceMatrix.array,{body:o}=i.get(t);for(let t=0;t<o.length;t++){const i=o[t],r=i.translation();s.copy(i.rotation()),n.compose(r,s,_scale).toArray(e,16*t)}t.instanceMatrix.needsUpdate=!0,t.computeBoundingSphere()}else{const{body:e}=i.get(t);t.position.copy(e.translation()),t.quaternion.copy(e.rotation())}}}),1e3/60),{RAPIER:RAPIER,world:t,addScene:function(e){e.traverse((function(e){if(e.isMesh){const t=e.userData.physics;t&&a(e,t.mass,t.restitution)}}))},addMesh:a,removeMesh:function(e){const r=o.indexOf(e);if(-1!==r){if(o.splice(r,1),i.delete(e),!e.userData.physics)return;const s=e.userData.physics.body,n=e.userData.physics.collider;s&&function(e){if(Array.isArray(e))for(let o=0;o<e.length;o++)t.removeRigidBody(e[o]);else t.removeRigidBody(e)}(s),n&&function(e){if(Array.isArray(e))for(let o=0;o<e.length;o++)t.removeCollider(e[o]);else t.removeCollider(e)}(n)}},setMeshPosition:function(e,t,o=0){let{body:r}=i.get(e);e.isInstancedMesh&&(r=r[o]),r.setAngvel(ZERO),r.setLinvel(ZERO),r.setTranslation(t)},setMeshVelocity:function(e,t,o=0){let{body:r}=i.get(e);e.isInstancedMesh&&(r=r[o]),r.setLinvel(t)},addHeightfield:function(e,o,i,r,s){const n=RAPIER.ColliderDesc.heightfield(o,i,r,s),a=RAPIER.RigidBodyDesc.fixed();a.setTranslation(e.position.x,e.position.y,e.position.z),a.setRotation(e.quaternion);const c=t.createRigidBody(a);return t.createCollider(n,c),e.userData.physics||(e.userData.physics={}),e.userData.physics.body=c,c}}}export{RapierPhysics};
//# sourceMappingURL=RapierPhysics.js.map