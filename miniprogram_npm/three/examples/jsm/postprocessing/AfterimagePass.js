import{HalfFloatType,NearestFilter,NoBlending,ShaderMaterial,UniformsUtils,WebGLRenderTarget}from"three";import{Pass,FullScreenQuad}from"./Pass.js";import{CopyShader}from"../shaders/CopyShader.js";import{AfterimageShader}from"../shaders/AfterimageShader.js";class AfterimagePass extends Pass{constructor(e=.96){super(),this.uniforms=UniformsUtils.clone(AfterimageShader.uniforms),this.damp=e,this.compFsMaterial=new ShaderMaterial({uniforms:this.uniforms,vertexShader:AfterimageShader.vertexShader,fragmentShader:AfterimageShader.fragmentShader}),this.copyFsMaterial=new ShaderMaterial({uniforms:UniformsUtils.clone(CopyShader.uniforms),vertexShader:CopyShader.vertexShader,fragmentShader:CopyShader.fragmentShader,blending:NoBlending,depthTest:!1,depthWrite:!1}),this._textureComp=new WebGLRenderTarget(window.innerWidth,window.innerHeight,{magFilter:NearestFilter,type:HalfFloatType}),this._textureOld=new WebGLRenderTarget(window.innerWidth,window.innerHeight,{magFilter:NearestFilter,type:HalfFloatType}),this._compFsQuad=new FullScreenQuad(this.compFsMaterial),this._copyFsQuad=new FullScreenQuad(this.copyFsMaterial)}get damp(){return this.uniforms.damp.value}set damp(e){this.uniforms.damp.value=e}render(e,t,r){this.uniforms.tOld.value=this._textureOld.texture,this.uniforms.tNew.value=r.texture,e.setRenderTarget(this._textureComp),this._compFsQuad.render(e),this._copyFsQuad.material.uniforms.tDiffuse.value=this._textureComp.texture,this.renderToScreen?(e.setRenderTarget(null),this._copyFsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this._copyFsQuad.render(e));const s=this._textureOld;this._textureOld=this._textureComp,this._textureComp=s}setSize(e,t){this._textureComp.setSize(e,t),this._textureOld.setSize(e,t)}dispose(){this._textureComp.dispose(),this._textureOld.dispose(),this.compFsMaterial.dispose(),this.copyFsMaterial.dispose(),this._compFsQuad.dispose(),this._copyFsQuad.dispose()}}export{AfterimagePass};
//# sourceMappingURL=AfterimagePass.js.map