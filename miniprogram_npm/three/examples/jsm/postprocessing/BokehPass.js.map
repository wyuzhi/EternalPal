{"version":3,"file":"node_modules/three/examples/jsm/postprocessing/BokehPass.js","names":["Color","HalfFloatType","MeshDepthMaterial","NearestFilter","NoBlending","RGBADepthPacking","ShaderMaterial","UniformsUtils","WebGLRenderTarget","Pass","FullScreenQuad","BokehShader","BokehPass","constructor","scene","camera","params","super","this","focus","undefined","aperture","maxblur","_renderTargetDepth","minFilter","magFilter","type","texture","name","_materialDepth","depthPacking","blending","bokehUniforms","clone","uniforms","value","aspect","near","far","materialBokeh","defines","Object","assign","vertexShader","fragmentShader","_fsQuad","_oldClearColor","render","renderer","writeBuffer","readBuffer","overrideMaterial","getClearColor","oldClearAlpha","getClearAlpha","oldAutoClear","autoClear","setClearColor","setClearAlpha","setRenderTarget","clear","renderToScreen","setSize","width","height","dispose"],"sources":["node_modules/three/examples/jsm/postprocessing/BokehPass.js"],"sourcesContent":["import {\n\tColor,\n\tHalfFloatType,\n\tMeshDepthMaterial,\n\tNearestFilter,\n\tNoBlending,\n\tRGBADepthPacking,\n\tShaderMaterial,\n\tUniformsUtils,\n\tWebGLRenderTarget\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { BokehShader } from '../shaders/BokehShader.js';\n\n/**\n * Pass for creating depth of field (DOF) effect.\n *\n * ```js\n * const bokehPass = new BokehPass( scene, camera, {\n * \tfocus: 500\n * \taperture: 5,\n * \tmaxblur: 0.01\n * } );\n * composer.addPass( bokehPass );\n * ```\n *\n * @augments Pass\n * @three_import import { BokehPass } from 'three/addons/postprocessing/BokehPass.js';\n */\nclass BokehPass extends Pass {\n\n\t/**\n\t * Constructs a new Bokeh pass.\n\t *\n\t * @param {Scene} scene - The scene to render the DOF for.\n\t * @param {Camera} camera - The camera.\n\t * @param {BokehPass~Options} params - The pass options.\n\t */\n\tconstructor( scene, camera, params ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The scene to render the DOF for.\n\t\t *\n\t\t * @type {Scene}\n\t\t */\n\t\tthis.scene = scene;\n\n\t\t/**\n\t\t * The camera.\n\t\t *\n\t\t * @type {Camera}\n\t\t */\n\t\tthis.camera = camera;\n\n\t\tconst focus = ( params.focus !== undefined ) ? params.focus : 1.0;\n\t\tconst aperture = ( params.aperture !== undefined ) ? params.aperture : 0.025;\n\t\tconst maxblur = ( params.maxblur !== undefined ) ? params.maxblur : 1.0;\n\n\t\t// render targets\n\n\t\tthis._renderTargetDepth = new WebGLRenderTarget( 1, 1, { // will be resized later\n\t\t\tminFilter: NearestFilter,\n\t\t\tmagFilter: NearestFilter,\n\t\t\ttype: HalfFloatType\n\t\t} );\n\n\t\tthis._renderTargetDepth.texture.name = 'BokehPass.depth';\n\n\t\t// depth material\n\n\t\tthis._materialDepth = new MeshDepthMaterial();\n\t\tthis._materialDepth.depthPacking = RGBADepthPacking;\n\t\tthis._materialDepth.blending = NoBlending;\n\n\t\t// bokeh material\n\n\t\tconst bokehUniforms = UniformsUtils.clone( BokehShader.uniforms );\n\n\t\tbokehUniforms[ 'tDepth' ].value = this._renderTargetDepth.texture;\n\n\t\tbokehUniforms[ 'focus' ].value = focus;\n\t\tbokehUniforms[ 'aspect' ].value = camera.aspect;\n\t\tbokehUniforms[ 'aperture' ].value = aperture;\n\t\tbokehUniforms[ 'maxblur' ].value = maxblur;\n\t\tbokehUniforms[ 'nearClip' ].value = camera.near;\n\t\tbokehUniforms[ 'farClip' ].value = camera.far;\n\n\t\t/**\n\t\t * The pass bokeh material.\n\t\t *\n\t\t * @type {ShaderMaterial}\n\t\t */\n\t\tthis.materialBokeh = new ShaderMaterial( {\n\t\t\tdefines: Object.assign( {}, BokehShader.defines ),\n\t\t\tuniforms: bokehUniforms,\n\t\t\tvertexShader: BokehShader.vertexShader,\n\t\t\tfragmentShader: BokehShader.fragmentShader\n\t\t} );\n\n\t\t/**\n\t\t * The pass uniforms.  Use this object if you want to update the\n\t\t * `focus`, `aperture` or `maxblur` values at runtime.\n\t\t *\n\t\t * ```js\n\t\t * pass.uniforms.focus.value = focus;\n\t\t * pass.uniforms.aperture.value = aperture;\n\t\t * pass.uniforms.maxblur.value = maxblur;\n\t\t * ```\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tthis.uniforms = bokehUniforms;\n\n\t\t// internals\n\n\t\tthis._fsQuad = new FullScreenQuad( this.materialBokeh );\n\n\t\tthis._oldClearColor = new Color();\n\n\t}\n\n\t/**\n\t * Performs the Bokeh pass.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive*/ ) {\n\n\t\t// Render depth into texture\n\n\t\tthis.scene.overrideMaterial = this._materialDepth;\n\n\t\trenderer.getClearColor( this._oldClearColor );\n\t\tconst oldClearAlpha = renderer.getClearAlpha();\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( 0xffffff );\n\t\trenderer.setClearAlpha( 1.0 );\n\t\trenderer.setRenderTarget( this._renderTargetDepth );\n\t\trenderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// Render bokeh composite\n\n\t\tthis.uniforms[ 'tColor' ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'nearClip' ].value = this.camera.near;\n\t\tthis.uniforms[ 'farClip' ].value = this.camera.far;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\trenderer.clear();\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.setClearColor( this._oldClearColor );\n\t\trenderer.setClearAlpha( oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n\t/**\n\t * Sets the size of the pass.\n\t *\n\t * @param {number} width - The width to set.\n\t * @param {number} height - The height to set.\n\t */\n\tsetSize( width, height ) {\n\n\t\tthis.materialBokeh.uniforms[ 'aspect' ].value = width / height;\n\n\t\tthis._renderTargetDepth.setSize( width, height );\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever the pass is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis._renderTargetDepth.dispose();\n\n\t\tthis._materialDepth.dispose();\n\t\tthis.materialBokeh.dispose();\n\n\t\tthis._fsQuad.dispose();\n\n\t}\n\n}\n\n/**\n * Constructor options of `BokehPass`.\n *\n * @typedef {Object} BokehPass~Options\n * @property {number} [focus=1] - Defines the effect's focus which is the distance along the camera's look direction in world units.\n * @property {number} [aperture=0.025] - Defines the effect's aperture.\n * @property {number} [maxblur=1] - Defines the effect's maximum blur.\n **/\n\nexport { BokehPass };\n"],"mappings":"OACCA,MACAC,cACAC,kBACAC,cACAC,WACAC,iBACAC,eACAC,cACAC,sBACM,eACEC,KAAMC,mBAAsB,mBAC5BC,gBAAmB,4BAiB5B,MAAMC,kBAAkBH,KASvB,WAAAI,CAAaC,EAAOC,EAAQC,GAE3BC,QAOAC,KAAKJ,MAAQA,EAObI,KAAKH,OAASA,EAEd,MAAMI,OAA2BC,IAAjBJ,EAAOG,MAAwBH,EAAOG,MAAQ,EACxDE,OAAiCD,IAApBJ,EAAOK,SAA2BL,EAAOK,SAAW,KACjEC,OAA+BF,IAAnBJ,EAAOM,QAA0BN,EAAOM,QAAU,EAIpEJ,KAAKK,mBAAqB,IAAIf,kBAAmB,EAAG,EAAG,CACtDgB,UAAWrB,cACXsB,UAAWtB,cACXuB,KAAMzB,gBAGPiB,KAAKK,mBAAmBI,QAAQC,KAAO,kBAIvCV,KAAKW,eAAiB,IAAI3B,kBAC1BgB,KAAKW,eAAeC,aAAezB,iBACnCa,KAAKW,eAAeE,SAAW3B,WAI/B,MAAM4B,EAAgBzB,cAAc0B,MAAOtB,YAAYuB,UAEvDF,EAAwB,OAAEG,MAAQjB,KAAKK,mBAAmBI,QAE1DK,EAAuB,MAAEG,MAAQhB,EACjCa,EAAwB,OAAEG,MAAQpB,EAAOqB,OACzCJ,EAA0B,SAAEG,MAAQd,EACpCW,EAAyB,QAAEG,MAAQb,EACnCU,EAA0B,SAAEG,MAAQpB,EAAOsB,KAC3CL,EAAyB,QAAEG,MAAQpB,EAAOuB,IAO1CpB,KAAKqB,cAAgB,IAAIjC,eAAgB,CACxCkC,QAASC,OAAOC,OAAQ,CAAC,EAAG/B,YAAY6B,SACxCN,SAAUF,EACVW,aAAchC,YAAYgC,aAC1BC,eAAgBjC,YAAYiC,iBAe7B1B,KAAKgB,SAAWF,EAIhBd,KAAK2B,QAAU,IAAInC,eAAgBQ,KAAKqB,eAExCrB,KAAK4B,eAAiB,IAAI9C,KAE3B,CAaA,MAAA+C,CAAQC,EAAUC,EAAaC,GAI9BhC,KAAKJ,MAAMqC,iBAAmBjC,KAAKW,eAEnCmB,EAASI,cAAelC,KAAK4B,gBAC7B,MAAMO,EAAgBL,EAASM,gBACzBC,EAAeP,EAASQ,UAC9BR,EAASQ,WAAY,EAErBR,EAASS,cAAe,UACxBT,EAASU,cAAe,GACxBV,EAASW,gBAAiBzC,KAAKK,oBAC/ByB,EAASY,QACTZ,EAASD,OAAQ7B,KAAKJ,MAAOI,KAAKH,QAIlCG,KAAKgB,SAAmB,OAAEC,MAAQe,EAAWvB,QAC7CT,KAAKgB,SAAqB,SAAEC,MAAQjB,KAAKH,OAAOsB,KAChDnB,KAAKgB,SAAoB,QAAEC,MAAQjB,KAAKH,OAAOuB,IAE1CpB,KAAK2C,gBAETb,EAASW,gBAAiB,MAC1BzC,KAAK2B,QAAQE,OAAQC,KAIrBA,EAASW,gBAAiBV,GAC1BD,EAASY,QACT1C,KAAK2B,QAAQE,OAAQC,IAItB9B,KAAKJ,MAAMqC,iBAAmB,KAC9BH,EAASS,cAAevC,KAAK4B,gBAC7BE,EAASU,cAAeL,GACxBL,EAASQ,UAAYD,CAEtB,CAQA,OAAAO,CAASC,EAAOC,GAEf9C,KAAKqB,cAAcL,SAAmB,OAAEC,MAAQ4B,EAAQC,EAExD9C,KAAKK,mBAAmBuC,QAASC,EAAOC,EAEzC,CAMA,OAAAC,GAEC/C,KAAKK,mBAAmB0C,UAExB/C,KAAKW,eAAeoC,UACpB/C,KAAKqB,cAAc0B,UAEnB/C,KAAK2B,QAAQoB,SAEd,SAaQrD","ignoreList":[]}