{"version":3,"file":"node_modules/three/examples/jsm/postprocessing/FilmPass.js","names":["ShaderMaterial","UniformsUtils","Pass","FullScreenQuad","FilmShader","FilmPass","constructor","intensity","grayscale","super","shader","this","uniforms","clone","material","name","vertexShader","fragmentShader","value","_fsQuad","render","renderer","writeBuffer","readBuffer","deltaTime","texture","renderToScreen","setRenderTarget","clear","dispose"],"sources":["node_modules/three/examples/jsm/postprocessing/FilmPass.js"],"sourcesContent":["import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { FilmShader } from '../shaders/FilmShader.js';\n\n/**\n * This pass can be used to create a film grain effect.\n *\n * ```js\n * const filmPass = new FilmPass();\n * composer.addPass( filmPass );\n * ```\n *\n * @augments Pass\n * @three_import import { FilmPass } from 'three/addons/postprocessing/FilmPass.js';\n */\nclass FilmPass extends Pass {\n\n\t/**\n\t * Constructs a new film pass.\n\t *\n\t * @param {number} [intensity=0.5] - The grain intensity in the range `[0,1]` (0 = no effect, 1 = full effect).\n\t * @param {boolean} [grayscale=false] - Whether to apply a grayscale effect or not.\n\t */\n\tconstructor( intensity = 0.5, grayscale = false ) {\n\n\t\tsuper();\n\n\t\tconst shader = FilmShader;\n\n\t\t/**\n\t\t * The pass uniforms. Use this object if you want to update the\n\t\t * `intensity` or `grayscale` values at runtime.\n\t\t * ```js\n\t\t * pass.uniforms.intensity.value = 1;\n\t\t * pass.uniforms.grayscale.value = true;\n\t\t * ```\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t/**\n\t\t * The pass material.\n\t\t *\n\t\t * @type {ShaderMaterial}\n\t\t */\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tname: shader.name,\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t\tthis.uniforms.intensity.value = intensity;\n\t\tthis.uniforms.grayscale.value = grayscale;\n\n\t\t// internals\n\n\t\tthis._fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\t/**\n\t * Performs the film pass.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( renderer, writeBuffer, readBuffer, deltaTime /*, maskActive */ ) {\n\n\t\tthis.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'time' ].value += deltaTime;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\tif ( this.clear ) renderer.clear();\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever the pass is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.material.dispose();\n\n\t\tthis._fsQuad.dispose();\n\n\t}\n\n}\n\nexport { FilmPass };\n"],"mappings":"OACCA,eACAC,kBACM,eACEC,KAAMC,mBAAsB,mBAC5BC,eAAkB,2BAa3B,MAAMC,iBAAiBH,KAQtB,WAAAI,CAAaC,EAAY,GAAKC,GAAY,GAEzCC,QAEA,MAAMC,EAASN,WAYfO,KAAKC,SAAWX,cAAcY,MAAOH,EAAOE,UAO5CD,KAAKG,SAAW,IAAId,eAAgB,CAEnCe,KAAML,EAAOK,KACbH,SAAUD,KAAKC,SACfI,aAAcN,EAAOM,aACrBC,eAAgBP,EAAOO,iBAIxBN,KAAKC,SAASL,UAAUW,MAAQX,EAChCI,KAAKC,SAASJ,UAAUU,MAAQV,EAIhCG,KAAKQ,QAAU,IAAIhB,eAAgBQ,KAAKG,SAEzC,CAaA,MAAAM,CAAQC,EAAUC,EAAaC,EAAYC,GAE1Cb,KAAKC,SAAqB,SAAEM,MAAQK,EAAWE,QAC/Cd,KAAKC,SAAiB,KAAEM,OAASM,EAE5Bb,KAAKe,gBAETL,EAASM,gBAAiB,MAC1BhB,KAAKQ,QAAQC,OAAQC,KAIrBA,EAASM,gBAAiBL,GACrBX,KAAKiB,OAAQP,EAASO,QAC3BjB,KAAKQ,QAAQC,OAAQC,GAIvB,CAMA,OAAAQ,GAEClB,KAAKG,SAASe,UAEdlB,KAAKQ,QAAQU,SAEd,SAIQxB","ignoreList":[]}