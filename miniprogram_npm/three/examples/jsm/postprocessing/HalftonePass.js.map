{"version":3,"file":"node_modules/three/examples/jsm/postprocessing/HalftonePass.js","names":["ShaderMaterial","UniformsUtils","Pass","FullScreenQuad","HalftoneShader","HalftonePass","constructor","params","super","this","uniforms","clone","material","fragmentShader","vertexShader","key","hasOwnProperty","value","_fsQuad","render","renderer","writeBuffer","readBuffer","texture","renderToScreen","setRenderTarget","clear","setSize","width","height","dispose"],"sources":["node_modules/three/examples/jsm/postprocessing/HalftonePass.js"],"sourcesContent":["import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { HalftoneShader } from '../shaders/HalftoneShader.js';\n\n/**\n * Pass for creating a RGB halftone effect.\n *\n * ```js\n * const params = {\n * \tshape: 1,\n * \tradius: 4,\n * \trotateR: Math.PI / 12,\n * \trotateB: Math.PI / 12 * 2,\n * \trotateG: Math.PI / 12 * 3,\n * \tscatter: 0,\n * \tblending: 1,\n * \tblendingMode: 1,\n * \tgreyscale: false,\n * \tdisable: false\n * };\n * const halftonePass = new HalftonePass( params );\n * composer.addPass( halftonePass );\n * ```\n *\n * @augments Pass\n * @three_import import { HalftonePass } from 'three/addons/postprocessing/HalftonePass.js';\n */\nclass HalftonePass extends Pass {\n\n\t/**\n\t * Constructs a new halftone pass.\n\t *\n\t * @param {Object} params - The halftone shader parameter.\n\t */\n\tconstructor( params ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The pass uniforms.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t \tthis.uniforms = UniformsUtils.clone( HalftoneShader.uniforms );\n\n\t\t/**\n\t\t * The pass material.\n\t\t *\n\t\t * @type {ShaderMaterial}\n\t\t */\n\t \tthis.material = new ShaderMaterial( {\n\t \t\tuniforms: this.uniforms,\n\t \t\tfragmentShader: HalftoneShader.fragmentShader,\n\t \t\tvertexShader: HalftoneShader.vertexShader\n\t \t} );\n\n\n\t\tfor ( const key in params ) {\n\n\t\t\tif ( params.hasOwnProperty( key ) && this.uniforms.hasOwnProperty( key ) ) {\n\n\t\t\t\tthis.uniforms[ key ].value = params[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// internals\n\n\t\tthis._fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\t/**\n\t * Performs the halftone pass.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive*/ ) {\n\n \t\tthis.material.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\n \t\tif ( this.renderToScreen ) {\n\n \t\t\trenderer.setRenderTarget( null );\n \t\t\tthis._fsQuad.render( renderer );\n\n\t\t} else {\n\n \t\t\trenderer.setRenderTarget( writeBuffer );\n \t\t\tif ( this.clear ) renderer.clear();\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t}\n\n \t}\n\n\t/**\n\t * Sets the size of the pass.\n\t *\n\t * @param {number} width - The width to set.\n\t * @param {number} height - The height to set.\n\t */\n \tsetSize( width, height ) {\n\n \t\tthis.uniforms.width.value = width;\n \t\tthis.uniforms.height.value = height;\n\n \t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever the pass is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.material.dispose();\n\n\t\tthis._fsQuad.dispose();\n\n\t}\n\n}\n\nexport { HalftonePass };\n"],"mappings":"OACCA,eACAC,kBACM,eACEC,KAAMC,mBAAsB,mBAC5BC,mBAAsB,+BAyB/B,MAAMC,qBAAqBH,KAO1B,WAAAI,CAAaC,GAEZC,QAOCC,KAAKC,SAAWT,cAAcU,MAAOP,eAAeM,UAOpDD,KAAKG,SAAW,IAAIZ,eAAgB,CACnCU,SAAUD,KAAKC,SACfG,eAAgBT,eAAeS,eAC/BC,aAAcV,eAAeU,eAI/B,IAAM,MAAMC,KAAOR,EAEbA,EAAOS,eAAgBD,IAASN,KAAKC,SAASM,eAAgBD,KAElEN,KAAKC,SAAUK,GAAME,MAAQV,EAAQQ,IAQvCN,KAAKS,QAAU,IAAIf,eAAgBM,KAAKG,SAEzC,CAaA,MAAAO,CAAQC,EAAUC,EAAaC,GAE7Bb,KAAKG,SAASF,SAAqB,SAAEO,MAAQK,EAAWC,QAEnDd,KAAKe,gBAETJ,EAASK,gBAAiB,MAC1BhB,KAAKS,QAAQC,OAAQC,KAIrBA,EAASK,gBAAiBJ,GACrBZ,KAAKiB,OAAQN,EAASM,QAC5BjB,KAAKS,QAAQC,OAAQC,GAItB,CAQA,OAAAO,CAASC,EAAOC,GAEfpB,KAAKC,SAASkB,MAAMX,MAAQW,EAC5BnB,KAAKC,SAASmB,OAAOZ,MAAQY,CAE9B,CAMD,OAAAC,GAECrB,KAAKG,SAASkB,UAEdrB,KAAKS,QAAQY,SAEd,SAIQzB","ignoreList":[]}