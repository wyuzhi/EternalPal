{"version":3,"file":"node_modules/three/examples/jsm/postprocessing/TAARenderPass.js","names":["HalfFloatType","WebGLRenderTarget","SSAARenderPass","TAARenderPass","constructor","scene","camera","clearColor","clearAlpha","super","this","sampleLevel","accumulate","accumulateIndex","_sampleRenderTarget","_holdRenderTarget","render","renderer","writeBuffer","readBuffer","deltaTime","jitterOffsets","_JitterVectors","width","height","type","texture","name","autoClear","getClearColor","_oldClearColor","oldClearAlpha","getClearAlpha","sampleWeight","length","_copyUniforms","value","numSamplesPerFrame","Math","pow","i","jitterOffset","setViewOffset","setRenderTarget","setClearColor","clear","_fsQuad","clearViewOffset","accumulationWeight","dispose"],"sources":["node_modules/three/examples/jsm/postprocessing/TAARenderPass.js"],"sourcesContent":["import {\n\tHalfFloatType,\n\tWebGLRenderTarget\n} from 'three';\nimport { SSAARenderPass } from './SSAARenderPass.js';\n\n/**\n *\n * Temporal Anti-Aliasing Render Pass.\n *\n * When there is no motion in the scene, the TAA render pass accumulates jittered camera\n * samples across frames to create a high quality anti-aliased result.\n *\n * Note: This effect uses no reprojection so it is no TRAA implementation.\n *\n * ```js\n * const taaRenderPass = new TAARenderPass( scene, camera );\n * taaRenderPass.unbiased = false;\n * composer.addPass( taaRenderPass );\n * ```\n *\n * @augments SSAARenderPass\n * @three_import import { TAARenderPass } from 'three/addons/postprocessing/TAARenderPass.js';\n */\nclass TAARenderPass extends SSAARenderPass {\n\n\t/**\n\t * Constructs a new TAA render pass.\n\t *\n\t * @param {Scene} scene - The scene to render.\n\t * @param {Camera} camera - The camera.\n\t * @param {?(number|Color|string)} [clearColor=0x000000] - The clear color of the render pass.\n\t * @param {?number} [clearAlpha=0] - The clear alpha of the render pass.\n\t */\n\tconstructor( scene, camera, clearColor, clearAlpha ) {\n\n\t\tsuper( scene, camera, clearColor, clearAlpha );\n\n\t\t/**\n\t\t * Overwritten and set to 0 by default.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.sampleLevel = 0;\n\n\t\t/**\n\t\t * Whether to accumulate frames or not. This enables\n\t\t * the TAA.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.accumulate = false;\n\n\t\t/**\n\t\t * The accumulation index.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -1\n\t\t */\n\t\tthis.accumulateIndex = - 1;\n\n\t\t// internals\n\n\t\tthis._sampleRenderTarget = null;\n\t\tthis._holdRenderTarget = null;\n\n\t}\n\n\t/**\n\t * Performs the TAA render pass.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( renderer, writeBuffer, readBuffer, deltaTime/*, maskActive*/ ) {\n\n\t\tif ( this.accumulate === false ) {\n\n\t\t\tsuper.render( renderer, writeBuffer, readBuffer, deltaTime );\n\n\t\t\tthis.accumulateIndex = - 1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst jitterOffsets = _JitterVectors[ 5 ];\n\n\t\tif ( this._sampleRenderTarget === null ) {\n\n\t\t\tthis._sampleRenderTarget = new WebGLRenderTarget( readBuffer.width, readBuffer.height, { type: HalfFloatType } );\n\t\t\tthis._sampleRenderTarget.texture.name = 'TAARenderPass.sample';\n\n\t\t}\n\n\t\tif ( this._holdRenderTarget === null ) {\n\n\t\t\tthis._holdRenderTarget = new WebGLRenderTarget( readBuffer.width, readBuffer.height, { type: HalfFloatType } );\n\t\t\tthis._holdRenderTarget.texture.name = 'TAARenderPass.hold';\n\n\t\t}\n\n\t\tif ( this.accumulateIndex === - 1 ) {\n\n\t\t\tsuper.render( renderer, this._holdRenderTarget, readBuffer, deltaTime );\n\n\t\t\tthis.accumulateIndex = 0;\n\n\t\t}\n\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.getClearColor( this._oldClearColor );\n\t\tconst oldClearAlpha = renderer.getClearAlpha();\n\n\t\tconst sampleWeight = 1.0 / ( jitterOffsets.length );\n\n\t\tif ( this.accumulateIndex >= 0 && this.accumulateIndex < jitterOffsets.length ) {\n\n\t\t\tthis._copyUniforms[ 'opacity' ].value = sampleWeight;\n\t\t\tthis._copyUniforms[ 'tDiffuse' ].value = writeBuffer.texture;\n\n\t\t\t// render the scene multiple times, each slightly jitter offset from the last and accumulate the results.\n\t\t\tconst numSamplesPerFrame = Math.pow( 2, this.sampleLevel );\n\t\t\tfor ( let i = 0; i < numSamplesPerFrame; i ++ ) {\n\n\t\t\t\tconst j = this.accumulateIndex;\n\t\t\t\tconst jitterOffset = jitterOffsets[ j ];\n\n\t\t\t\tif ( this.camera.setViewOffset ) {\n\n\t\t\t\t\tthis.camera.setViewOffset( readBuffer.width, readBuffer.height,\n\t\t\t\t\t\tjitterOffset[ 0 ] * 0.0625, jitterOffset[ 1 ] * 0.0625, // 0.0625 = 1 / 16\n\t\t\t\t\t\treadBuffer.width, readBuffer.height );\n\n\t\t\t\t}\n\n\t\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\t\t\t\trenderer.clear();\n\t\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t\t\trenderer.setRenderTarget( this._sampleRenderTarget );\n\t\t\t\tif ( this.accumulateIndex === 0 ) {\n\n\t\t\t\t\trenderer.setClearColor( 0x000000, 0.0 );\n\t\t\t\t\trenderer.clear();\n\n\t\t\t\t}\n\n\t\t\t\tthis._fsQuad.render( renderer );\n\n\t\t\t\tthis.accumulateIndex ++;\n\n\t\t\t\tif ( this.accumulateIndex >= jitterOffsets.length ) break;\n\n\t\t\t}\n\n\t\t\tif ( this.camera.clearViewOffset ) this.camera.clearViewOffset();\n\n\t\t}\n\n\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\t\tconst accumulationWeight = this.accumulateIndex * sampleWeight;\n\n\t\tif ( accumulationWeight > 0 ) {\n\n\t\t\tthis._copyUniforms[ 'opacity' ].value = 1.0;\n\t\t\tthis._copyUniforms[ 'tDiffuse' ].value = this._sampleRenderTarget.texture;\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\trenderer.clear();\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t}\n\n\t\tif ( accumulationWeight < 1.0 ) {\n\n\t\t\tthis._copyUniforms[ 'opacity' ].value = 1.0 - accumulationWeight;\n\t\t\tthis._copyUniforms[ 'tDiffuse' ].value = this._holdRenderTarget.texture;\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\tthis._fsQuad.render( renderer );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\t\trenderer.setClearColor( this._oldClearColor, oldClearAlpha );\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever the pass is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tsuper.dispose();\n\n\t\tif ( this._holdRenderTarget ) this._holdRenderTarget.dispose();\n\n\t}\n\n}\n\nconst _JitterVectors = [\n\t[\n\t\t[ 0, 0 ]\n\t],\n\t[\n\t\t[ 4, 4 ], [ - 4, - 4 ]\n\t],\n\t[\n\t\t[ - 2, - 6 ], [ 6, - 2 ], [ - 6, 2 ], [ 2, 6 ]\n\t],\n\t[\n\t\t[ 1, - 3 ], [ - 1, 3 ], [ 5, 1 ], [ - 3, - 5 ],\n\t\t[ - 5, 5 ], [ - 7, - 1 ], [ 3, 7 ], [ 7, - 7 ]\n\t],\n\t[\n\t\t[ 1, 1 ], [ - 1, - 3 ], [ - 3, 2 ], [ 4, - 1 ],\n\t\t[ - 5, - 2 ], [ 2, 5 ], [ 5, 3 ], [ 3, - 5 ],\n\t\t[ - 2, 6 ], [ 0, - 7 ], [ - 4, - 6 ], [ - 6, 4 ],\n\t\t[ - 8, 0 ], [ 7, - 4 ], [ 6, 7 ], [ - 7, - 8 ]\n\t],\n\t[\n\t\t[ - 4, - 7 ], [ - 7, - 5 ], [ - 3, - 5 ], [ - 5, - 4 ],\n\t\t[ - 1, - 4 ], [ - 2, - 2 ], [ - 6, - 1 ], [ - 4, 0 ],\n\t\t[ - 7, 1 ], [ - 1, 2 ], [ - 6, 3 ], [ - 3, 3 ],\n\t\t[ - 7, 6 ], [ - 3, 6 ], [ - 5, 7 ], [ - 1, 7 ],\n\t\t[ 5, - 7 ], [ 1, - 6 ], [ 6, - 5 ], [ 4, - 4 ],\n\t\t[ 2, - 3 ], [ 7, - 2 ], [ 1, - 1 ], [ 4, - 1 ],\n\t\t[ 2, 1 ], [ 6, 2 ], [ 0, 4 ], [ 4, 4 ],\n\t\t[ 2, 5 ], [ 7, 5 ], [ 5, 6 ], [ 3, 7 ]\n\t]\n];\n\nexport { TAARenderPass };\n"],"mappings":"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","ignoreList":[]}