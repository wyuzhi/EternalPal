{"version":3,"file":"node_modules/three/examples/jsm/postprocessing/TexturePass.js","names":["ShaderMaterial","UniformsUtils","Pass","FullScreenQuad","CopyShader","TexturePass","constructor","map","opacity","super","shader","this","needsSwap","uniforms","clone","material","vertexShader","fragmentShader","depthTest","depthWrite","premultipliedAlpha","_fsQuad","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","value","transparent","setRenderTarget","renderToScreen","clear","dispose"],"sources":["node_modules/three/examples/jsm/postprocessing/TexturePass.js"],"sourcesContent":["import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { CopyShader } from '../shaders/CopyShader.js';\n\n/**\n * This pass can be used to render a texture over the entire screen.\n *\n * ```js\n * const texture = new THREE.TextureLoader().load( 'textures/2294472375_24a3b8ef46_o.jpg' );\n * texture.colorSpace = THREE.SRGBColorSpace;\n *\n * const texturePass = new TexturePass( texture );\n * composer.addPass( texturePass );\n * ```\n *\n * @augments Pass\n * @three_import import { TexturePass } from 'three/addons/postprocessing/TexturePass.js';\n */\nclass TexturePass extends Pass {\n\n\t/**\n\t * Constructs a new texture pass.\n\t *\n\t * @param {Texture} map - The texture to render.\n\t * @param {number} [opacity=1] - The opacity.\n\t */\n\tconstructor( map, opacity = 1 ) {\n\n\t\tsuper();\n\n\t\tconst shader = CopyShader;\n\n\t\t/**\n\t\t * The texture to render.\n\t\t *\n\t\t * @type {Texture}\n\t\t */\n\t\tthis.map = map;\n\n\t\t/**\n\t\t * The opacity.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.opacity = opacity;\n\n\t\t/**\n\t\t * Overwritten to disable the swap.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.needsSwap = false;\n\n\t\t/**\n\t\t * The pass uniforms.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t/**\n\t\t * The pass material.\n\t\t *\n\t\t * @type {ShaderMaterial}\n\t\t */\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tpremultipliedAlpha: true\n\n\t\t} );\n\n\t\t// internals\n\n\t\tthis._fsQuad = new FullScreenQuad( null );\n\n\t}\n\n\t/**\n\t * Performs the texture pass.\n\t *\n\t * @param {WebGLRenderer} renderer - The renderer.\n\t * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n\t * destination for the pass.\n\t * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n\t * previous pass from this buffer.\n\t * @param {number} deltaTime - The delta time in seconds.\n\t * @param {boolean} maskActive - Whether masking is active or not.\n\t */\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis._fsQuad.material = this.material;\n\n\t\tthis.uniforms[ 'opacity' ].value = this.opacity;\n\t\tthis.uniforms[ 'tDiffuse' ].value = this.map;\n\t\tthis.material.transparent = ( this.opacity < 1.0 );\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\tthis._fsQuad.render( renderer );\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever the pass is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.material.dispose();\n\t\tthis._fsQuad.dispose();\n\n\t}\n\n}\n\nexport { TexturePass };\n"],"mappings":"OACCA,eACAC,kBACM,eACEC,KAAMC,mBAAsB,mBAC5BC,eAAkB,2BAgB3B,MAAMC,oBAAoBH,KAQzB,WAAAI,CAAaC,EAAKC,EAAU,GAE3BC,QAEA,MAAMC,EAASN,WAOfO,KAAKJ,IAAMA,EAQXI,KAAKH,QAAUA,EAQfG,KAAKC,WAAY,EAOjBD,KAAKE,SAAWZ,cAAca,MAAOJ,EAAOG,UAO5CF,KAAKI,SAAW,IAAIf,eAAgB,CAEnCa,SAAUF,KAAKE,SACfG,aAAcN,EAAOM,aACrBC,eAAgBP,EAAOO,eACvBC,WAAW,EACXC,YAAY,EACZC,oBAAoB,IAMrBT,KAAKU,QAAU,IAAIlB,eAAgB,KAEpC,CAaA,MAAAmB,CAAQC,EAAUC,EAAaC,GAE9B,MAAMC,EAAeH,EAASI,UAC9BJ,EAASI,WAAY,EAErBhB,KAAKU,QAAQN,SAAWJ,KAAKI,SAE7BJ,KAAKE,SAAoB,QAAEe,MAAQjB,KAAKH,QACxCG,KAAKE,SAAqB,SAAEe,MAAQjB,KAAKJ,IACzCI,KAAKI,SAASc,YAAgBlB,KAAKH,QAAU,EAE7Ce,EAASO,gBAAiBnB,KAAKoB,eAAiB,KAAON,GAClDd,KAAKqB,OAAQT,EAASS,QAC3BrB,KAAKU,QAAQC,OAAQC,GAErBA,EAASI,UAAYD,CAEtB,CAMA,OAAAO,GAECtB,KAAKI,SAASkB,UACdtB,KAAKU,QAAQY,SAEd,SAIQ5B","ignoreList":[]}