{"version":3,"file":"node_modules/three/examples/jsm/renderers/Projector.js","names":["Box3","Color","DoubleSide","Frustum","Matrix3","Matrix4","Vector2","Vector3","Vector4","RenderableObject","constructor","this","id","object","z","renderOrder","RenderableFace","v1","RenderableVertex","v2","v3","normalModel","vertexNormalsModel","vertexNormalsLength","color","material","uvs","position","positionWorld","positionScreen","visible","copy","vertex","RenderableLine","vertexColors","RenderableSprite","x","y","rotation","scale","Projector","_object","_objectCount","_vertex","_vertexCount","_face","_faceCount","_line","_lineCount","_sprite","_spriteCount","_modelMatrix","_objectPoolLength","_vertexPoolLength","_facePoolLength","_linePoolLength","_spritePoolLength","_renderData","objects","lights","elements","_vector3","_vector4","_clipBox","_boundingBox","_points3","Array","_viewMatrix","_viewProjectionMatrix","_modelViewProjectionMatrix","_frustum","_objectPool","_vertexPool","_facePool","_linePool","_spritePool","renderList","normals","colors","normalMatrix","projectVertex","applyMatrix4","invW","w","checkTriangleVisibility","intersectsBox","setFromPoints","checkBackfaceCulling","setObject","value","getNormalMatrix","matrixWorld","length","pushVertex","push","getNextVertexInPool","set","pushNormal","pushColor","r","g","b","pushUv","pushLine","a","s1","s2","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","Math","max","min","lerp","clipLine","multiplyScalar","line","getNextLineInPool","fromArray","pushTriangle","c","side","face","getNextFaceInPool","subVectors","cross","applyMatrix3","normalize","i","normal","arguments","projectObject","isLight","isMesh","isLine","isPoints","frustumCulled","intersectsObject","addObject","isSprite","intersectsSprite","children","l","getNextObjectInPool","setFromMatrixPosition","pushPoint","camera","sprite","getNextSpriteInPool","abs","projectionMatrix","painterSort","projectScene","scene","sortObjects","sortElements","matrixWorldAutoUpdate","updateMatrixWorld","parent","matrixWorldInverse","multiplyMatrices","setFromProjectionMatrix","sort","o","ol","geometry","isMultiMaterial","isArray","attributes","groups","undefined","positions","array","morphTargets","morphAttributes","morphTargetsRelative","morphInfluences","morphTargetInfluences","t","tl","influence","target","getX","getY","getZ","uv","index","indices","group","materialIndex","start","count","step","isLineSegments","modelViewMatrix"],"sources":["node_modules/three/examples/jsm/renderers/Projector.js"],"sourcesContent":["import {\n\tBox3,\n\tColor,\n\tDoubleSide,\n\tFrustum,\n\tMatrix3,\n\tMatrix4,\n\tVector2,\n\tVector3,\n\tVector4\n} from 'three';\n\nclass RenderableObject {\n\n\tconstructor() {\n\n\t\tthis.id = 0;\n\n\t\tthis.object = null;\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\n\t}\n\n}\n\n//\n\nclass RenderableFace {\n\n\tconstructor() {\n\n\t\tthis.id = 0;\n\n\t\tthis.v1 = new RenderableVertex();\n\t\tthis.v2 = new RenderableVertex();\n\t\tthis.v3 = new RenderableVertex();\n\n\t\tthis.normalModel = new Vector3();\n\n\t\tthis.vertexNormalsModel = [ new Vector3(), new Vector3(), new Vector3() ];\n\t\tthis.vertexNormalsLength = 0;\n\n\t\tthis.color = new Color();\n\t\tthis.material = null;\n\t\tthis.uvs = [ new Vector2(), new Vector2(), new Vector2() ];\n\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\n\t}\n\n}\n\n//\n\nclass RenderableVertex {\n\n\tconstructor() {\n\n\t\tthis.position = new Vector3();\n\t\tthis.positionWorld = new Vector3();\n\t\tthis.positionScreen = new Vector4();\n\n\t\tthis.visible = true;\n\n\t}\n\n\tcopy( vertex ) {\n\n\t\tthis.positionWorld.copy( vertex.positionWorld );\n\t\tthis.positionScreen.copy( vertex.positionScreen );\n\n\t}\n\n}\n\n//\n\nclass RenderableLine {\n\n\tconstructor() {\n\n\t\tthis.id = 0;\n\n\t\tthis.v1 = new RenderableVertex();\n\t\tthis.v2 = new RenderableVertex();\n\n\t\tthis.vertexColors = [ new Color(), new Color() ];\n\t\tthis.material = null;\n\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\n\t}\n\n}\n\n//\n\nclass RenderableSprite {\n\n\tconstructor() {\n\n\t\tthis.id = 0;\n\n\t\tthis.object = null;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\n\t\tthis.rotation = 0;\n\t\tthis.scale = new Vector2();\n\n\t\tthis.material = null;\n\t\tthis.renderOrder = 0;\n\n\t}\n\n}\n\n/**\n * This class can project a given scene in 3D space into a 2D representation\n * used for rendering with a 2D API. `Projector` is currently used by {@link SVGRenderer}\n * and was previously used by the legacy `CanvasRenderer`.\n *\n * @three_import import { Projector } from 'three/addons/renderers/Projector.js';\n */\nclass Projector {\n\n\t/**\n\t * Constructs a new projector.\n\t */\n\tconstructor() {\n\n\t\tlet _object, _objectCount, _objectPoolLength = 0,\n\t\t\t_vertex, _vertexCount, _vertexPoolLength = 0,\n\t\t\t_face, _faceCount, _facePoolLength = 0,\n\t\t\t_line, _lineCount, _linePoolLength = 0,\n\t\t\t_sprite, _spriteCount, _spritePoolLength = 0,\n\t\t\t_modelMatrix;\n\n\t\tconst\n\n\t\t\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t\t\t_vector3 = new Vector3(),\n\t\t\t_vector4 = new Vector4(),\n\n\t\t\t_clipBox = new Box3( new Vector3( - 1, - 1, - 1 ), new Vector3( 1, 1, 1 ) ),\n\t\t\t_boundingBox = new Box3(),\n\t\t\t_points3 = new Array( 3 ),\n\n\t\t\t_viewMatrix = new Matrix4(),\n\t\t\t_viewProjectionMatrix = new Matrix4(),\n\n\t\t\t_modelViewProjectionMatrix = new Matrix4(),\n\n\t\t\t_frustum = new Frustum(),\n\n\t\t\t_objectPool = [], _vertexPool = [], _facePool = [], _linePool = [], _spritePool = [];\n\n\t\t//\n\n\t\tfunction RenderList() {\n\n\t\t\tconst normals = [];\n\t\t\tconst colors = [];\n\t\t\tconst uvs = [];\n\n\t\t\tlet object = null;\n\n\t\t\tconst normalMatrix = new Matrix3();\n\n\t\t\tfunction setObject( value ) {\n\n\t\t\t\tobject = value;\n\n\t\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\t\tnormals.length = 0;\n\t\t\t\tcolors.length = 0;\n\t\t\t\tuvs.length = 0;\n\n\t\t\t}\n\n\t\t\tfunction projectVertex( vertex ) {\n\n\t\t\t\tconst position = vertex.position;\n\t\t\t\tconst positionWorld = vertex.positionWorld;\n\t\t\t\tconst positionScreen = vertex.positionScreen;\n\n\t\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tconst invW = 1 / positionScreen.w;\n\n\t\t\t\tpositionScreen.x *= invW;\n\t\t\t\tpositionScreen.y *= invW;\n\t\t\t\tpositionScreen.z *= invW;\n\n\t\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n\t\t\t}\n\n\t\t\tfunction pushVertex( x, y, z ) {\n\n\t\t\t\t_vertex = getNextVertexInPool();\n\t\t\t\t_vertex.position.set( x, y, z );\n\n\t\t\t\tprojectVertex( _vertex );\n\n\t\t\t}\n\n\t\t\tfunction pushNormal( x, y, z ) {\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t\tfunction pushColor( r, g, b ) {\n\n\t\t\t\tcolors.push( r, g, b );\n\n\t\t\t}\n\n\t\t\tfunction pushUv( x, y ) {\n\n\t\t\t\tuvs.push( x, y );\n\n\t\t\t}\n\n\t\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\n\t\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n\t\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t\t_points3[ 2 ] = v3.positionScreen;\n\n\t\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\n\t\t\t}\n\n\t\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\n\t\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n\t\t\t}\n\n\t\t\tfunction pushLine( a, b ) {\n\n\t\t\t\tconst v1 = _vertexPool[ a ];\n\t\t\t\tconst v2 = _vertexPool[ b ];\n\n\t\t\t\t// Clip\n\n\t\t\t\tv1.positionScreen.copy( v1.position ).applyMatrix4( _modelViewProjectionMatrix );\n\t\t\t\tv2.positionScreen.copy( v2.position ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\tif ( clipLine( v1.positionScreen, v2.positionScreen ) === true ) {\n\n\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\tv1.positionScreen.multiplyScalar( 1 / v1.positionScreen.w );\n\t\t\t\t\tv2.positionScreen.multiplyScalar( 1 / v2.positionScreen.w );\n\n\t\t\t\t\t_line = getNextLineInPool();\n\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t_line.v1.copy( v1 );\n\t\t\t\t\t_line.v2.copy( v2 );\n\t\t\t\t\t_line.z = Math.max( v1.positionScreen.z, v2.positionScreen.z );\n\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\tif ( object.material.vertexColors ) {\n\n\t\t\t\t\t\t_line.vertexColors[ 0 ].fromArray( colors, a * 3 );\n\t\t\t\t\t\t_line.vertexColors[ 1 ].fromArray( colors, b * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction pushTriangle( a, b, c, material ) {\n\n\t\t\t\tconst v1 = _vertexPool[ a ];\n\t\t\t\tconst v2 = _vertexPool[ b ];\n\t\t\t\tconst v3 = _vertexPool[ c ];\n\n\t\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n\t\t\t\tif ( material.side === DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t// face normal\n\t\t\t\t\t_vector3.subVectors( v3.position, v2.position );\n\t\t\t\t\t_vector4.subVectors( v1.position, v2.position );\n\t\t\t\t\t_vector3.cross( _vector4 );\n\t\t\t\t\t_face.normalModel.copy( _vector3 );\n\t\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tconst normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t\tconst uv = _face.uvs[ i ];\n\t\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\tif ( material.vertexColors ) {\n\n\t\t\t\t\t\t_face.color.fromArray( colors, a * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsetObject: setObject,\n\t\t\t\tprojectVertex: projectVertex,\n\t\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\t\tpushVertex: pushVertex,\n\t\t\t\tpushNormal: pushNormal,\n\t\t\t\tpushColor: pushColor,\n\t\t\t\tpushUv: pushUv,\n\t\t\t\tpushLine: pushLine,\n\t\t\t\tpushTriangle: pushTriangle\n\t\t\t};\n\n\t\t}\n\n\t\tconst renderList = new RenderList();\n\n\t\tfunction projectObject( object ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\t_renderData.lights.push( object );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\n\t\t\t\taddObject( object );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\n\t\t\t\taddObject( object );\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addObject( object ) {\n\n\t\t\t_object = getNextObjectInPool();\n\t\t\t_object.id = object.id;\n\t\t\t_object.object = object;\n\n\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t_vector3.applyMatrix4( _viewProjectionMatrix );\n\t\t\t_object.z = _vector3.z;\n\t\t\t_object.renderOrder = object.renderOrder;\n\n\t\t\t_renderData.objects.push( _object );\n\n\t\t}\n\n\t\t/**\n\t\t * Projects the given scene in 3D space into a 2D representation. The result\n\t\t * is an object with renderable items.\n\t\t *\n\t\t * @param {Object3D} scene - A scene or any other type of 3D object.\n\t\t * @param {Camera} camera - The camera.\n\t\t * @param {boolean} sortObjects - Whether to sort objects or not.\n\t\t * @param {boolean} sortElements - Whether to sort elements (faces, lines and sprites) or not.\n\t\t * @return {{objects:Array<Objects>,lights:Array<Objects>,elements:Array<Objects>}} The projected scene as renderable objects.\n\t\t */\n\t\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n\t\t\t_faceCount = 0;\n\t\t\t_lineCount = 0;\n\t\t\t_spriteCount = 0;\n\n\t\t\t_renderData.elements.length = 0;\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\t_viewMatrix.copy( camera.matrixWorldInverse );\n\t\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t\t_frustum.setFromProjectionMatrix( _viewProjectionMatrix );\n\n\t\t\t//\n\n\t\t\t_objectCount = 0;\n\n\t\t\t_renderData.objects.length = 0;\n\t\t\t_renderData.lights.length = 0;\n\n\t\t\tprojectObject( scene );\n\n\t\t\tif ( sortObjects === true ) {\n\n\t\t\t\t_renderData.objects.sort( painterSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst objects = _renderData.objects;\n\n\t\t\tfor ( let o = 0, ol = objects.length; o < ol; o ++ ) {\n\n\t\t\t\tconst object = objects[ o ].object;\n\t\t\t\tconst geometry = object.geometry;\n\n\t\t\t\trenderList.setObject( object );\n\n\t\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t\t_vertexCount = 0;\n\n\t\t\t\tif ( object.isMesh ) {\n\n\t\t\t\t\tlet material = object.material;\n\n\t\t\t\t\tconst isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\n\t\t\t\t\tconst positions = attributes.position.array;\n\n\t\t\t\t\tfor ( let i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\tlet x = positions[ i ];\n\t\t\t\t\t\tlet y = positions[ i + 1 ];\n\t\t\t\t\t\tlet z = positions[ i + 2 ];\n\n\t\t\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\n\t\t\t\t\t\tif ( morphTargets !== undefined ) {\n\n\t\t\t\t\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\t\t\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( let t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tconst influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tconst target = morphTargets[ t ];\n\n\t\t\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t\t\tx += target.getX( i / 3 ) * influence;\n\t\t\t\t\t\t\t\t\ty += target.getY( i / 3 ) * influence;\n\t\t\t\t\t\t\t\t\tz += target.getZ( i / 3 ) * influence;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tx += ( target.getX( i / 3 ) - positions[ i ] ) * influence;\n\t\t\t\t\t\t\t\t\ty += ( target.getY( i / 3 ) - positions[ i + 1 ] ) * influence;\n\t\t\t\t\t\t\t\t\tz += ( target.getZ( i / 3 ) - positions[ i + 2 ] ) * influence;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( x, y, z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\n\t\t\t\t\t\tconst normals = attributes.normal.array;\n\n\t\t\t\t\t\tfor ( let i = 0, l = normals.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.color !== undefined ) {\n\n\t\t\t\t\t\tconst colors = attributes.color.array;\n\n\t\t\t\t\t\tfor ( let i = 0, l = colors.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tconst uvs = attributes.uv.array;\n\n\t\t\t\t\t\tfor ( let i = 0, l = uvs.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\tconst indices = geometry.index.array;\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( let g = 0; g < groups.length; g ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ g ];\n\n\t\t\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t\t\t ? object.material[ group.materialIndex ]\n\t\t\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\t\t\tfor ( let i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ], material );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ], material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( let g = 0; g < groups.length; g ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ g ];\n\n\t\t\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t\t\t ? object.material[ group.materialIndex ]\n\t\t\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\t\t\tfor ( let i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2, material );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2, material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\t\tconst attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tconst positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( let i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attributes.color !== undefined ) {\n\n\t\t\t\t\t\t\tconst colors = attributes.color.array;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = colors.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tconst indices = geometry.index.array;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = indices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst step = object.isLineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\t\tconst attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tconst positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( let i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t_vector4.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ], 1 );\n\t\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( sortElements === true ) {\n\n\t\t\t\t_renderData.elements.sort( painterSort );\n\n\t\t\t}\n\n\t\t\treturn _renderData;\n\n\t\t};\n\n\t\tfunction pushPoint( _vector4, object, camera ) {\n\n\t\t\tconst invW = 1 / _vector4.w;\n\n\t\t\t_vector4.z *= invW;\n\n\t\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n\t\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t\t_sprite.id = object.id;\n\t\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t\t_sprite.z = _vector4.z;\n\t\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t\t_sprite.object = object;\n\n\t\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n\t\t\t\t_sprite.material = object.material;\n\n\t\t\t\t_renderData.elements.push( _sprite );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Pools\n\n\t\tfunction getNextObjectInPool() {\n\n\t\t\tif ( _objectCount === _objectPoolLength ) {\n\n\t\t\t\tconst object = new RenderableObject();\n\t\t\t\t_objectPool.push( object );\n\t\t\t\t_objectPoolLength ++;\n\t\t\t\t_objectCount ++;\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t\treturn _objectPool[ _objectCount ++ ];\n\n\t\t}\n\n\t\tfunction getNextVertexInPool() {\n\n\t\t\tif ( _vertexCount === _vertexPoolLength ) {\n\n\t\t\t\tconst vertex = new RenderableVertex();\n\t\t\t\t_vertexPool.push( vertex );\n\t\t\t\t_vertexPoolLength ++;\n\t\t\t\t_vertexCount ++;\n\t\t\t\treturn vertex;\n\n\t\t\t}\n\n\t\t\treturn _vertexPool[ _vertexCount ++ ];\n\n\t\t}\n\n\t\tfunction getNextFaceInPool() {\n\n\t\t\tif ( _faceCount === _facePoolLength ) {\n\n\t\t\t\tconst face = new RenderableFace();\n\t\t\t\t_facePool.push( face );\n\t\t\t\t_facePoolLength ++;\n\t\t\t\t_faceCount ++;\n\t\t\t\treturn face;\n\n\t\t\t}\n\n\t\t\treturn _facePool[ _faceCount ++ ];\n\n\n\t\t}\n\n\t\tfunction getNextLineInPool() {\n\n\t\t\tif ( _lineCount === _linePoolLength ) {\n\n\t\t\t\tconst line = new RenderableLine();\n\t\t\t\t_linePool.push( line );\n\t\t\t\t_linePoolLength ++;\n\t\t\t\t_lineCount ++;\n\t\t\t\treturn line;\n\n\t\t\t}\n\n\t\t\treturn _linePool[ _lineCount ++ ];\n\n\t\t}\n\n\t\tfunction getNextSpriteInPool() {\n\n\t\t\tif ( _spriteCount === _spritePoolLength ) {\n\n\t\t\t\tconst sprite = new RenderableSprite();\n\t\t\t\t_spritePool.push( sprite );\n\t\t\t\t_spritePoolLength ++;\n\t\t\t\t_spriteCount ++;\n\t\t\t\treturn sprite;\n\n\t\t\t}\n\n\t\t\treturn _spritePool[ _spriteCount ++ ];\n\n\t\t}\n\n\t\t//\n\n\t\tfunction painterSort( a, b ) {\n\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t\t} else if ( a.z !== b.z ) {\n\n\t\t\t\treturn b.z - a.z;\n\n\t\t\t} else if ( a.id !== b.id ) {\n\n\t\t\t\treturn a.id - b.id;\n\n\t\t\t} else {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction clipLine( s1, s2 ) {\n\n\t\t\tlet alpha1 = 0, alpha2 = 1;\n\n\t\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t\t// Z = -1 and Z = +1, respectively.\n\n\t\t\tconst bc1near = s1.z + s1.w,\n\t\t\t\tbc2near = s2.z + s2.w,\n\t\t\t\tbc1far = - s1.z + s1.w,\n\t\t\t\tbc2far = - s2.z + s2.w;\n\n\t\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n\t\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\t\treturn true;\n\n\t\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n\t\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\t\tif ( bc1near < 0 ) {\n\n\t\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t\t} else if ( bc2near < 0 ) {\n\n\t\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bc1far < 0 ) {\n\n\t\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t\t} else if ( bc2far < 0 ) {\n\n\t\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( alpha2 < alpha1 ) {\n\n\t\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\t\treturn false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { RenderableObject, RenderableFace, RenderableVertex, RenderableLine, RenderableSprite, Projector };\n"],"mappings":"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","ignoreList":[]}