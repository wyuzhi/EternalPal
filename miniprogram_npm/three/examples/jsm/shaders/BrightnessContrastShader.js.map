{"version":3,"file":"node_modules/three/examples/jsm/shaders/BrightnessContrastShader.js","names":["BrightnessContrastShader","name","uniforms","tDiffuse","value","brightness","contrast","vertexShader","fragmentShader"],"sources":["node_modules/three/examples/jsm/shaders/BrightnessContrastShader.js"],"sourcesContent":["/**\n * @module BrightnessContrastShader\n * @three_import import { BrightnessContrastShader } from 'three/addons/shaders/BrightnessContrastShader.js';\n */\n\n/**\n * Brightness and contrast adjustment {@link https://github.com/evanw/glfx.js}.\n * Brightness: -1 to 1 (-1 is solid black, 0 is no change, and 1 is solid white)\n * Contrast: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst BrightnessContrastShader = {\n\n\tname: 'BrightnessContrastShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'brightness': { value: 0 },\n\t\t'contrast': { value: 0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float brightness;\n\t\tuniform float contrast;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\n\t\t\tgl_FragColor.rgb += brightness;\n\n\t\t\tif (contrast > 0.0) {\n\t\t\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\n\t\t\t} else {\n\t\t\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\n\t\t\t}\n\n\t\t}`\n\n};\n\nexport { BrightnessContrastShader };\n"],"mappings":"AAaA,MAAMA,yBAA2B,CAEhCC,KAAM,2BAENC,SAAU,CAETC,SAAY,CAAEC,MAAO,MACrBC,WAAc,CAAED,MAAO,GACvBE,SAAY,CAAEF,MAAO,IAItBG,aAAwB,gKAYxBC,eAA0B,odAwBlBR","ignoreList":[]}