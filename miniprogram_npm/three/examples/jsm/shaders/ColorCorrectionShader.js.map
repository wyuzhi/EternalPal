{"version":3,"file":"node_modules/three/examples/jsm/shaders/ColorCorrectionShader.js","names":["Vector3","ColorCorrectionShader","name","uniforms","tDiffuse","value","powRGB","mulRGB","addRGB","vertexShader","fragmentShader"],"sources":["node_modules/three/examples/jsm/shaders/ColorCorrectionShader.js"],"sourcesContent":["import {\n\tVector3\n} from 'three';\n\n/**\n * @module ColorCorrectionShader\n * @three_import import { ColorCorrectionShader } from 'three/addons/shaders/ColorCorrectionShader.js';\n */\n\n/**\n * Color correction shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst ColorCorrectionShader = {\n\n\tname: 'ColorCorrectionShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'powRGB': { value: new Vector3( 2, 2, 2 ) },\n\t\t'mulRGB': { value: new Vector3( 1, 1, 1 ) },\n\t\t'addRGB': { value: new Vector3( 0, 0, 0 ) }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 powRGB;\n\t\tuniform vec3 mulRGB;\n\t\tuniform vec3 addRGB;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\n\n\t\t}`\n\n};\n\nexport { ColorCorrectionShader };\n"],"mappings":"OACCA,YACM,QAaP,MAAMC,sBAAwB,CAE7BC,KAAM,wBAENC,SAAU,CAETC,SAAY,CAAEC,MAAO,MACrBC,OAAU,CAAED,MAAO,IAAIL,QAAS,EAAG,EAAG,IACtCO,OAAU,CAAEF,MAAO,IAAIL,QAAS,EAAG,EAAG,IACtCQ,OAAU,CAAEH,MAAO,IAAIL,QAAS,EAAG,EAAG,KAIvCS,aAAwB,gKAYxBC,eAA0B,wTAkBlBT","ignoreList":[]}