{"version":3,"file":"node_modules/three/examples/jsm/shaders/ExposureShader.js","names":["ExposureShader","name","uniforms","tDiffuse","value","exposure","vertexShader","fragmentShader"],"sources":["node_modules/three/examples/jsm/shaders/ExposureShader.js"],"sourcesContent":["/**\n * @module ExposureShader\n * @three_import import { ExposureShader } from 'three/addons/shaders/ExposureShader.js';\n */\n\n/**\n * TODO\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst ExposureShader = {\n\n\tname: 'ExposureShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'exposure': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float exposure;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor.rgb *= exposure;\n\n\t\t}`\n\n};\n\nexport { ExposureShader };\n"],"mappings":"AAWA,MAAMA,eAAiB,CAEtBC,KAAM,iBAENC,SAAU,CAETC,SAAY,CAAEC,MAAO,MACrBC,SAAY,CAAED,MAAO,IAItBE,aAAwB,8JAWxBC,eAA0B,6NAiBlBP","ignoreList":[]}