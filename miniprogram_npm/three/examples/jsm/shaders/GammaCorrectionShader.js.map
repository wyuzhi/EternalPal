{"version":3,"file":"node_modules/three/examples/jsm/shaders/GammaCorrectionShader.js","names":["GammaCorrectionShader","name","uniforms","tDiffuse","value","vertexShader","fragmentShader"],"sources":["node_modules/three/examples/jsm/shaders/GammaCorrectionShader.js"],"sourcesContent":["/**\n * @module GammaCorrectionShader\n * @three_import import { GammaCorrectionShader } from 'three/addons/shaders/GammaCorrectionShader.js';\n */\n\n/**\n * Gamma Correction Shader\n *\n * References:\n * - {@link http://en.wikipedia.org/wiki/gamma_correction}.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst GammaCorrectionShader = {\n\n\tname: 'GammaCorrectionShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 tex = texture2D( tDiffuse, vUv );\n\n\t\t\tgl_FragColor = sRGBTransferOETF( tex );\n\n\t\t}`\n\n};\n\nexport { GammaCorrectionShader };\n"],"mappings":"AAcA,MAAMA,sBAAwB,CAE7BC,KAAM,wBAENC,SAAU,CAETC,SAAY,CAAEC,MAAO,OAItBC,aAAwB,8JAWxBC,eAA0B,sMAgBlBN","ignoreList":[]}