{"version":3,"file":"node_modules/three/examples/jsm/shaders/HueSaturationShader.js","names":["HueSaturationShader","name","uniforms","tDiffuse","value","hue","saturation","vertexShader","fragmentShader"],"sources":["node_modules/three/examples/jsm/shaders/HueSaturationShader.js"],"sourcesContent":["/**\n * @module HueSaturationShader\n * @three_import import { HueSaturationShader } from 'three/addons/shaders/HueSaturationShader.js';\n */\n\n/**\n * Hue and saturation adjustment, {@link https://github.com/evanw/glfx.js}.\n *\n * hue: -1 to 1 (-1 is 180 degrees in the negative direction, 0 is no change, etc.\n * saturation: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst HueSaturationShader = {\n\n\tname: 'HueSaturationShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'hue': { value: 0 },\n\t\t'saturation': { value: 0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float hue;\n\t\tuniform float saturation;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\n\t\t\t// hue\n\t\t\tfloat angle = hue * 3.14159265;\n\t\t\tfloat s = sin(angle), c = cos(angle);\n\t\t\tvec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\n\t\t\tfloat len = length(gl_FragColor.rgb);\n\t\t\tgl_FragColor.rgb = vec3(\n\t\t\t\tdot(gl_FragColor.rgb, weights.xyz),\n\t\t\t\tdot(gl_FragColor.rgb, weights.zxy),\n\t\t\t\tdot(gl_FragColor.rgb, weights.yzx)\n\t\t\t);\n\n\t\t\t// saturation\n\t\t\tfloat average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\n\t\t\tif (saturation > 0.0) {\n\t\t\t\tgl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\n\t\t\t} else {\n\t\t\t\tgl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\n\t\t\t}\n\n\t\t}`\n\n};\n\nexport { HueSaturationShader };\n"],"mappings":"AAcA,MAAMA,oBAAsB,CAE3BC,KAAM,sBAENC,SAAU,CAETC,SAAY,CAAEC,MAAO,MACrBC,IAAO,CAAED,MAAO,GAChBE,WAAc,CAAEF,MAAO,IAIxBG,aAAwB,gKAYxBC,eAA0B,s7BAmClBR","ignoreList":[]}