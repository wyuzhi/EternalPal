{"version":3,"file":"node_modules/three/examples/jsm/shaders/KaleidoShader.js","names":["KaleidoShader","name","uniforms","tDiffuse","value","sides","angle","vertexShader","fragmentShader"],"sources":["node_modules/three/examples/jsm/shaders/KaleidoShader.js"],"sourcesContent":["/**\n * @module KaleidoShader\n * @three_import import { KaleidoShader } from 'three/addons/shaders/KaleidoShader.js';\n */\n\n/**\n * Kaleidoscope Shader.\n * Radial reflection around center point\n * Ported from: {@link http://pixelshaders.com/editor/}\n * by [Toby Schachman]{@link http://tobyschachman.com/}\n *\n * sides: number of reflections\n * angle: initial angle in radians\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst KaleidoShader = {\n\n\tname: 'KaleidoShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'sides': { value: 6.0 },\n\t\t'angle': { value: 0.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float sides;\n\t\tuniform float angle;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec2 p = vUv - 0.5;\n\t\t\tfloat r = length(p);\n\t\t\tfloat a = atan(p.y, p.x) + angle;\n\t\t\tfloat tau = 2. * 3.1416 ;\n\t\t\ta = mod(a, tau/sides);\n\t\t\ta = abs(a - tau/sides/2.) ;\n\t\t\tp = r * vec2(cos(a), sin(a));\n\t\t\tvec4 color = texture2D(tDiffuse, p + 0.5);\n\t\t\tgl_FragColor = color;\n\n\t\t}`\n\n};\n\nexport { KaleidoShader };\n"],"mappings":"AAiBA,MAAMA,cAAgB,CAErBC,KAAM,gBAENC,SAAU,CAETC,SAAY,CAAEC,MAAO,MACrBC,MAAS,CAAED,MAAO,GAClBE,MAAS,CAAEF,MAAO,IAInBG,aAAwB,8JAWxBC,eAA0B,idAwBlBR","ignoreList":[]}