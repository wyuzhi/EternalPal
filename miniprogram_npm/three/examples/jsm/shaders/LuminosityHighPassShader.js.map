{"version":3,"file":"node_modules/three/examples/jsm/shaders/LuminosityHighPassShader.js","names":["Color","LuminosityHighPassShader","name","uniforms","tDiffuse","value","luminosityThreshold","smoothWidth","defaultColor","defaultOpacity","vertexShader","fragmentShader"],"sources":["node_modules/three/examples/jsm/shaders/LuminosityHighPassShader.js"],"sourcesContent":["import {\n\tColor\n} from 'three';\n\n/**\n * @module LuminosityHighPassShader\n * @three_import import { LuminosityHighPassShader } from 'three/addons/shaders/LuminosityHighPassShader.js';\n */\n\n/**\n * Luminosity high pass shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst LuminosityHighPassShader = {\n\n\tname: 'LuminosityHighPassShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'luminosityThreshold': { value: 1.0 },\n\t\t'smoothWidth': { value: 1.0 },\n\t\t'defaultColor': { value: new Color( 0x000000 ) },\n\t\t'defaultOpacity': { value: 0.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat v = luminance( texel.xyz );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}`\n\n};\n\nexport { LuminosityHighPassShader };\n"],"mappings":"OACCA,UACM,QAaP,MAAMC,yBAA2B,CAEhCC,KAAM,2BAENC,SAAU,CAETC,SAAY,CAAEC,MAAO,MACrBC,oBAAuB,CAAED,MAAO,GAChCE,YAAe,CAAEF,MAAO,GACxBG,aAAgB,CAAEH,MAAO,IAAIL,MAAO,IACpCS,eAAkB,CAAEJ,MAAO,IAI5BK,aAAwB,gKAYxBC,eAA0B,6iBA0BlBV","ignoreList":[]}