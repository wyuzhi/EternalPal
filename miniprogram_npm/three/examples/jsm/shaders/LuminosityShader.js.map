{"version":3,"file":"node_modules/three/examples/jsm/shaders/LuminosityShader.js","names":["LuminosityShader","name","uniforms","tDiffuse","value","vertexShader","fragmentShader"],"sources":["node_modules/three/examples/jsm/shaders/LuminosityShader.js"],"sourcesContent":["/**\n * @module LuminosityShader\n * @three_import import { LuminosityShader } from 'three/addons/shaders/LuminosityShader.js';\n */\n\n/**\n * Luminosity shader.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst LuminosityShader = {\n\n\tname: 'LuminosityShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\t#include <common>\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat l = luminance( texel.rgb );\n\n\t\t\tgl_FragColor = vec4( l, l, l, texel.w );\n\n\t\t}`\n\n};\n\nexport { LuminosityShader };\n"],"mappings":"AAWA,MAAMA,iBAAmB,CAExBC,KAAM,mBAENC,SAAU,CAETC,SAAY,CAAEC,MAAO,OAItBC,aAAwB,gKAYxBC,eAA0B,6QAoBlBN","ignoreList":[]}