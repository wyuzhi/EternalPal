{"version":3,"file":"node_modules/three/examples/jsm/shaders/SepiaShader.js","names":["SepiaShader","name","uniforms","tDiffuse","value","amount","vertexShader","fragmentShader"],"sources":["node_modules/three/examples/jsm/shaders/SepiaShader.js"],"sourcesContent":["/**\n * @module SepiaShader\n * @three_import import { SepiaShader } from 'three/addons/shaders/SepiaShader.js';\n */\n\n/**\n * Sepia tone shader based on [glfx.js sepia shader]{@link https://github.com/evanw/glfx.js}.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst SepiaShader = {\n\n\tname: 'SepiaShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'amount': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float amount;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 color = texture2D( tDiffuse, vUv );\n\t\t\tvec3 c = color.rgb;\n\n\t\t\tcolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\n\t\t\tcolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\n\t\t\tcolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\n\n\t\t\tgl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\n\n\t\t}`\n\n};\n\nexport { SepiaShader };\n"],"mappings":"AAWA,MAAMA,YAAc,CAEnBC,KAAM,cAENC,SAAU,CAETC,SAAY,CAAEC,MAAO,MACrBC,OAAU,CAAED,MAAO,IAIpBE,aAAwB,8JAWxBC,eAA0B,oiBAuBlBP","ignoreList":[]}