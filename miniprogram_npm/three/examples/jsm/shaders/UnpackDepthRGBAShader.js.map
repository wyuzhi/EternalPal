{"version":3,"file":"node_modules/three/examples/jsm/shaders/UnpackDepthRGBAShader.js","names":["UnpackDepthRGBAShader","name","uniforms","tDiffuse","value","opacity","vertexShader","fragmentShader"],"sources":["node_modules/three/examples/jsm/shaders/UnpackDepthRGBAShader.js"],"sourcesContent":["/**\n * @module UnpackDepthRGBAShader\n * @three_import import { UnpackDepthRGBAShader } from 'three/addons/shaders/UnpackDepthRGBAShader.js';\n */\n\n/**\n * Unpack RGBA depth shader that shows RGBA encoded depth as monochrome color.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nconst UnpackDepthRGBAShader = {\n\n\tname: 'UnpackDepthRGBAShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'opacity': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\t#include <packing>\n\n\t\tvoid main() {\n\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( tDiffuse, vUv ) );\n\n\t\t\t#ifdef USE_REVERSEDEPTHBUF\n\n\t\t\t\tgl_FragColor = vec4( vec3( depth ), opacity );\n\n\t\t\t#else\n\n\t\t\t\tgl_FragColor = vec4( vec3( 1.0 - depth ), opacity );\n\n\t\t\t#endif\n\n\t\t}`\n\n};\n\nexport { UnpackDepthRGBAShader };\n"],"mappings":"AAWA,MAAMA,sBAAwB,CAE7BC,KAAM,wBAENC,SAAU,CAETC,SAAY,CAAEC,MAAO,MACrBC,QAAW,CAAED,MAAO,IAIrBE,aAAwB,8JAWxBC,eAA0B,kaA4BlBP","ignoreList":[]}