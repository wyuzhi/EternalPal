class Block{constructor(s,e=null){this.node=s,this.parent=e,this.properties={}}setProperty(s,e){this.properties[s]=e}getProperty(s){let e=this.properties[s];return void 0===e&&null!==this.parent&&(e=this.parent.getProperty(s)),e}}class Linker{constructor(){this.block=null}addBlock(s){this.block=new Block(s,this.block)}removeBlock(s){if(null===this.block||this.block.node!==s)throw new Error("No block to remove or block mismatch.");this.block=this.block.parent}processVariables(s){this.block.setProperty(s.name,s),s.value&&this.processExpression(s.value)}processUniform(s){this.block.setProperty(s.name,s)}processVarying(s){this.block.setProperty(s.name,s)}evalProperty(s){let e="";return s.isAccessor&&(e+=s.property),e}processExpression(s){if(s.isAccessor){const e=this.block.getProperty(this.evalProperty(s));e&&(s.linker.reference=e,e.linker.accesses.push(s))}else if(s.isNumber||s.isString);else if(s.isOperator){if(this.processExpression(s.left),this.processExpression(s.right),s.isAssignment){const e=this.block.getProperty(this.evalProperty(s.left));e&&e.linker.assignments.push(s)}}else if(s.isFunctionCall)for(const e of s.params)this.processExpression(e);else if(s.isReturn)s.value&&this.processExpression(s.value);else if(s.isDiscard||s.isBreak||s.isContinue);else if(s.isAccessorElements){this.processExpression(s.object);for(const e of s.elements)this.processExpression(e.value)}else if(s.isDynamicElement||s.isStaticElement)this.processExpression(s.value);else if(s.isFor||s.isWhile)this.processForWhile(s);else if(s.isSwitch)this.processSwitch(s);else if(s.isVariableDeclaration)this.processVariables(s);else if(s.isUniform)this.processUniform(s);else if(s.isVarying)this.processVarying(s);else if(s.isTernary)this.processExpression(s.cond),this.processExpression(s.left),this.processExpression(s.right);else if(s.isConditional)this.processConditional(s);else if(s.isUnary&&(this.processExpression(s.expression),s.isAssignment)){!0!==s.parent.hasAssignment&&(s.after=!1);const e=this.block.getProperty(this.evalProperty(s.expression));e&&e.linker.assignments.push(s)}}processBody(s){for(const e of s)this.processExpression(e)}processConditional(s){this.processExpression(s.cond),this.processBody(s.body);let e=s;for(;e.elseConditional;)e.elseConditional.cond&&this.processExpression(e.elseConditional.cond),this.processBody(e.elseConditional.body),e=e.elseConditional}processForWhile(s){s.initialization&&this.processExpression(s.initialization),s.condition&&this.processExpression(s.condition),s.afterthought&&this.processExpression(s.afterthought),this.processBody(s.body)}processSwitch(s){this.processExpression(s.discriminant);for(const e of s.cases){if(!0!==e.isDefault)for(const s of e.conditions)this.processExpression(s);this.processBody(e.body)}}processFunction(s){this.addBlock(s);for(const e of s.params)this.block.setProperty(e.name,e);this.processBody(s.body),this.removeBlock(s)}process(s){this.addBlock(s);for(const e of s.body)e.isFunctionDeclaration?this.processFunction(e):this.processExpression(e);this.removeBlock(s)}}export default Linker;
//# sourceMappingURL=Linker.js.map