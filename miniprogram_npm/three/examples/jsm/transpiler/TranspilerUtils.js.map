{"version":3,"file":"node_modules/three/examples/jsm/transpiler/TranspilerUtils.js","names":["isExpression","st","isFunctionDeclaration","isFor","isWhile","isConditional","isSwitch","isPrimitive","value","test","isType","str","toFloatType","type","vecMatch","exec"],"sources":["node_modules/three/examples/jsm/transpiler/TranspilerUtils.js"],"sourcesContent":["export function isExpression( st ) {\n\n\treturn st.isFunctionDeclaration !== true && st.isFor !== true && st.isWhile !== true && st.isConditional !== true && st.isSwitch !== true;\n\n}\n\nexport function isPrimitive( value ) {\n\n\treturn /^(true|false|-?(\\d|\\.\\d))/.test( value );\n\n}\n\nexport function isType( str ) {\n\n\treturn /void|bool|float|u?int|mat[234]|mat[234]x[234]|(u|i|b)?vec[234]/.test( str );\n\n}\n\nexport function toFloatType( type ) {\n\n\tif ( /^(i?int)$/.test( type ) ) return 'float';\n\n\tconst vecMatch = /^(i|u)?vec([234])$/.exec( type );\n\n\tif ( vecMatch ) return 'vec' + vecMatch[ 2 ];\n\n\treturn type;\n\n}\n"],"mappings":"OAAO,SAASA,aAAcC,GAE7B,OAAoC,IAA7BA,EAAGC,wBAA+C,IAAbD,EAAGE,QAAiC,IAAfF,EAAGG,UAAyC,IAArBH,EAAGI,gBAA0C,IAAhBJ,EAAGK,QAEzH,QAEO,SAASC,YAAaC,GAE5B,MAAO,4BAA4BC,KAAMD,EAE1C,QAEO,SAASE,OAAQC,GAEvB,MAAO,iEAAiEF,KAAME,EAE/E,QAEO,SAASC,YAAaC,GAE5B,GAAK,YAAYJ,KAAMI,GAAS,MAAO,QAEvC,MAAMC,EAAW,qBAAqBC,KAAMF,GAE5C,OAAKC,EAAkB,MAAQA,EAAU,GAElCD,CAER","ignoreList":[]}