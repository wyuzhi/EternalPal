{"version":3,"file":"node_modules/three/examples/jsm/tsl/display/AnaglyphPassNode.js","names":["Matrix3","NodeMaterial","clamp","nodeObject","Fn","vec4","uv","uniform","max","StereoCompositePassNode","AnaglyphPassNode","type","constructor","scene","camera","super","this","isAnaglyphPassNode","_colorMatrixLeft","fromArray","_colorMatrixRight","setup","builder","uvNode","anaglyph","colorL","_mapLeft","sample","colorR","_mapRight","color","mul","rgb","add","a","material","_material","fragmentNode","context","getSharedContext","name","needsUpdate","anaglyphPass"],"sources":["node_modules/three/examples/jsm/tsl/display/AnaglyphPassNode.js"],"sourcesContent":["import { Matrix3, NodeMaterial } from 'three/webgpu';\nimport { clamp, nodeObject, Fn, vec4, uv, uniform, max } from 'three/tsl';\nimport StereoCompositePassNode from './StereoCompositePassNode.js';\n\n/**\n * A render pass node that creates an anaglyph effect.\n *\n * @augments StereoCompositePassNode\n * @three_import import { anaglyphPass } from 'three/addons/tsl/display/AnaglyphPassNode.js';\n */\nclass AnaglyphPassNode extends StereoCompositePassNode {\n\n\tstatic get type() {\n\n\t\treturn 'AnaglyphPassNode';\n\n\t}\n\n\t/**\n\t * Constructs a new anaglyph pass node.\n\t *\n\t * @param {Scene} scene - The scene to render.\n\t * @param {Camera} camera - The camera to render the scene with.\n\t */\n\tconstructor( scene, camera ) {\n\n\t\tsuper( scene, camera );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isAnaglyphPassNode = true;\n\n\t\t// Dubois matrices from https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.7.6968&rep=rep1&type=pdf#page=4\n\n\t\t/**\n\t\t * Color matrix node for the left eye.\n\t\t *\n\t\t * @type {UniformNode<mat3>}\n\t\t */\n\t\tthis._colorMatrixLeft = uniform( new Matrix3().fromArray( [\n\t\t\t0.456100, - 0.0400822, - 0.0152161,\n\t\t\t0.500484, - 0.0378246, - 0.0205971,\n\t\t\t0.176381, - 0.0157589, - 0.00546856\n\t\t] ) );\n\n\t\t/**\n\t\t * Color matrix node for the right eye.\n\t\t *\n\t\t * @type {UniformNode<mat3>}\n\t\t */\n\t\tthis._colorMatrixRight = uniform( new Matrix3().fromArray( [\n\t\t\t- 0.0434706, 0.378476, - 0.0721527,\n\t\t\t- 0.0879388, 0.73364, - 0.112961,\n\t\t\t- 0.00155529, - 0.0184503, 1.2264\n\t\t] ) );\n\n\t}\n\n\t/**\n\t * This method is used to setup the effect's TSL code.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {PassTextureNode}\n\t */\n\tsetup( builder ) {\n\n\t\tconst uvNode = uv();\n\n\t\tconst anaglyph = Fn( () => {\n\n\t\t\tconst colorL = this._mapLeft.sample( uvNode );\n\t\t\tconst colorR = this._mapRight.sample( uvNode );\n\n\t\t\tconst color = clamp( this._colorMatrixLeft.mul( colorL.rgb ).add( this._colorMatrixRight.mul( colorR.rgb ) ) );\n\n\t\t\treturn vec4( color.rgb, max( colorL.a, colorR.a ) );\n\n\t\t} );\n\n\t\tconst material = this._material || ( this._material = new NodeMaterial() );\n\t\tmaterial.fragmentNode = anaglyph().context( builder.getSharedContext() );\n\t\tmaterial.name = 'Anaglyph';\n\t\tmaterial.needsUpdate = true;\n\n\t\treturn super.setup( builder );\n\n\t}\n\n}\n\nexport default AnaglyphPassNode;\n\n/**\n * TSL function for creating an anaglyph pass node.\n *\n * @tsl\n * @function\n * @param {Scene} scene - The scene to render.\n * @param {Camera} camera - The camera to render the scene with.\n * @returns {AnaglyphPassNode}\n */\nexport const anaglyphPass = ( scene, camera ) => nodeObject( new AnaglyphPassNode( scene, camera ) );\n"],"mappings":"OAASA,QAASC,iBAAoB,sBAC7BC,MAAOC,WAAYC,GAAIC,KAAMC,GAAIC,QAASC,QAAW,mBACvDC,4BAA6B,+BAQpC,MAAMC,yBAAyBD,wBAE9B,eAAWE,GAEV,MAAO,kBAER,CAQA,WAAAC,CAAaC,EAAOC,GAEnBC,MAAOF,EAAOC,GASdE,KAAKC,oBAAqB,EAS1BD,KAAKE,iBAAmBX,SAAS,IAAIP,SAAUmB,UAAW,CACzD,OAAY,UAAa,SACzB,SAAY,UAAa,SACzB,SAAY,UAAa,aAQ1BH,KAAKI,kBAAoBb,SAAS,IAAIP,SAAUmB,UAAW,EACxD,SAAW,SAAY,UACvB,SAAW,QAAW,SACtB,WAAc,SAAW,SAG7B,CAQA,KAAAE,CAAOC,GAEN,MAAMC,EAASjB,KAETkB,EAAWpB,IAAI,KAEpB,MAAMqB,EAAST,KAAKU,SAASC,OAAQJ,GAC/BK,EAASZ,KAAKa,UAAUF,OAAQJ,GAEhCO,EAAQ5B,MAAOc,KAAKE,iBAAiBa,IAAKN,EAAOO,KAAMC,IAAKjB,KAAKI,kBAAkBW,IAAKH,EAAOI,OAErG,OAAO3B,KAAMyB,EAAME,IAAKxB,IAAKiB,EAAOS,EAAGN,EAAOM,GAAK,IAI9CC,EAAWnB,KAAKoB,YAAepB,KAAKoB,UAAY,IAAInC,cAK1D,OAJAkC,EAASE,aAAeb,IAAWc,QAAShB,EAAQiB,oBACpDJ,EAASK,KAAO,WAChBL,EAASM,aAAc,EAEhB1B,MAAMM,MAAOC,EAErB,iBAIcZ,wBAWR,MAAMgC,aAAe,CAAE7B,EAAOC,IAAYX,WAAY,IAAIO,iBAAkBG,EAAOC","ignoreList":[]}