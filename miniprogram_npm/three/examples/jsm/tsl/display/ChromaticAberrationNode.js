import{Vector2,TempNode}from"three/webgpu";import{nodeObject,Fn,uniform,convertToTexture,float,vec4,uv,NodeUpdateType}from"three/tsl";class ChromaticAberrationNode extends TempNode{static get type(){return"ChromaticAberrationNode"}constructor(e,t,o,r){super("vec4"),this.textureNode=e,this.updateBeforeType=NodeUpdateType.FRAME,this.strengthNode=t,this.centerNode=o,this.scaleNode=r,this._invSize=uniform(new Vector2)}updateBefore(){const e=this.textureNode.value;this._invSize.value.set(1/e.image.width,1/e.image.height)}setup(){const e=this.textureNode,t=e.uvNode||uv(),o=Fn((([t,o,r,a])=>{const n=t.sub(r),d=n.length(),i=float(1).add(a.mul(.02).mul(o)),u=float(1),m=float(1).sub(a.mul(.02).mul(o)),s=o.mul(d),l=r.add(n.mul(i)),c=r.add(n.mul(u)),h=r.add(n.mul(m)),p=n.mul(s).mul(float(.01)),v=n.mul(s).mul(float(0)),N=n.mul(s).mul(float(-.01)),f=l.add(p),b=c.add(v),y=h.add(N),g=e.sample(f).r,T=e.sample(b).g,x=e.sample(y).b,A=e.sample(t).a;return vec4(g,T,x,A)})).setLayout({name:"ChromaticAberrationShader",type:"vec4",inputs:[{name:"uv",type:"vec2"},{name:"strength",type:"float"},{name:"center",type:"vec2"},{name:"scale",type:"float"},{name:"invSize",type:"vec2"}]});return Fn((()=>o(t,this.strengthNode,this.centerNode,this.scaleNode,this._invSize)))()}}export default ChromaticAberrationNode;export const chromaticAberration=(e,t=1,o=null,r=1.1)=>nodeObject(new ChromaticAberrationNode(convertToTexture(e),nodeObject(t),nodeObject(o),nodeObject(r)));
//# sourceMappingURL=ChromaticAberrationNode.js.map