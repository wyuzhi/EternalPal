{"version":3,"file":"node_modules/three/examples/jsm/tsl/display/DepthOfFieldNode.js","names":["TempNode","NodeUpdateType","convertToTexture","nodeObject","Fn","uv","uniform","vec2","vec4","clamp","DepthOfFieldNode","type","constructor","textureNode","viewZNode","focusNode","apertureNode","maxblurNode","super","this","_aspect","updateBeforeType","FRAME","updateBefore","map","value","image","width","height","setup","uvNode","sampleTexture","sample","aspectcorrect","factor","add","dofblur","mul","negate","dofblur9","dofblur7","dofblur4","col","div","a","dof","node","focus","aperture","maxblur"],"sources":["node_modules/three/examples/jsm/tsl/display/DepthOfFieldNode.js"],"sourcesContent":["import { TempNode, NodeUpdateType } from 'three/webgpu';\nimport { convertToTexture, nodeObject, Fn, uv, uniform, vec2, vec4, clamp } from 'three/tsl';\n\n/**\n * Post processing node for creating depth of field (DOF) effect.\n *\n * @augments TempNode\n * @three_import import { dof } from 'three/addons/tsl/display/DepthOfFieldNode.js';\n */\nclass DepthOfFieldNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'DepthOfFieldNode';\n\n\t}\n\n\t/**\n\t * Constructs a new DOF node.\n\t *\n\t * @param {TextureNode} textureNode - The texture node that represents the input of the effect.\n\t * @param {Node<float>} viewZNode - Represents the viewZ depth values of the scene.\n\t * @param {Node<float>} focusNode - Defines the effect's focus which is the distance along the camera's look direction in world units.\n\t * @param {Node<float>} apertureNode - Defines the effect's aperture.\n\t * @param {Node<float>} maxblurNode - Defines the effect's maximum blur.\n\t */\n\tconstructor( textureNode, viewZNode, focusNode, apertureNode, maxblurNode ) {\n\n\t\tsuper( 'vec4' );\n\n\t\t/**\n\t\t * The texture node that represents the input of the effect.\n\t\t *\n\t\t * @type {TextureNode}\n\t\t */\n\t\tthis.textureNode = textureNode;\n\n\t\t/**\n\t\t * Represents the viewZ depth values of the scene.\n\t\t *\n\t\t * @type {Node<float>}\n\t\t */\n\t\tthis.viewZNode = viewZNode;\n\n\t\t/**\n\t\t * Defines the effect's focus which is the distance along the camera's look direction in world units.\n\t\t *\n\t\t * @type {Node<float>}\n\t\t */\n\t\tthis.focusNode = focusNode;\n\n\t\t/**\n\t\t * Defines the effect's aperture.\n\t\t *\n\t\t * @type {Node<float>}\n\t\t */\n\t\tthis.apertureNode = apertureNode;\n\n\t\t/**\n\t\t * Defines the effect's maximum blur.\n\t\t *\n\t\t * @type {Node<float>}\n\t\t */\n\t\tthis.maxblurNode = maxblurNode;\n\n\t\t/**\n\t\t * Represents the input's aspect ratio.\n\t\t *\n\t\t * @private\n\t\t * @type {UniformNode<float>}\n\t\t */\n\t\tthis._aspect = uniform( 0 );\n\n\t\t/**\n\t\t * The `updateBeforeType` is set to `NodeUpdateType.FRAME` since the node updates\n\t\t * its internal uniforms once per frame in `updateBefore()`.\n\t\t *\n\t\t * @type {string}\n\t\t * @default 'frame'\n\t\t */\n\t\tthis.updateBeforeType = NodeUpdateType.FRAME;\n\n\t}\n\n\t/**\n\t * This method is used to update the effect's uniforms once per frame.\n\t *\n\t * @param {NodeFrame} frame - The current node frame.\n\t */\n\tupdateBefore() {\n\n\t\tconst map = this.textureNode.value;\n\n\t\tthis._aspect.value = map.image.width / map.image.height;\n\n\t}\n\n\t/**\n\t * This method is used to setup the effect's TSL code.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {ShaderCallNodeInternal}\n\t */\n\tsetup() {\n\n\t\tconst textureNode = this.textureNode;\n\t\tconst uvNode = textureNode.uvNode || uv();\n\n\t\tconst sampleTexture = ( uv ) => textureNode.sample( uv );\n\n\t\tconst dof = Fn( () => {\n\n\t\t\tconst aspectcorrect = vec2( 1.0, this._aspect );\n\n\t\t\tconst factor = this.focusNode.add( this.viewZNode );\n\n\t\t\tconst dofblur = vec2( clamp( factor.mul( this.apertureNode ), this.maxblurNode.negate(), this.maxblurNode ) );\n\n\t\t\tconst dofblur9 = dofblur.mul( 0.9 );\n\t\t\tconst dofblur7 = dofblur.mul( 0.7 );\n\t\t\tconst dofblur4 = dofblur.mul( 0.4 );\n\n\t\t\tlet col = vec4( 0.0 );\n\n\t\t\tcol = col.add( sampleTexture( uvNode ) );\n\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.0, 0.4 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.15, 0.37 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.29, 0.29 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.37, 0.15 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.40, 0.0 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.37, - 0.15 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.29, - 0.29 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.15, - 0.37 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.0, - 0.4 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.15, 0.37 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.29, 0.29 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.37, 0.15 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.4, 0.0 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.37, - 0.15 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.29, - 0.29 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.15, - 0.37 ).mul( aspectcorrect ).mul( dofblur ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.15, 0.37 ).mul( aspectcorrect ).mul( dofblur9 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.37, 0.15 ).mul( aspectcorrect ).mul( dofblur9 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.37, - 0.15 ).mul( aspectcorrect ).mul( dofblur9 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.15, - 0.37 ).mul( aspectcorrect ).mul( dofblur9 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.15, 0.37 ).mul( aspectcorrect ).mul( dofblur9 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.37, 0.15 ).mul( aspectcorrect ).mul( dofblur9 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.37, - 0.15 ).mul( aspectcorrect ).mul( dofblur9 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.15, - 0.37 ).mul( aspectcorrect ).mul( dofblur9 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.29, 0.29 ).mul( aspectcorrect ).mul( dofblur7 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.40, 0.0 ).mul( aspectcorrect ).mul( dofblur7 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.29, - 0.29 ).mul( aspectcorrect ).mul( dofblur7 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.0, - 0.4 ).mul( aspectcorrect ).mul( dofblur7 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.29, 0.29 ).mul( aspectcorrect ).mul( dofblur7 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.4, 0.0 ).mul( aspectcorrect ).mul( dofblur7 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.29, - 0.29 ).mul( aspectcorrect ).mul( dofblur7 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.0, 0.4 ).mul( aspectcorrect ).mul( dofblur7 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.29, 0.29 ).mul( aspectcorrect ).mul( dofblur4 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.4, 0.0 ).mul( aspectcorrect ).mul( dofblur4 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.29, - 0.29 ).mul( aspectcorrect ).mul( dofblur4 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.0, - 0.4 ).mul( aspectcorrect ).mul( dofblur4 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.29, 0.29 ).mul( aspectcorrect ).mul( dofblur4 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.4, 0.0 ).mul( aspectcorrect ).mul( dofblur4 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( - 0.29, - 0.29 ).mul( aspectcorrect ).mul( dofblur4 ) ) ) );\n\t\t\tcol = col.add( sampleTexture( uvNode.add( vec2( 0.0, 0.4 ).mul( aspectcorrect ).mul( dofblur4 ) ) ) );\n\n\t\t\tcol = col.div( 41 );\n\t\t\tcol.a = 1;\n\n\t\t\treturn vec4( col );\n\n\n\t\t} );\n\n\t\tconst outputNode = dof();\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default DepthOfFieldNode;\n\n/**\n * TSL function for creating a depth-of-field effect (DOF) for post processing.\n *\n * @tsl\n * @function\n * @param {Node<vec4>} node - The node that represents the input of the effect.\n * @param {Node<float>} viewZNode - Represents the viewZ depth values of the scene.\n * @param {Node<float> | number} focus - Defines the effect's focus which is the distance along the camera's look direction in world units.\n * @param {Node<float> | number} aperture - Defines the effect's aperture.\n * @param {Node<float> | number} maxblur - Defines the effect's maximum blur.\n * @returns {DepthOfFieldNode}\n */\nexport const dof = ( node, viewZNode, focus = 1, aperture = 0.025, maxblur = 1 ) => nodeObject( new DepthOfFieldNode( convertToTexture( node ), nodeObject( viewZNode ), nodeObject( focus ), nodeObject( aperture ), nodeObject( maxblur ) ) );\n"],"mappings":"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","ignoreList":[]}