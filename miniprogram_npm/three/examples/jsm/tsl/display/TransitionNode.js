import{TempNode}from"three/webgpu";import{nodeObject,Fn,float,uv,convertToTexture,vec4,If,int,clamp,sub,mix}from"three/tsl";class TransitionNode extends TempNode{static get type(){return"TransitionNode"}constructor(e,t,o,r,s,n){super("vec4"),this.textureNodeA=e,this.textureNodeB=t,this.mixTextureNode=o,this.mixRatioNode=r,this.thresholdNode=s,this.useTextureNode=n}setup(){const{textureNodeA:e,textureNodeB:t,mixTextureNode:o,mixRatioNode:r,thresholdNode:s,useTextureNode:n}=this,i=e=>{const t=e.uvNode||uv();return e.sample(t)};return Fn((()=>{const u=i(e),d=i(t),c=vec4().toVar();return If(n.equal(int(1)),(()=>{const e=i(o),t=r.mul(s.mul(2).add(1)).sub(s),n=clamp(sub(e.r,t).mul(float(1).div(s)),0,1);c.assign(mix(u,d,n))})).Else((()=>{c.assign(mix(d,u,r))})),c}))()}}export default TransitionNode;export const transition=(e,t,o,r,s,n)=>nodeObject(new TransitionNode(convertToTexture(e),convertToTexture(t),convertToTexture(o),nodeObject(r),nodeObject(s),nodeObject(n)));
//# sourceMappingURL=TransitionNode.js.map