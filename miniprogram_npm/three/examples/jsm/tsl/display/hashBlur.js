import{float,Fn,vec2,uv,sin,rand,degrees,cos,Loop,vec4,premultiplyAlpha,unpremultiplyAlpha}from"three/tsl";export const hashBlur=Fn((([e,l=float(.1),t={}])=>{const{repeats:a=float(45),mask:p=null,premultipliedAlpha:r=!1}=t,s=e.uvNode||uv(),u=vec4(0).toVar();return Loop({start:0,end:a,type:"float"},(({i:t})=>{const d=vec2(vec2(cos(degrees(t.div(a).mul(360))),sin(degrees(t.div(a).mul(360)))).mul(rand(vec2(t,s.x.add(s.y))).add(l))),n=vec2(s.add(d.mul(l)));u.addAssign((l=>{let t=e.sample(l);if(null!==p){const e=p.sample(l).x;t=vec4(t.rgb,t.a.mul(e))}return r?premultiplyAlpha(t):t})(n))})),u.divAssign(a),r?unpremultiplyAlpha(u):u}));
//# sourceMappingURL=hashBlur.js.map