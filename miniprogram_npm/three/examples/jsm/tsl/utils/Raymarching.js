import{varying,vec4,modelWorldMatrixInverse,cameraPosition,positionGeometry,float,Fn,Loop,max,min,vec2,vec3}from"three/tsl";const hitBox=Fn((({orig:o,dir:a})=>{const i=vec3(-.5),r=vec3(.5),e=a.reciprocal(),t=i.sub(o).mul(e),n=r.sub(o).mul(e),c=min(t,n),m=max(t,n),s=max(c.x,max(c.y,c.z)),v=min(m.x,min(m.y,m.z));return vec2(s,v)}));export const RaymarchingBox=(o,a)=>{const i=varying(vec3(modelWorldMatrixInverse.mul(vec4(cameraPosition,1)))),r=varying(positionGeometry.sub(i)).normalize(),e=vec2(hitBox({orig:i,dir:r})).toVar();e.x.greaterThan(e.y).discard(),e.assign(vec2(max(e.x,0),e.y));const t=vec3(r.abs().reciprocal()).toVar(),n=float(min(t.x,min(t.y,t.z))).toVar();n.divAssign(float(o));const c=vec3(i.add(e.x.mul(r))).toVar();Loop({type:"float",start:e.x,end:e.y,update:n},(()=>{a({positionRay:c}),c.addAssign(r.mul(n))}))};
//# sourceMappingURL=Raymarching.js.map