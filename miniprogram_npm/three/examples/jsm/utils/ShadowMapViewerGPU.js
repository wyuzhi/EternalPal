import{DoubleSide,CanvasTexture,Mesh,MeshBasicMaterial,NodeMaterial,OrthographicCamera,PlaneGeometry,Scene,Texture}from"three";import{texture}from"three/tsl";class ShadowMapViewer{constructor(e){const t=this,i=void 0!==e.name&&""!==e.name;let n;const o=10,s=10,h=256,a=256,r=new OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,1,10);r.position.set(0,0,2);const d=new Scene,w=new NodeMaterial,l=texture(new Texture);w.fragmentNode=l;const p=new PlaneGeometry(h,a),c=new Mesh(p,w);let u,g;if(d.add(c),i){u=document.createElement("canvas");const t=u.getContext("2d");t.font="Bold 20px Arial";const i=t.measureText(e.name).width;u.width=i,u.height=25,t.font="Bold 20px Arial",t.fillStyle="rgba( 255, 0, 0, 1 )",t.fillText(e.name,0,20);const n=new CanvasTexture(u),o=new MeshBasicMaterial({map:n,side:DoubleSide,transparent:!0}),s=new PlaneGeometry(u.width,u.height);g=new Mesh(s,o),d.add(g)}this.enabled=!0,this.size={width:h,height:a,set:function(e,i){this.width=e,this.height=i,c.scale.set(this.width/h,this.height/a,1),t.position.set(t.position.x,t.position.y)}},this.position={x:o,y:s,set:function(e,n){this.x=e,this.y=n;const o=t.size.width,s=t.size.height;c.position.set(-window.innerWidth/2+o/2+this.x,window.innerHeight/2-s/2-this.y,0),i&&g.position.set(c.position.x,c.position.y-t.size.height/2+u.height/2,0)}},this.render=function(t){this.enabled&&(l.value=e.shadow.map.texture,n=t.autoClear,t.autoClear=!1,t.clearDepth(),t.render(d,r),t.autoClear=n)},this.updateForWindowResize=function(){this.enabled&&(r.left=window.innerWidth/-2,r.right=window.innerWidth/2,r.top=window.innerHeight/2,r.bottom=window.innerHeight/-2,r.updateProjectionMatrix(),this.update())},this.update=function(){this.position.set(this.position.x,this.position.y),this.size.set(this.size.width,this.size.height)},this.update()}}export{ShadowMapViewer};
//# sourceMappingURL=ShadowMapViewerGPU.js.map