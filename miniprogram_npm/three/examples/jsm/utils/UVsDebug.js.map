{"version":3,"file":"node_modules/three/examples/jsm/utils/UVsDebug.js","names":["Vector2","UVsDebug","geometry","size","a","b","uvs","face","canvas","document","createElement","width","height","ctx","getContext","lineWidth","strokeStyle","textAlign","fillStyle","fillRect","index","uvAttribute","attributes","uv","i","il","count","getX","fromBufferAttribute","processFace","beginPath","set","j","jl","length","x","y","moveTo","lineTo","closePath","stroke","divideScalar","font","fillText","addVectors","vnum"],"sources":["node_modules/three/examples/jsm/utils/UVsDebug.js"],"sourcesContent":["import {\n\tVector2\n} from 'three';\n\n/**\n * @module UVsDebug\n * @three_import import { UVsDebug } from 'three/addons/utils/UVsDebug.js';\n */\n\n/**\n * Function for \"unwrapping\" and debugging three.js geometries UV mapping.\n *\n * ```js\n * document.body.appendChild( UVsDebug( new THREE.SphereGeometry() ) );\n * ```\n *\n * @param {BufferGeometry} geometry - The geometry whose uv coordinates should be inspected.\n * @param {number} [size=1024] - The size of the debug canvas.\n * @return {HTMLCanvasElement} A canvas element with visualized uv coordinates.\n */\nfunction UVsDebug( geometry, size = 1024 ) {\n\n\t// handles wrapping of uv.x > 1 only\n\n\tconst abc = 'abc';\n\tconst a = new Vector2();\n\tconst b = new Vector2();\n\n\tconst uvs = [\n\t\tnew Vector2(),\n\t\tnew Vector2(),\n\t\tnew Vector2()\n\t];\n\n\tconst face = [];\n\n\tconst canvas = document.createElement( 'canvas' );\n\tconst width = size; // power of 2 required for wrapping\n\tconst height = size;\n\tcanvas.width = width;\n\tcanvas.height = height;\n\n\tconst ctx = canvas.getContext( '2d' );\n\tctx.lineWidth = 1;\n\tctx.strokeStyle = 'rgb( 63, 63, 63 )';\n\tctx.textAlign = 'center';\n\n\t// paint background white\n\n\tctx.fillStyle = 'rgb( 255, 255, 255 )';\n\tctx.fillRect( 0, 0, width, height );\n\n\tconst index = geometry.index;\n\tconst uvAttribute = geometry.attributes.uv;\n\n\tif ( index ) {\n\n\t\t// indexed geometry\n\n\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\tface[ 0 ] = index.getX( i );\n\t\t\tface[ 1 ] = index.getX( i + 1 );\n\t\t\tface[ 2 ] = index.getX( i + 2 );\n\n\t\t\tuvs[ 0 ].fromBufferAttribute( uvAttribute, face[ 0 ] );\n\t\t\tuvs[ 1 ].fromBufferAttribute( uvAttribute, face[ 1 ] );\n\t\t\tuvs[ 2 ].fromBufferAttribute( uvAttribute, face[ 2 ] );\n\n\t\t\tprocessFace( face, uvs, i / 3 );\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed geometry\n\n\t\tfor ( let i = 0, il = uvAttribute.count; i < il; i += 3 ) {\n\n\t\t\tface[ 0 ] = i;\n\t\t\tface[ 1 ] = i + 1;\n\t\t\tface[ 2 ] = i + 2;\n\n\t\t\tuvs[ 0 ].fromBufferAttribute( uvAttribute, face[ 0 ] );\n\t\t\tuvs[ 1 ].fromBufferAttribute( uvAttribute, face[ 1 ] );\n\t\t\tuvs[ 2 ].fromBufferAttribute( uvAttribute, face[ 2 ] );\n\n\t\t\tprocessFace( face, uvs, i / 3 );\n\n\t\t}\n\n\t}\n\n\treturn canvas;\n\n\tfunction processFace( face, uvs, index ) {\n\n\t\t// draw contour of face\n\n\t\tctx.beginPath();\n\n\t\ta.set( 0, 0 );\n\n\t\tfor ( let j = 0, jl = uvs.length; j < jl; j ++ ) {\n\n\t\t\tconst uv = uvs[ j ];\n\n\t\t\ta.x += uv.x;\n\t\t\ta.y += uv.y;\n\n\t\t\tif ( j === 0 ) {\n\n\t\t\t\tctx.moveTo( uv.x * ( width - 2 ) + 0.5, ( 1 - uv.y ) * ( height - 2 ) + 0.5 );\n\n\t\t\t} else {\n\n\t\t\t\tctx.lineTo( uv.x * ( width - 2 ) + 0.5, ( 1 - uv.y ) * ( height - 2 ) + 0.5 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tctx.closePath();\n\t\tctx.stroke();\n\n\t\t// calculate center of face\n\n\t\ta.divideScalar( uvs.length );\n\n\t\t// label the face number\n\n\t\tctx.font = '18px Arial';\n\t\tctx.fillStyle = 'rgb( 63, 63, 63 )';\n\t\tctx.fillText( index, a.x * width, ( 1 - a.y ) * height );\n\n\t\tif ( a.x > 0.95 ) {\n\n\t\t\t// wrap x // 0.95 is arbitrary\n\n\t\t\tctx.fillText( index, ( a.x % 1 ) * width, ( 1 - a.y ) * height );\n\n\t\t}\n\n\t\t//\n\n\t\tctx.font = '12px Arial';\n\t\tctx.fillStyle = 'rgb( 191, 191, 191 )';\n\n\t\t// label uv edge orders\n\n\t\tfor ( let j = 0, jl = uvs.length; j < jl; j ++ ) {\n\n\t\t\tconst uv = uvs[ j ];\n\t\t\tb.addVectors( a, uv ).divideScalar( 2 );\n\n\t\t\tconst vnum = face[ j ];\n\t\t\tctx.fillText( abc[ j ] + vnum, b.x * width, ( 1 - b.y ) * height );\n\n\t\t\tif ( b.x > 0.95 ) {\n\n\t\t\t\t// wrap x\n\n\t\t\t\tctx.fillText( abc[ j ] + vnum, ( b.x % 1 ) * width, ( 1 - b.y ) * height );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { UVsDebug };\n"],"mappings":"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","ignoreList":[]}