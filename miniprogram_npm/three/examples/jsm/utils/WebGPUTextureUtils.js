import{QuadMesh,NodeMaterial,WebGPURenderer,CanvasTexture}from"three";import{texture,uv}from"three/tsl";let _renderer;const _quadMesh=new QuadMesh;export async function decompress(e,r=1/0,t=null){null===t&&(t=_renderer=new WebGPURenderer,await t.init());const a=new NodeMaterial;a.fragmentNode=texture(e,uv().flipY());const n=Math.min(e.image.width,r),o=Math.min(e.image.height,r),i=t.outputColorSpace;t.setSize(n,o),t.outputColorSpace=e.colorSpace,_quadMesh.material=a,_quadMesh.render(t),t.outputColorSpace=i;const l=document.createElement("canvas"),d=l.getContext("2d");l.width=n,l.height=o,d.drawImage(t.domElement,0,0,n,o);const u=new CanvasTexture(l);return u.minFilter=e.minFilter,u.magFilter=e.magFilter,u.wrapS=e.wrapS,u.wrapT=e.wrapT,u.colorSpace=e.colorSpace,u.name=e.name,null!==_renderer&&(_renderer.dispose(),_renderer=null),u}
//# sourceMappingURL=WebGPUTextureUtils.js.map