{"version":3,"file":"node_modules/three/examples/jsm/webxr/XRHandModelFactory.js","names":["Object3D","XRHandPrimitiveModel","XRHandMeshModel","XRHandModel","constructor","controller","super","this","motionController","envMap","mesh","updateMatrixWorld","force","updateMesh","XRHandModelFactory","gltfLoader","onLoad","path","setPath","createHandModel","profile","handModel","addEventListener","event","xrInputSource","data","hand","undefined","handedness","primitive","visible"],"sources":["node_modules/three/examples/jsm/webxr/XRHandModelFactory.js"],"sourcesContent":["import {\n\tObject3D\n} from 'three';\n\nimport {\n\tXRHandPrimitiveModel\n} from './XRHandPrimitiveModel.js';\n\nimport {\n\tXRHandMeshModel\n} from './XRHandMeshModel.js';\n\n/**\n * Represents a XR hand model.\n *\n * @augments Object3D\n */\nclass XRHandModel extends Object3D {\n\n\t/**\n\t * Constructs a new XR hand model.\n\t *\n\t * @param {Group} controller - The hand controller.\n\t */\n\tconstructor( controller ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The hand controller.\n\t\t *\n\t\t * @type {Group}\n\t\t */\n\t\tthis.controller = controller;\n\n\t\t/**\n\t\t * The motion controller.\n\t\t *\n\t\t * @type {?MotionController}\n\t\t * @default null\n\t\t */\n\t\tthis.motionController = null;\n\n\t\t/**\n\t\t * The controller's environment map.\n\t\t *\n\t\t * @type {?Texture}\n\t\t * @default null\n\t\t */\n\t\tthis.envMap = null;\n\n\t\t/**\n\t\t * The model mesh.\n\t\t *\n\t\t * @type {Mesh}\n\t\t * @default null\n\t\t */\n\t\tthis.mesh = null;\n\n\t}\n\n\t/**\n\t * Overwritten with a custom implementation. Makes sure the motion controller updates the mesh.\n\t *\n\t * @param {boolean} [force=false] - When set to `true`, a recomputation of world matrices is forced even\n\t * when {@link Object3D#matrixWorldAutoUpdate} is set to `false`.\n\t */\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.motionController ) {\n\n\t\t\tthis.motionController.updateMesh();\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Similar to {@link XRControllerModelFactory}, this class allows to create hand models\n * for WebXR controllers that can be added as a visual representation to your scene.\n *\n * ```js\n * const handModelFactory = new XRHandModelFactory();\n *\n * const hand = renderer.xr.getHand( 0 );\n * hand.add( handModelFactory.createHandModel( hand ) );\n * scene.add( hand );\n * ```\n *\n * @three_import import { XRHandModelFactory } from 'three/addons/webxr/XRHandModelFactory.js';\n */\nclass XRHandModelFactory {\n\n\t/**\n\t * Constructs a new XR hand model factory.\n\t *\n\t * @param {?GLTFLoader} [gltfLoader=null] - A glTF loader that is used to load hand models.\n\t * @param {?Function} [onLoad=null] - A callback that is executed when a hand model has been loaded.\n\t */\n\tconstructor( gltfLoader = null, onLoad = null ) {\n\n\t\t/**\n\t\t * A glTF loader that is used to load hand models.\n\t\t *\n\t\t * @type {?GLTFLoader}\n\t\t * @default null\n\t\t */\n\t\tthis.gltfLoader = gltfLoader;\n\n\t\t/**\n\t\t * The path to the model repository.\n\t\t *\n\t\t * @type {?string}\n\t\t * @default null\n\t\t */\n\t\tthis.path = null;\n\n\t\t/**\n\t\t * A callback that is executed when a hand model has been loaded.\n\t\t *\n\t\t * @type {?Function}\n\t\t * @default null\n\t\t */\n\t\tthis.onLoad = onLoad;\n\n\t}\n\n\t/**\n\t * Sets the path to the hand model repository.\n\t *\n\t * @param {string} path - The path to set.\n\t * @return {XRHandModelFactory} A reference to this instance.\n\t */\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Creates a controller model for the given WebXR hand controller.\n\t *\n\t * @param {Group} controller - The hand controller.\n\t * @param {('spheres'|'boxes'|'mesh')} [profile] - The model profile that defines the model type.\n\t * @return {XRHandModel} The XR hand model.\n\t */\n\tcreateHandModel( controller, profile ) {\n\n\t\tconst handModel = new XRHandModel( controller );\n\n\t\tcontroller.addEventListener( 'connected', ( event ) => {\n\n\t\t\tconst xrInputSource = event.data;\n\n\t\t\tif ( xrInputSource.hand && ! handModel.motionController ) {\n\n\t\t\t\thandModel.xrInputSource = xrInputSource;\n\n\t\t\t\t// @todo Detect profile if not provided\n\t\t\t\tif ( profile === undefined || profile === 'spheres' ) {\n\n\t\t\t\t\thandModel.motionController = new XRHandPrimitiveModel( handModel, controller, this.path, xrInputSource.handedness, { primitive: 'sphere' } );\n\n\t\t\t\t} else if ( profile === 'boxes' ) {\n\n\t\t\t\t\thandModel.motionController = new XRHandPrimitiveModel( handModel, controller, this.path, xrInputSource.handedness, { primitive: 'box' } );\n\n\t\t\t\t} else if ( profile === 'mesh' ) {\n\n\t\t\t\t\thandModel.motionController = new XRHandMeshModel( handModel, controller, this.path, xrInputSource.handedness, this.gltfLoader, this.onLoad );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = true;\n\n\t\t} );\n\n\t\tcontroller.addEventListener( 'disconnected', () => {\n\n\t\t\tcontroller.visible = false;\n\t\t\t// handModel.motionController = null;\n\t\t\t// handModel.remove( scene );\n\t\t\t// scene = null;\n\n\t\t} );\n\n\t\treturn handModel;\n\n\t}\n\n}\n\nexport { XRHandModelFactory };\n"],"mappings":"OACCA,aACM,eAGNC,yBACM,mCAGNC,oBACM,uBAOP,MAAMC,oBAAoBH,SAOzB,WAAAI,CAAaC,GAEZC,QAOAC,KAAKF,WAAaA,EAQlBE,KAAKC,iBAAmB,KAQxBD,KAAKE,OAAS,KAQdF,KAAKG,KAAO,IAEb,CAQA,iBAAAC,CAAmBC,GAElBN,MAAMK,kBAAmBC,GAEpBL,KAAKC,kBAETD,KAAKC,iBAAiBK,YAIxB,EAkBD,MAAMC,mBAQL,WAAAV,CAAaW,EAAa,KAAMC,EAAS,MAQxCT,KAAKQ,WAAaA,EAQlBR,KAAKU,KAAO,KAQZV,KAAKS,OAASA,CAEf,CAQA,OAAAE,CAASD,GAIR,OAFAV,KAAKU,KAAOA,EAELV,IAER,CASA,eAAAY,CAAiBd,EAAYe,GAE5B,MAAMC,EAAY,IAAIlB,YAAaE,GAwCnC,OAtCAA,EAAWiB,iBAAkB,aAAeC,IAE3C,MAAMC,EAAgBD,EAAME,KAEvBD,EAAcE,OAAUL,EAAUb,mBAEtCa,EAAUG,cAAgBA,OAGTG,IAAZP,GAAqC,YAAZA,EAE7BC,EAAUb,iBAAmB,IAAIP,qBAAsBoB,EAAWhB,EAAYE,KAAKU,KAAMO,EAAcI,WAAY,CAAEC,UAAW,WAEzG,UAAZT,EAEXC,EAAUb,iBAAmB,IAAIP,qBAAsBoB,EAAWhB,EAAYE,KAAKU,KAAMO,EAAcI,WAAY,CAAEC,UAAW,QAEzG,SAAZT,IAEXC,EAAUb,iBAAmB,IAAIN,gBAAiBmB,EAAWhB,EAAYE,KAAKU,KAAMO,EAAcI,WAAYrB,KAAKQ,WAAYR,KAAKS,UAMtIX,EAAWyB,SAAU,CAAI,IAI1BzB,EAAWiB,iBAAkB,gBAAgB,KAE5CjB,EAAWyB,SAAU,CAAK,IAOpBT,CAER,SAIQP","ignoreList":[]}