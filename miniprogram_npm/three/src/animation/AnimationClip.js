import*as AnimationUtils from"./AnimationUtils.js";import{KeyframeTrack}from"./KeyframeTrack.js";import{BooleanKeyframeTrack}from"./tracks/BooleanKeyframeTrack.js";import{ColorKeyframeTrack}from"./tracks/ColorKeyframeTrack.js";import{NumberKeyframeTrack}from"./tracks/NumberKeyframeTrack.js";import{QuaternionKeyframeTrack}from"./tracks/QuaternionKeyframeTrack.js";import{StringKeyframeTrack}from"./tracks/StringKeyframeTrack.js";import{VectorKeyframeTrack}from"./tracks/VectorKeyframeTrack.js";import{generateUUID}from"../math/MathUtils.js";import{NormalAnimationBlendMode}from"../constants.js";class AnimationClip{constructor(e="",t=-1,r=[],a=NormalAnimationBlendMode){this.name=e,this.tracks=r,this.duration=t,this.blendMode=a,this.uuid=generateUUID(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],r=e.tracks,a=1/(e.fps||1);for(let e=0,n=r.length;e!==n;++e)t.push(parseKeyframeTrack(r[e]).scale(a));const n=new this(e.name,e.duration,t,e.blendMode);return n.uuid=e.uuid,n}static toJSON(e){const t=[],r=e.tracks,a={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,a=r.length;e!==a;++e)t.push(KeyframeTrack.toJSON(r[e]));return a}static CreateFromMorphTargetSequence(e,t,r,a){const n=t.length,o=[];for(let e=0;e<n;e++){let s=[],i=[];s.push((e+n-1)%n,e,(e+1)%n),i.push(0,1,0);const c=AnimationUtils.getKeyframeOrder(s);s=AnimationUtils.sortedArray(s,1,c),i=AnimationUtils.sortedArray(i,1,c),a||0!==s[0]||(s.push(n),i.push(i[0])),o.push(new NumberKeyframeTrack(".morphTargetInfluences["+t[e].name+"]",s,i).scale(1/r))}return new this(e,-1,o)}static findByName(e,t){let r=e;if(!Array.isArray(e)){const t=e;r=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<r.length;e++)if(r[e].name===t)return r[e];return null}static CreateClipsFromMorphTargetSequences(e,t,r){const a={},n=/^([\w-]*?)([\d]+)$/;for(let t=0,r=e.length;t<r;t++){const r=e[t],o=r.name.match(n);if(o&&o.length>1){const e=o[1];let t=a[e];t||(a[e]=t=[]),t.push(r)}}const o=[];for(const e in a)o.push(this.CreateFromMorphTargetSequence(e,a[e],t,r));return o}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const r=function(e,t,r,a,n){if(0!==r.length){const o=[],s=[];AnimationUtils.flattenJSON(r,o,s,a),0!==o.length&&n.push(new e(t,o,s))}},a=[],n=e.name||"default",o=e.fps||30,s=e.blendMode;let i=e.length||-1;const c=e.hierarchy||[];for(let e=0;e<c.length;e++){const n=c[e].keys;if(n&&0!==n.length)if(n[0].morphTargets){const e={};let t;for(t=0;t<n.length;t++)if(n[t].morphTargets)for(let r=0;r<n[t].morphTargets.length;r++)e[n[t].morphTargets[r]]=-1;for(const r in e){const e=[],o=[];for(let a=0;a!==n[t].morphTargets.length;++a){const a=n[t];e.push(a.time),o.push(a.morphTarget===r?1:0)}a.push(new NumberKeyframeTrack(".morphTargetInfluence["+r+"]",e,o))}i=e.length*o}else{const o=".bones["+t[e].name+"]";r(VectorKeyframeTrack,o+".position",n,"pos",a),r(QuaternionKeyframeTrack,o+".quaternion",n,"rot",a),r(VectorKeyframeTrack,o+".scale",n,"scl",a)}}if(0===a.length)return null;return new this(n,i,a,s)}resetDuration(){let e=0;for(let t=0,r=this.tracks.length;t!==r;++t){const r=this.tracks[t];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function getTrackTypeForValueTypeName(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function parseKeyframeTrack(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=getTrackTypeForValueTypeName(e.type);if(void 0===e.times){const t=[],r=[];AnimationUtils.flattenJSON(e.keys,t,r,"value"),e.times=t,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}export{AnimationClip};
//# sourceMappingURL=AnimationClip.js.map