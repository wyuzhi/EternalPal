import{AnimationAction}from"./AnimationAction.js";import{EventDispatcher}from"../core/EventDispatcher.js";import{LinearInterpolant}from"../math/interpolants/LinearInterpolant.js";import{PropertyBinding}from"./PropertyBinding.js";import{PropertyMixer}from"./PropertyMixer.js";import{AnimationClip}from"./AnimationClip.js";import{NormalAnimationBlendMode}from"../constants.js";const _controlInterpolantsResultBuffer=new Float32Array(1);class AnimationMixer extends EventDispatcher{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,n){const i=t._localRoot||this._root,e=t._clip.tracks,o=e.length,c=t._propertyBindings,s=t._interpolants,a=i.uuid,r=this._bindingsByRootAndName;let l=r[a];void 0===l&&(l={},r[a]=l);for(let t=0;t!==o;++t){const o=e[t],r=o.name;let h=l[r];if(void 0!==h)++h.referenceCount,c[t]=h;else{if(h=c[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,a,r));continue}const e=n&&n._propertyBindings[t].binding.parsedPath;h=new PropertyMixer(PropertyBinding.create(i,r,e),o.ValueTypeName,o.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,a,r),c[t]=h}s[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,e=this._actionsByClip[i];this._bindAction(t,e&&e.knownActions[0]),this._addInactiveAction(t,i,n)}const n=t._propertyBindings;for(let t=0,i=n.length;t!==i;++t){const i=n[t];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const n=t._propertyBindings;for(let t=0,i=n.length;t!==i;++t){const i=n[t];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const n=t._cacheIndex;return null!==n&&n<this._nActiveActions}_addInactiveAction(t,n,i){const e=this._actions,o=this._actionsByClip;let c=o[n];if(void 0===c)c={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[n]=c;else{const n=c.knownActions;t._byClipCacheIndex=n.length,n.push(t)}t._cacheIndex=e.length,e.push(t),c.actionByRoot[i]=t}_removeInactiveAction(t){const n=this._actions,i=n[n.length-1],e=t._cacheIndex;i._cacheIndex=e,n[e]=i,n.pop(),t._cacheIndex=null;const o=t._clip.uuid,c=this._actionsByClip,s=c[o],a=s.knownActions,r=a[a.length-1],l=t._byClipCacheIndex;r._byClipCacheIndex=l,a[l]=r,a.pop(),t._byClipCacheIndex=null;delete s.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete c[o],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const n=t._propertyBindings;for(let t=0,i=n.length;t!==i;++t){const i=n[t];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(t){const n=this._actions,i=t._cacheIndex,e=this._nActiveActions++,o=n[e];t._cacheIndex=e,n[e]=t,o._cacheIndex=i,n[i]=o}_takeBackAction(t){const n=this._actions,i=t._cacheIndex,e=--this._nActiveActions,o=n[e];t._cacheIndex=e,n[e]=t,o._cacheIndex=i,n[i]=o}_addInactiveBinding(t,n,i){const e=this._bindingsByRootAndName,o=this._bindings;let c=e[n];void 0===c&&(c={},e[n]=c),c[i]=t,t._cacheIndex=o.length,o.push(t)}_removeInactiveBinding(t){const n=this._bindings,i=t.binding,e=i.rootNode.uuid,o=i.path,c=this._bindingsByRootAndName,s=c[e],a=n[n.length-1],r=t._cacheIndex;a._cacheIndex=r,n[r]=a,n.pop(),delete s[o],0===Object.keys(s).length&&delete c[e]}_lendBinding(t){const n=this._bindings,i=t._cacheIndex,e=this._nActiveBindings++,o=n[e];t._cacheIndex=e,n[e]=t,o._cacheIndex=i,n[i]=o}_takeBackBinding(t){const n=this._bindings,i=t._cacheIndex,e=--this._nActiveBindings,o=n[e];t._cacheIndex=e,n[e]=t,o._cacheIndex=i,n[i]=o}_lendControlInterpolant(){const t=this._controlInterpolants,n=this._nActiveControlInterpolants++;let i=t[n];return void 0===i&&(i=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,_controlInterpolantsResultBuffer),i.__cacheIndex=n,t[n]=i),i}_takeBackControlInterpolant(t){const n=this._controlInterpolants,i=t.__cacheIndex,e=--this._nActiveControlInterpolants,o=n[e];t.__cacheIndex=e,n[e]=t,o.__cacheIndex=i,n[i]=o}clipAction(t,n,i){const e=n||this._root,o=e.uuid;let c="string"==typeof t?AnimationClip.findByName(e,t):t;const s=null!==c?c.uuid:t,a=this._actionsByClip[s];let r=null;if(void 0===i&&(i=null!==c?c.blendMode:NormalAnimationBlendMode),void 0!==a){const t=a.actionByRoot[o];if(void 0!==t&&t.blendMode===i)return t;r=a.knownActions[0],null===c&&(c=r._clip)}if(null===c)return null;const l=new AnimationAction(this,c,n,i);return this._bindAction(l,r),this._addInactiveAction(l,s,o),l}existingAction(t,n){const i=n||this._root,e=i.uuid,o="string"==typeof t?AnimationClip.findByName(i,t):t,c=o?o.uuid:t,s=this._actionsByClip[c];return void 0!==s&&s.actionByRoot[e]||null}stopAllAction(){const t=this._actions;for(let n=this._nActiveActions-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const n=this._actions,i=this._nActiveActions,e=this.time+=t,o=Math.sign(t),c=this._accuIndex^=1;for(let s=0;s!==i;++s){n[s]._update(e,t,o,c)}const s=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)s[t].apply(c);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const n=this._actions,i=t.uuid,e=this._actionsByClip,o=e[i];if(void 0!==o){const t=o.knownActions;for(let i=0,e=t.length;i!==e;++i){const e=t[i];this._deactivateAction(e);const o=e._cacheIndex,c=n[n.length-1];e._cacheIndex=null,e._byClipCacheIndex=null,c._cacheIndex=o,n[o]=c,n.pop(),this._removeInactiveBindingsForAction(e)}delete e[i]}}uncacheRoot(t){const n=t.uuid,i=this._actionsByClip;for(const t in i){const e=i[t].actionByRoot[n];void 0!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}const e=this._bindingsByRootAndName[n];if(void 0!==e)for(const t in e){const n=e[t];n.restoreOriginalState(),this._removeInactiveBinding(n)}}uncacheAction(t,n){const i=this.existingAction(t,n);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}export{AnimationMixer};
//# sourceMappingURL=AnimationMixer.js.map