{"version":3,"file":"node_modules/three/src/cameras/ArrayCamera.js","names":["PerspectiveCamera","ArrayCamera","constructor","array","super","this","isArrayCamera","isMultiViewCamera","cameras"],"sources":["node_modules/three/src/cameras/ArrayCamera.js"],"sourcesContent":["import { PerspectiveCamera } from './PerspectiveCamera.js';\n\n/**\n * This type of camera can be used in order to efficiently render a scene with a\n * predefined set of cameras. This is an important performance aspect for\n * rendering VR scenes.\n *\n * An instance of `ArrayCamera` always has an array of sub cameras. It's mandatory\n * to define for each sub camera the `viewport` property which determines the\n * part of the viewport that is rendered with this camera.\n *\n * @augments PerspectiveCamera\n */\nclass ArrayCamera extends PerspectiveCamera {\n\n\t/**\n\t * Constructs a new array camera.\n\t *\n\t * @param {Array<PerspectiveCamera>} [array=[]] - An array of perspective sub cameras.\n\t */\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isArrayCamera = true;\n\n\t\t/**\n\t\t * Whether this camera is used with multiview rendering or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default false\n\t\t */\n\t\tthis.isMultiViewCamera = false;\n\n\t\t/**\n\t\t * An array of perspective sub cameras.\n\t\t *\n\t\t * @type {Array<PerspectiveCamera>}\n\t\t */\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nexport { ArrayCamera };\n"],"mappings":"OAASA,sBAAyB,yBAalC,MAAMC,oBAAoBD,kBAOzB,WAAAE,CAAaC,EAAQ,IAEpBC,QASAC,KAAKC,eAAgB,EASrBD,KAAKE,mBAAoB,EAOzBF,KAAKG,QAAUL,CAEhB,SAIQF","ignoreList":[]}