{"version":3,"file":"node_modules/three/src/cameras/StereoCamera.js","names":["Matrix4","DEG2RAD","PerspectiveCamera","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","constructor","this","type","aspect","eyeSep","cameraL","layers","enable","matrixAutoUpdate","cameraR","_cache","focus","fov","near","far","zoom","update","camera","cache","copy","projectionMatrix","eyeSepHalf","eyeSepOnProjection","ymax","Math","tan","xmin","xmax","elements","matrixWorld","multiply"],"sources":["node_modules/three/src/cameras/StereoCamera.js"],"sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\nimport { DEG2RAD } from '../math/MathUtils.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\n/**\n * A special type of camera that uses two perspective cameras with\n * stereoscopic projection. Can be used for rendering stereo effects\n * like [3D Anaglyph]{@link https://en.wikipedia.org/wiki/Anaglyph_3D} or\n * [Parallax Barrier]{@link https://en.wikipedia.org/wiki/parallax_barrier}.\n */\nclass StereoCamera {\n\n\t/**\n\t * Constructs a new stereo camera.\n\t */\n\tconstructor() {\n\n\t\t/**\n\t\t * The type property is used for detecting the object type\n\t\t * in context of serialization/deserialization.\n\t\t *\n\t\t * @type {string}\n\t\t * @readonly\n\t\t */\n\t\tthis.type = 'StereoCamera';\n\n\t\t/**\n\t\t * The aspect.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.aspect = 1;\n\n\t\t/**\n\t\t * The eye separation which represents the distance\n\t\t * between the left and right camera.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0.064\n\t\t */\n\t\tthis.eyeSep = 0.064;\n\n\t\t/**\n\t\t * The camera representing the left eye. This is added to layer `1` so objects to be\n\t\t * rendered by the left camera must also be added to this layer.\n\t\t *\n\t\t * @type {PerspectiveCamera}\n\t\t */\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\t/**\n\t\t * The camera representing the right eye. This is added to layer `2` so objects to be\n\t\t * rendered by the right camera must also be added to this layer.\n\t\t *\n\t\t * @type {PerspectiveCamera}\n\t\t */\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\t/**\n\t * Updates the stereo camera based on the given perspective camera.\n\t *\n\t * @param {PerspectiveCamera} camera - The perspective camera.\n\t */\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nexport { StereoCamera };\n"],"mappings":"OAASA,YAAe,4BACfC,YAAe,8BACfC,sBAAyB,yBAElC,MAAMC,UAA0B,IAAIH,QAC9BI,SAAyB,IAAIJ,QAC7BK,kBAAkC,IAAIL,QAQ5C,MAAMM,aAKL,WAAAC,GASCC,KAAKC,KAAO,eAQZD,KAAKE,OAAS,EASdF,KAAKG,OAAS,KAQdH,KAAKI,QAAU,IAAIV,kBACnBM,KAAKI,QAAQC,OAAOC,OAAQ,GAC5BN,KAAKI,QAAQG,kBAAmB,EAQhCP,KAAKQ,QAAU,IAAId,kBACnBM,KAAKQ,QAAQH,OAAOC,OAAQ,GAC5BN,KAAKQ,QAAQD,kBAAmB,EAEhCP,KAAKS,OAAS,CACbC,MAAO,KACPC,IAAK,KACLT,OAAQ,KACRU,KAAM,KACNC,IAAK,KACLC,KAAM,KACNX,OAAQ,KAGV,CAOA,MAAAY,CAAQC,GAEP,MAAMC,EAAQjB,KAAKS,OAMnB,GAJoBQ,EAAMP,QAAUM,EAAON,OAASO,EAAMN,MAAQK,EAAOL,KACxEM,EAAMf,SAAWc,EAAOd,OAASF,KAAKE,QAAUe,EAAML,OAASI,EAAOJ,MACtEK,EAAMJ,MAAQG,EAAOH,KAAOI,EAAMH,OAASE,EAAOF,MAAQG,EAAMd,SAAWH,KAAKG,OAE9D,CAElBc,EAAMP,MAAQM,EAAON,MACrBO,EAAMN,IAAMK,EAAOL,IACnBM,EAAMf,OAASc,EAAOd,OAASF,KAAKE,OACpCe,EAAML,KAAOI,EAAOJ,KACpBK,EAAMJ,IAAMG,EAAOH,IACnBI,EAAMH,KAAOE,EAAOF,KACpBG,EAAMd,OAASH,KAAKG,OAKpBN,kBAAkBqB,KAAMF,EAAOG,kBAC/B,MAAMC,EAAaH,EAAMd,OAAS,EAC5BkB,EAAqBD,EAAaH,EAAML,KAAOK,EAAMP,MACrDY,EAASL,EAAML,KAAOW,KAAKC,IAAK/B,QAAUwB,EAAMN,IAAM,IAAUM,EAAMH,KAC5E,IAAIW,EAAMC,EAIV9B,SAAS+B,SAAU,KAASP,EAC5BzB,UAAUgC,SAAU,IAAOP,EAI3BK,GAASH,EAAOL,EAAMf,OAASmB,EAC/BK,EAAOJ,EAAOL,EAAMf,OAASmB,EAE7BxB,kBAAkB8B,SAAU,GAAM,EAAIV,EAAML,MAASc,EAAOD,GAC5D5B,kBAAkB8B,SAAU,IAAQD,EAAOD,IAAWC,EAAOD,GAE7DzB,KAAKI,QAAQe,iBAAiBD,KAAMrB,mBAIpC4B,GAASH,EAAOL,EAAMf,OAASmB,EAC/BK,EAAOJ,EAAOL,EAAMf,OAASmB,EAE7BxB,kBAAkB8B,SAAU,GAAM,EAAIV,EAAML,MAASc,EAAOD,GAC5D5B,kBAAkB8B,SAAU,IAAQD,EAAOD,IAAWC,EAAOD,GAE7DzB,KAAKQ,QAAQW,iBAAiBD,KAAMrB,kBAErC,CAEAG,KAAKI,QAAQwB,YAAYV,KAAMF,EAAOY,aAAcC,SAAUjC,UAC9DI,KAAKQ,QAAQoB,YAAYV,KAAMF,EAAOY,aAAcC,SAAUlC,UAE/D,SAIQG","ignoreList":[]}