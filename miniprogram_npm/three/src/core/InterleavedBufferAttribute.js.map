{"version":3,"file":"node_modules/three/src/core/InterleavedBufferAttribute.js","names":["Vector3","BufferAttribute","denormalize","normalize","_vector","InterleavedBufferAttribute","constructor","interleavedBuffer","itemSize","offset","normalized","this","isInterleavedBufferAttribute","name","data","count","array","needsUpdate","value","applyMatrix4","m","i","l","fromBufferAttribute","setXYZ","x","y","z","applyNormalMatrix","transformDirection","getComponent","index","component","stride","setComponent","setX","setY","setZ","setW","w","getX","getY","getZ","getW","setXY","setXYZW","clone","undefined","console","log","j","push","interleavedBuffers","uuid","toJSON","type"],"sources":["node_modules/three/src/core/InterleavedBufferAttribute.js"],"sourcesContent":["import { Vector3 } from '../math/Vector3.js';\nimport { BufferAttribute } from './BufferAttribute.js';\nimport { denormalize, normalize } from '../math/MathUtils.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\n\n/**\n * An alternative version of a buffer attribute with interleaved data. Interleaved\n * attributes share a common interleaved data storage ({@link InterleavedBuffer}) and refer with\n * different offsets into the buffer.\n */\nclass InterleavedBufferAttribute {\n\n\t/**\n\t * Constructs a new interleaved buffer attribute.\n\t *\n\t * @param {InterleavedBuffer} interleavedBuffer - The buffer holding the interleaved data.\n\t * @param {number} itemSize - The item size.\n\t * @param {number} offset - The attribute offset into the buffer.\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\n\t */\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\t/**\n\t\t * The name of the buffer attribute.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = '';\n\n\t\t/**\n\t\t * The buffer holding the interleaved data.\n\t\t *\n\t\t * @type {InterleavedBuffer}\n\t\t */\n\t\tthis.data = interleavedBuffer;\n\n\t\t/**\n\t\t * The item size, see {@link BufferAttribute#itemSize}.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.itemSize = itemSize;\n\n\t\t/**\n\t\t * The attribute offset into the buffer.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.offset = offset;\n\n\t\t/**\n\t\t * Whether the data are normalized or not, see {@link BufferAttribute#normalized}\n\t\t *\n\t\t * @type {InterleavedBuffer}\n\t\t */\n\t\tthis.normalized = normalized;\n\n\t}\n\n\t/**\n\t * The item count of this buffer attribute.\n\t *\n\t * @type {number}\n\t * @readonly\n\t */\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\t/**\n\t * The array holding the interleaved buffer attribute data.\n\t *\n\t * @type {TypedArray}\n\t */\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\t/**\n\t * Flag to indicate that this attribute has changed and should be re-sent to\n\t * the GPU. Set this to `true` when you modify the value of the array.\n\t *\n\t * @type {number}\n\t * @default false\n\t * @param {boolean} value\n\t */\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\t/**\n\t * Applies the given 4x4 matrix to the given attribute. Only works with\n\t * item size `3`.\n\t *\n\t * @param {Matrix4} m - The matrix to apply.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Applies the given 3x3 normal matrix to the given attribute. Only works with\n\t * item size `3`.\n\t *\n\t * @param {Matrix3} m - The normal matrix to apply.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Applies the given 4x4 matrix to the given attribute. Only works with\n\t * item size `3` and with direction vectors.\n\t *\n\t * @param {Matrix4} m - The matrix to apply.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the given component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} component - The component index.\n\t * @return {number} The returned value.\n\t */\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\t/**\n\t * Sets the given value to the given component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} component - The component index.\n\t * @param {number} value - The value to set.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the x component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} x - The value to set.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the y component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} y - The value to set.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the z component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} z - The value to set.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the w component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} w - The value to set.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the x component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @return {number} The x component.\n\t */\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\t/**\n\t * Returns the y component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @return {number} The y component.\n\t */\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\t/**\n\t * Returns the z component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @return {number} The z component.\n\t */\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\t/**\n\t * Returns the w component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @return {number} The w component.\n\t */\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\t/**\n\t * Sets the x and y component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} x - The value for the x component to set.\n\t * @param {number} y - The value for the y component to set.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the x, y and z component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} x - The value for the x component to set.\n\t * @param {number} y - The value for the y component to set.\n\t * @param {number} z - The value for the z component to set.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the x, y, z and w component of the vector at the given index.\n\t *\n\t * @param {number} index - The index into the buffer attribute.\n\t * @param {number} x - The value for the x component to set.\n\t * @param {number} y - The value for the y component to set.\n\t * @param {number} z - The value for the z component to set.\n\t * @param {number} w - The value for the w component to set.\n\t * @return {InterleavedBufferAttribute} A reference to this instance.\n\t */\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns a new buffer attribute with copied values from this instance.\n\t *\n\t * If no parameter is provided, cloning an interleaved buffer attribute will de-interleave buffer data.\n\t *\n\t * @param {Object} [data] - An object with interleaved buffers that allows to retain the interleaved property.\n\t * @return {BufferAttribute|InterleavedBufferAttribute} A clone of this instance.\n\t */\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Serializes the buffer attribute into JSON.\n\t *\n\t * If no parameter is provided, cloning an interleaved buffer attribute will de-interleave buffer data.\n\t *\n\t * @param {Object} [data] - An optional value holding meta information about the serialization.\n\t * @return {Object} A JSON object representing the serialized buffer attribute.\n\t */\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { InterleavedBufferAttribute };\n"],"mappings":"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","ignoreList":[]}