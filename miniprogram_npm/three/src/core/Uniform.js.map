{"version":3,"file":"node_modules/three/src/core/Uniform.js","names":["Uniform","constructor","value","this","clone","undefined"],"sources":["node_modules/three/src/core/Uniform.js"],"sourcesContent":["/**\n * Represents a uniform which is a global shader variable. They are passed to shader programs.\n *\n * When declaring a uniform of a {@link ShaderMaterial}, it is declared by value or by object.\n * ```js\n * uniforms: {\n * \ttime: { value: 1.0 },\n * \tresolution: new Uniform( new Vector2() )\n * };\n * ```\n * Since this class can only be used in context of {@link ShaderMaterial}, it is only supported\n * in {@link WebGLRenderer}.\n */\nclass Uniform {\n\n\t/**\n\t * Constructs a new uniform.\n\t *\n\t * @param {any} value - The uniform value.\n\t */\n\tconstructor( value ) {\n\n\t\t/**\n\t\t * The uniform value.\n\t\t *\n\t\t * @type {any}\n\t\t */\n\t\tthis.value = value;\n\n\t}\n\n\t/**\n\t * Returns a new uniform with copied values from this instance.\n\t * If the value has a `clone()` method, the value is cloned as well.\n\t *\n\t * @return {Uniform} A clone of this instance.\n\t */\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nexport { Uniform };\n"],"mappings":"AAaA,MAAMA,QAOL,WAAAC,CAAaC,GAOZC,KAAKD,MAAQA,CAEd,CAQA,KAAAE,GAEC,OAAO,IAAIJ,aAA8BK,IAArBF,KAAKD,MAAME,MAAsBD,KAAKD,MAAQC,KAAKD,MAAME,QAE9E,SAIQJ","ignoreList":[]}