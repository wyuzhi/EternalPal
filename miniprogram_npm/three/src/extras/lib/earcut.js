export default function earcut(e,t,n=2){const r=t&&t.length,i=r?t[0]*n:e.length;let o=linkedList(e,0,i,n,!0);const x=[];if(!o||o.next===o.prev)return x;let l,a,s;if(r&&(o=eliminateHoles(e,t,o,n)),e.length>80*n){l=1/0,a=1/0;let t=-1/0,r=-1/0;for(let o=n;o<i;o+=n){const n=e[o],i=e[o+1];n<l&&(l=n),i<a&&(a=i),n>t&&(t=n),i>r&&(r=i)}s=Math.max(t-l,r-a),s=0!==s?32767/s:0}return earcutLinked(o,x,n,l,a,s,0),x}function linkedList(e,t,n,r,i){let o;if(i===signedArea(e,t,n,r)>0)for(let i=t;i<n;i+=r)o=insertNode(i/r|0,e[i],e[i+1],o);else for(let i=n-r;i>=t;i-=r)o=insertNode(i/r|0,e[i],e[i+1],o);return o&&equals(o,o.next)&&(removeNode(o),o=o.next),o}function filterPoints(e,t){if(!e)return e;t||(t=e);let n,r=e;do{if(n=!1,r.steiner||!equals(r,r.next)&&0!==area(r.prev,r,r.next))r=r.next;else{if(removeNode(r),r=t=r.prev,r===r.next)break;n=!0}}while(n||r!==t);return t}function earcutLinked(e,t,n,r,i,o,x){if(!e)return;!x&&o&&indexCurve(e,r,i,o);let l=e;for(;e.prev!==e.next;){const a=e.prev,s=e.next;if(o?isEarHashed(e,r,i,o):isEar(e))t.push(a.i,e.i,s.i),removeNode(e),e=s.next,l=s.next;else if((e=s)===l){x?1===x?earcutLinked(e=cureLocalIntersections(filterPoints(e),t),t,n,r,i,o,2):2===x&&splitEarcut(e,t,n,r,i,o):earcutLinked(filterPoints(e),t,n,r,i,o,1);break}}}function isEar(e){const t=e.prev,n=e,r=e.next;if(area(t,n,r)>=0)return!1;const i=t.x,o=n.x,x=r.x,l=t.y,a=n.y,s=r.y,u=Math.min(i,o,x),c=Math.min(l,a,s),f=Math.max(i,o,x),p=Math.max(l,a,s);let y=r.next;for(;y!==t;){if(y.x>=u&&y.x<=f&&y.y>=c&&y.y<=p&&pointInTriangleExceptFirst(i,l,o,a,x,s,y.x,y.y)&&area(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function isEarHashed(e,t,n,r){const i=e.prev,o=e,x=e.next;if(area(i,o,x)>=0)return!1;const l=i.x,a=o.x,s=x.x,u=i.y,c=o.y,f=x.y,p=Math.min(l,a,s),y=Math.min(u,c,f),d=Math.max(l,a,s),v=Math.max(u,c,f),h=zOrder(p,y,t,n,r),g=zOrder(d,v,t,n,r);let m=e.prevZ,Z=e.nextZ;for(;m&&m.z>=h&&Z&&Z.z<=g;){if(m.x>=p&&m.x<=d&&m.y>=y&&m.y<=v&&m!==i&&m!==x&&pointInTriangleExceptFirst(l,u,a,c,s,f,m.x,m.y)&&area(m.prev,m,m.next)>=0)return!1;if(m=m.prevZ,Z.x>=p&&Z.x<=d&&Z.y>=y&&Z.y<=v&&Z!==i&&Z!==x&&pointInTriangleExceptFirst(l,u,a,c,s,f,Z.x,Z.y)&&area(Z.prev,Z,Z.next)>=0)return!1;Z=Z.nextZ}for(;m&&m.z>=h;){if(m.x>=p&&m.x<=d&&m.y>=y&&m.y<=v&&m!==i&&m!==x&&pointInTriangleExceptFirst(l,u,a,c,s,f,m.x,m.y)&&area(m.prev,m,m.next)>=0)return!1;m=m.prevZ}for(;Z&&Z.z<=g;){if(Z.x>=p&&Z.x<=d&&Z.y>=y&&Z.y<=v&&Z!==i&&Z!==x&&pointInTriangleExceptFirst(l,u,a,c,s,f,Z.x,Z.y)&&area(Z.prev,Z,Z.next)>=0)return!1;Z=Z.nextZ}return!0}function cureLocalIntersections(e,t){let n=e;do{const r=n.prev,i=n.next.next;!equals(r,i)&&intersects(r,n,n.next,i)&&locallyInside(r,i)&&locallyInside(i,r)&&(t.push(r.i,n.i,i.i),removeNode(n),removeNode(n.next),n=e=i),n=n.next}while(n!==e);return filterPoints(n)}function splitEarcut(e,t,n,r,i,o){let x=e;do{let e=x.next.next;for(;e!==x.prev;){if(x.i!==e.i&&isValidDiagonal(x,e)){let l=splitPolygon(x,e);return x=filterPoints(x,x.next),l=filterPoints(l,l.next),earcutLinked(x,t,n,r,i,o,0),void earcutLinked(l,t,n,r,i,o,0)}e=e.next}x=x.next}while(x!==e)}function eliminateHoles(e,t,n,r){const i=[];for(let n=0,o=t.length;n<o;n++){const x=linkedList(e,t[n]*r,n<o-1?t[n+1]*r:e.length,r,!1);x===x.next&&(x.steiner=!0),i.push(getLeftmost(x))}i.sort(compareXYSlope);for(let e=0;e<i.length;e++)n=eliminateHole(i[e],n);return n}function compareXYSlope(e,t){let n=e.x-t.x;if(0===n&&(n=e.y-t.y,0===n)){n=(e.next.y-e.y)/(e.next.x-e.x)-(t.next.y-t.y)/(t.next.x-t.x)}return n}function eliminateHole(e,t){const n=findHoleBridge(e,t);if(!n)return t;const r=splitPolygon(n,e);return filterPoints(r,r.next),filterPoints(n,n.next)}function findHoleBridge(e,t){let n=t;const r=e.x,i=e.y;let o,x=-1/0;if(equals(e,n))return n;do{if(equals(e,n.next))return n.next;if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const e=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=r&&e>x&&(x=e,o=n.x<n.next.x?n:n.next,e===r))return o}n=n.next}while(n!==t);if(!o)return null;const l=o,a=o.x,s=o.y;let u=1/0;n=o;do{if(r>=n.x&&n.x>=a&&r!==n.x&&pointInTriangle(i<s?r:x,i,a,s,i<s?x:r,i,n.x,n.y)){const t=Math.abs(i-n.y)/(r-n.x);locallyInside(n,e)&&(t<u||t===u&&(n.x>o.x||n.x===o.x&&sectorContainsSector(o,n)))&&(o=n,u=t)}n=n.next}while(n!==l);return o}function sectorContainsSector(e,t){return area(e.prev,e,t.prev)<0&&area(t.next,e,e.next)<0}function indexCurve(e,t,n,r){let i=e;do{0===i.z&&(i.z=zOrder(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,sortLinked(i)}function sortLinked(e){let t,n=1;do{let r,i=e;e=null;let o=null;for(t=0;i;){t++;let x=i,l=0;for(let e=0;e<n&&(l++,x=x.nextZ,x);e++);let a=n;for(;l>0||a>0&&x;)0!==l&&(0===a||!x||i.z<=x.z)?(r=i,i=i.nextZ,l--):(r=x,x=x.nextZ,a--),o?o.nextZ=r:e=r,r.prevZ=o,o=r;i=x}o.nextZ=null,n*=2}while(t>1);return e}function zOrder(e,t,n,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*i|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*i|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function getLeftmost(e){let t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function pointInTriangle(e,t,n,r,i,o,x,l){return(i-x)*(t-l)>=(e-x)*(o-l)&&(e-x)*(r-l)>=(n-x)*(t-l)&&(n-x)*(o-l)>=(i-x)*(r-l)}function pointInTriangleExceptFirst(e,t,n,r,i,o,x,l){return!(e===x&&t===l)&&pointInTriangle(e,t,n,r,i,o,x,l)}function isValidDiagonal(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!intersectsPolygon(e,t)&&(locallyInside(e,t)&&locallyInside(t,e)&&middleInside(e,t)&&(area(e.prev,e,t.prev)||area(e,t.prev,t))||equals(e,t)&&area(e.prev,e,e.next)>0&&area(t.prev,t,t.next)>0)}function area(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function equals(e,t){return e.x===t.x&&e.y===t.y}function intersects(e,t,n,r){const i=sign(area(e,t,n)),o=sign(area(e,t,r)),x=sign(area(n,r,e)),l=sign(area(n,r,t));return i!==o&&x!==l||(!(0!==i||!onSegment(e,n,t))||(!(0!==o||!onSegment(e,r,t))||(!(0!==x||!onSegment(n,e,r))||!(0!==l||!onSegment(n,t,r)))))}function onSegment(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function sign(e){return e>0?1:e<0?-1:0}function intersectsPolygon(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&intersects(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}function locallyInside(e,t){return area(e.prev,e,e.next)<0?area(e,t,e.next)>=0&&area(e,e.prev,t)>=0:area(e,t,e.prev)<0||area(e,e.next,t)<0}function middleInside(e,t){let n=e,r=!1;const i=(e.x+t.x)/2,o=(e.y+t.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&i<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}function splitPolygon(e,t){const n=createNode(e.i,e.x,e.y),r=createNode(t.i,t.x,t.y),i=e.next,o=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,o.next=r,r.prev=o,r}function insertNode(e,t,n,r){const i=createNode(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function removeNode(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function createNode(e,t,n){return{i:e,x:t,y:n,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}export function deviation(e,t,n,r){const i=t&&t.length,o=i?t[0]*n:e.length;let x=Math.abs(signedArea(e,0,o,n));if(i)for(let r=0,i=t.length;r<i;r++){const o=t[r]*n,l=r<i-1?t[r+1]*n:e.length;x-=Math.abs(signedArea(e,o,l,n))}let l=0;for(let t=0;t<r.length;t+=3){const i=r[t]*n,o=r[t+1]*n,x=r[t+2]*n;l+=Math.abs((e[i]-e[x])*(e[o+1]-e[i+1])-(e[i]-e[o])*(e[x+1]-e[i+1]))}return 0===x&&0===l?0:Math.abs((l-x)/x)}function signedArea(e,t,n,r){let i=0;for(let o=t,x=n-r;o<n;o+=r)i+=(e[x]-e[o])*(e[o+1]+e[x+1]),x=o;return i}export function flatten(e){const t=[],n=[],r=e[0][0].length;let i=0,o=0;for(const x of e){for(const e of x)for(let n=0;n<r;n++)t.push(e[n]);o&&(i+=o,n.push(i)),o=x.length}return{vertices:t,holes:n,dimensions:r}}
//# sourceMappingURL=earcut.js.map