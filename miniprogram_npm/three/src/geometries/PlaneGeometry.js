import{BufferGeometry}from"../core/BufferGeometry.js";import{Float32BufferAttribute}from"../core/BufferAttribute.js";class PlaneGeometry extends BufferGeometry{constructor(t=1,e=1,r=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:r,heightSegments:s};const o=t/2,i=e/2,h=Math.floor(r),u=Math.floor(s),f=h+1,n=u+1,a=t/h,m=e/u,p=[],l=[],c=[],y=[];for(let t=0;t<n;t++){const e=t*m-i;for(let r=0;r<f;r++){const s=r*a-o;l.push(s,-e,0),c.push(0,0,1),y.push(r/h),y.push(1-t/u)}}for(let t=0;t<u;t++)for(let e=0;e<h;e++){const r=e+f*t,s=e+f*(t+1),o=e+1+f*(t+1),i=e+1+f*t;p.push(r,s,i),p.push(s,o,i)}this.setIndex(p),this.setAttribute("position",new Float32BufferAttribute(l,3)),this.setAttribute("normal",new Float32BufferAttribute(c,3)),this.setAttribute("uv",new Float32BufferAttribute(y,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new PlaneGeometry(t.width,t.height,t.widthSegments,t.heightSegments)}}export{PlaneGeometry};
//# sourceMappingURL=PlaneGeometry.js.map