{"version":3,"file":"node_modules/three/src/geometries/TorusGeometry.js","names":["BufferGeometry","Float32BufferAttribute","Vector3","TorusGeometry","constructor","radius","tube","radialSegments","tubularSegments","arc","Math","PI","super","this","type","parameters","floor","indices","vertices","normals","uvs","center","vertex","normal","j","i","u","v","x","cos","y","sin","z","push","subVectors","normalize","a","b","c","d","setIndex","setAttribute","copy","source","Object","assign","fromJSON","data"],"sources":["node_modules/three/src/geometries/TorusGeometry.js"],"sourcesContent":["import { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n/**\n * A geometry class for representing an torus.\n *\n * ```js\n * const geometry = new THREE.TorusGeometry( 10, 3, 16, 100 );\n * const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\n * const torus = new THREE.Mesh( geometry, material );\n * scene.add( torus );\n * ```\n *\n * @augments BufferGeometry\n */\nclass TorusGeometry extends BufferGeometry {\n\n\t/**\n\t * Constructs a new torus geometry.\n\t *\n\t * @param {number} [radius=1] - Radius of the torus, from the center of the torus to the center of the tube.\n\t * @param {number} [tube=0.4] - Radius of the tube. Must be smaller than `radius`.\n\t * @param {number} [radialSegments=12] - The number of radial segments.\n\t * @param {number} [tubularSegments=48] - The number of tubular segments.\n\t * @param {number} [arc=Math.PI*2] - Central angle in radians.\n\t */\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\t/**\n\t\t * Holds the constructor parameters that have been\n\t\t * used to generate the geometry. Any modification\n\t\t * after instantiation does not change the geometry.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Factory method for creating an instance of this class from the given\n\t * JSON object.\n\t *\n\t * @param {Object} data - A JSON object representing the serialized geometry.\n\t * @return {TorusGeometry} A new instance.\n\t */\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nexport { TorusGeometry };\n"],"mappings":"OAASA,mBAAsB,mCACtBC,2BAA8B,oCAC9BC,YAAe,qBAcxB,MAAMC,sBAAsBH,eAW3B,WAAAI,CAAaC,EAAS,EAAGC,EAAO,GAAKC,EAAiB,GAAIC,EAAkB,GAAIC,EAAgB,EAAVC,KAAKC,IAE1FC,QAEAC,KAAKC,KAAO,gBASZD,KAAKE,WAAa,CACjBV,OAAQA,EACRC,KAAMA,EACNC,eAAgBA,EAChBC,gBAAiBA,EACjBC,IAAKA,GAGNF,EAAiBG,KAAKM,MAAOT,GAC7BC,EAAkBE,KAAKM,MAAOR,GAI9B,MAAMS,EAAU,GACVC,EAAW,GACXC,EAAU,GACVC,EAAM,GAINC,EAAS,IAAInB,QACboB,EAAS,IAAIpB,QACbqB,EAAS,IAAIrB,QAInB,IAAM,IAAIsB,EAAI,EAAGA,GAAKjB,EAAgBiB,IAErC,IAAM,IAAIC,EAAI,EAAGA,GAAKjB,EAAiBiB,IAAO,CAE7C,MAAMC,EAAID,EAAIjB,EAAkBC,EAC1BkB,EAAIH,EAAIjB,EAAiBG,KAAKC,GAAK,EAIzCW,EAAOM,GAAMvB,EAASC,EAAOI,KAAKmB,IAAKF,IAAQjB,KAAKmB,IAAKH,GACzDJ,EAAOQ,GAAMzB,EAASC,EAAOI,KAAKmB,IAAKF,IAAQjB,KAAKqB,IAAKL,GACzDJ,EAAOU,EAAI1B,EAAOI,KAAKqB,IAAKJ,GAE5BT,EAASe,KAAMX,EAAOM,EAAGN,EAAOQ,EAAGR,EAAOU,GAI1CX,EAAOO,EAAIvB,EAASK,KAAKmB,IAAKH,GAC9BL,EAAOS,EAAIzB,EAASK,KAAKqB,IAAKL,GAC9BH,EAAOW,WAAYZ,EAAQD,GAASc,YAEpChB,EAAQc,KAAMV,EAAOK,EAAGL,EAAOO,EAAGP,EAAOS,GAIzCZ,EAAIa,KAAMR,EAAIjB,GACdY,EAAIa,KAAMT,EAAIjB,EAEf,CAMD,IAAM,IAAIiB,EAAI,EAAGA,GAAKjB,EAAgBiB,IAErC,IAAM,IAAIC,EAAI,EAAGA,GAAKjB,EAAiBiB,IAAO,CAI7C,MAAMW,GAAM5B,EAAkB,GAAMgB,EAAIC,EAAI,EACtCY,GAAM7B,EAAkB,IAAQgB,EAAI,GAAMC,EAAI,EAC9Ca,GAAM9B,EAAkB,IAAQgB,EAAI,GAAMC,EAC1Cc,GAAM/B,EAAkB,GAAMgB,EAAIC,EAIxCR,EAAQgB,KAAMG,EAAGC,EAAGE,GACpBtB,EAAQgB,KAAMI,EAAGC,EAAGC,EAErB,CAMD1B,KAAK2B,SAAUvB,GACfJ,KAAK4B,aAAc,WAAY,IAAIxC,uBAAwBiB,EAAU,IACrEL,KAAK4B,aAAc,SAAU,IAAIxC,uBAAwBkB,EAAS,IAClEN,KAAK4B,aAAc,KAAM,IAAIxC,uBAAwBmB,EAAK,GAE3D,CAEA,IAAAsB,CAAMC,GAML,OAJA/B,MAAM8B,KAAMC,GAEZ9B,KAAKE,WAAa6B,OAAOC,OAAQ,CAAC,EAAGF,EAAO5B,YAErCF,IAER,CASA,eAAOiC,CAAUC,GAEhB,OAAO,IAAI5C,cAAe4C,EAAK1C,OAAQ0C,EAAKzC,KAAMyC,EAAKxC,eAAgBwC,EAAKvC,gBAAiBuC,EAAKtC,IAEnG,SAIQN","ignoreList":[]}