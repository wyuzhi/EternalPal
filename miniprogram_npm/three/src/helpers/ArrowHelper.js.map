{"version":3,"file":"node_modules/three/src/helpers/ArrowHelper.js","names":["Float32BufferAttribute","BufferGeometry","Object3D","ConeGeometry","MeshBasicMaterial","LineBasicMaterial","Mesh","Line","Vector3","_axis","_lineGeometry","_coneGeometry","ArrowHelper","constructor","dir","origin","length","color","headLength","headWidth","super","this","type","undefined","setAttribute","translate","position","copy","line","toneMapped","matrixAutoUpdate","add","cone","setDirection","setLength","y","quaternion","set","z","x","normalize","radians","Math","acos","setFromAxisAngle","scale","max","updateMatrix","setColor","material","source","dispose","geometry"],"sources":["node_modules/three/src/helpers/ArrowHelper.js"],"sourcesContent":["import { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { ConeGeometry } from '../geometries/ConeGeometry.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { Line } from '../objects/Line.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\n/**\n * An 3D arrow object for visualizing directions.\n *\n * ```js\n * const dir = new THREE.Vector3( 1, 2, 0 );\n *\n * //normalize the direction vector (convert to vector of length 1)\n * dir.normalize();\n *\n * const origin = new THREE.Vector3( 0, 0, 0 );\n * const length = 1;\n * const hex = 0xffff00;\n *\n * const arrowHelper = new THREE.ArrowHelper( dir, origin, length, hex );\n * scene.add( arrowHelper );\n * ```\n *\n * @augments Object3D\n */\nclass ArrowHelper extends Object3D {\n\n\t/**\n\t * Constructs a new arrow helper.\n\t *\n\t * @param {Vector3} [dir=(0, 0, 1)] - The (normalized) direction vector.\n\t * @param {Vector3} [origin=(0, 0, 0)] - Point at which the arrow starts.\n\t * @param {number} [length=1] - Length of the arrow in world units.\n\t * @param {(number|Color|string)} [color=0xffff00] - Color of the arrow.\n\t * @param {number} [headLength=length*0.2] - The length of the head of the arrow.\n\t * @param {number} [headWidth=headLength*0.2] - The width of the head of the arrow.\n\t */\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new ConeGeometry( 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\t/**\n\t\t * The line part of the arrow helper.\n\t\t *\n\t\t * @type {Line}\n\t\t */\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\t/**\n\t\t * The cone part of the arrow helper.\n\t\t *\n\t\t * @type {Mesh}\n\t\t */\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\t/**\n\t * Sets the direction of the helper.\n\t *\n\t * @param {Vector3} dir - The normalized direction vector.\n\t */\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Sets the length of the helper.\n\t *\n\t * @param {number} length - Length of the arrow in world units.\n\t * @param {number} [headLength=length*0.2] - The length of the head of the arrow.\n\t * @param {number} [headWidth=headLength*0.2] - The width of the head of the arrow.\n\t */\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\t/**\n\t * Sets the color of the helper.\n\t *\n\t * @param {number|Color|string} color - The color to set.\n\t */\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever this instance is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nexport { ArrowHelper };\n"],"mappings":"OAASA,2BAA8B,oCAC9BC,mBAAsB,mCACtBC,aAAgB,6BAChBC,iBAAoB,uCACpBC,sBAAyB,2CACzBC,sBAAyB,2CACzBC,SAAY,4BACZC,SAAY,4BACZC,YAAe,qBAExB,MAAMC,MAAsB,IAAID,QAChC,IAAIE,cAAeC,cAqBnB,MAAMC,oBAAoBV,SAYzB,WAAAW,CAAaC,EAAM,IAAIN,QAAS,EAAG,EAAG,GAAKO,EAAS,IAAIP,QAAS,EAAG,EAAG,GAAKQ,EAAS,EAAGC,EAAQ,SAAUC,EAAsB,GAATF,EAAcG,EAAyB,GAAbD,GAEhJE,QAEAC,KAAKC,KAAO,mBAEWC,IAAlBb,gBAEJA,cAAgB,IAAIT,eACpBS,cAAcc,aAAc,WAAY,IAAIxB,uBAAwB,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,IAE1FW,cAAgB,IAAIR,aAAc,GAAK,EAAG,EAAG,GAC7CQ,cAAcc,UAAW,GAAK,GAAK,IAIpCJ,KAAKK,SAASC,KAAMZ,GAOpBM,KAAKO,KAAO,IAAIrB,KAAMG,cAAe,IAAIL,kBAAmB,CAAEY,MAAOA,EAAOY,YAAY,KACxFR,KAAKO,KAAKE,kBAAmB,EAC7BT,KAAKU,IAAKV,KAAKO,MAOfP,KAAKW,KAAO,IAAI1B,KAAMK,cAAe,IAAIP,kBAAmB,CAAEa,MAAOA,EAAOY,YAAY,KACxFR,KAAKW,KAAKF,kBAAmB,EAC7BT,KAAKU,IAAKV,KAAKW,MAEfX,KAAKY,aAAcnB,GACnBO,KAAKa,UAAWlB,EAAQE,EAAYC,EAErC,CAOA,YAAAc,CAAcnB,GAIb,GAAKA,EAAIqB,EAAI,OAEZd,KAAKe,WAAWC,IAAK,EAAG,EAAG,EAAG,QAExB,GAAKvB,EAAIqB,GAAM,OAErBd,KAAKe,WAAWC,IAAK,EAAG,EAAG,EAAG,OAExB,CAEN5B,MAAM4B,IAAKvB,EAAIwB,EAAG,GAAKxB,EAAIyB,GAAIC,YAE/B,MAAMC,EAAUC,KAAKC,KAAM7B,EAAIqB,GAE/Bd,KAAKe,WAAWQ,iBAAkBnC,MAAOgC,EAE1C,CAED,CASA,SAAAP,CAAWlB,EAAQE,EAAsB,GAATF,EAAcG,EAAyB,GAAbD,GAEzDG,KAAKO,KAAKiB,MAAMR,IAAK,EAAGK,KAAKI,IAAK,KAAQ9B,EAASE,GAAc,GACjEG,KAAKO,KAAKmB,eAEV1B,KAAKW,KAAKa,MAAMR,IAAKlB,EAAWD,EAAYC,GAC5CE,KAAKW,KAAKN,SAASS,EAAInB,EACvBK,KAAKW,KAAKe,cAEX,CAOA,QAAAC,CAAU/B,GAETI,KAAKO,KAAKqB,SAAShC,MAAMoB,IAAKpB,GAC9BI,KAAKW,KAAKiB,SAAShC,MAAMoB,IAAKpB,EAE/B,CAEA,IAAAU,CAAMuB,GAOL,OALA9B,MAAMO,KAAMuB,GAAQ,GAEpB7B,KAAKO,KAAKD,KAAMuB,EAAOtB,MACvBP,KAAKW,KAAKL,KAAMuB,EAAOlB,MAEhBX,IAER,CAMA,OAAA8B,GAEC9B,KAAKO,KAAKwB,SAASD,UACnB9B,KAAKO,KAAKqB,SAASE,UACnB9B,KAAKW,KAAKoB,SAASD,UACnB9B,KAAKW,KAAKiB,SAASE,SAEpB,SAIQvC","ignoreList":[]}