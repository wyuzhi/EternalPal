{"version":3,"file":"node_modules/three/src/helpers/BoxHelper.js","names":["Box3","LineSegments","LineBasicMaterial","BufferAttribute","BufferGeometry","_box","BoxHelper","constructor","object","color","indices","Uint16Array","positions","Float32Array","geometry","setIndex","setAttribute","super","toneMapped","this","type","matrixAutoUpdate","update","undefined","setFromObject","isEmpty","min","max","position","attributes","array","x","y","z","needsUpdate","computeBoundingSphere","copy","source","recursive","dispose","material"],"sources":["node_modules/three/src/helpers/BoxHelper.js"],"sourcesContent":["import { Box3 } from '../math/Box3.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\n\nconst _box = /*@__PURE__*/ new Box3();\n\n/**\n * Helper object to graphically show the world-axis-aligned bounding box\n * around an object. The actual bounding box is handled with {@link Box3},\n * this is just a visual helper for debugging. It can be automatically\n * resized with {@link BoxHelper#update} when the object it's created from\n * is transformed. Note that the object must have a geometry for this to work,\n * so it won't work with sprites.\n *\n * ```js\n * const sphere = new THREE.SphereGeometry();\n * const object = new THREE.Mesh( sphere, new THREE.MeshBasicMaterial( 0xff0000 ) );\n * const box = new THREE.BoxHelper( object, 0xffff00 );\n * scene.add( box );\n * ```\n *\n * @augments LineSegments\n */\nclass BoxHelper extends LineSegments {\n\n\t/**\n\t * Constructs a new box helper.\n\t *\n\t * @param {Object3D} [object] - The 3D object to show the world-axis-aligned bounding box.\n\t * @param {number|Color|string} [color=0xffff00] - The box's color.\n\t */\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\t/**\n\t\t * The 3D object being visualized.\n\t\t *\n\t\t * @type {Object3D}\n\t\t */\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\t/**\n\t * Updates the helper's geometry to match the dimensions of the object,\n\t * including any children.\n\t */\n\tupdate() {\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\t/**\n\t * Updates the wireframe box for the passed object.\n\t *\n\t * @param {Object3D} object - The 3D object to create the helper for.\n\t * @return {BoxHelper} A reference to this instance.\n\t */\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever this instance is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nexport { BoxHelper };\n"],"mappings":"OAASA,SAAY,yBACZC,iBAAoB,oCACpBC,sBAAyB,2CACzBC,oBAAuB,oCACvBC,mBAAsB,4BAE/B,MAAMC,KAAqB,IAAIL,KAmB/B,MAAMM,kBAAkBL,aAQvB,WAAAM,CAAaC,EAAQC,EAAQ,UAE5B,MAAMC,EAAU,IAAIC,YAAa,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAClGC,EAAY,IAAIC,aAAc,IAE9BC,EAAW,IAAIV,eACrBU,EAASC,SAAU,IAAIZ,gBAAiBO,EAAS,IACjDI,EAASE,aAAc,WAAY,IAAIb,gBAAiBS,EAAW,IAEnEK,MAAOH,EAAU,IAAIZ,kBAAmB,CAAEO,MAAOA,EAAOS,YAAY,KAOpEC,KAAKX,OAASA,EACdW,KAAKC,KAAO,YAEZD,KAAKE,kBAAmB,EAExBF,KAAKG,QAEN,CAMA,MAAAA,GAQC,QANqBC,IAAhBJ,KAAKX,QAETH,KAAKmB,cAAeL,KAAKX,QAIrBH,KAAKoB,UAAY,OAEtB,MAAMC,EAAMrB,KAAKqB,IACXC,EAAMtB,KAAKsB,IAkBXC,EAAWT,KAAKL,SAASe,WAAWD,SACpCE,EAAQF,EAASE,MAEvBA,EAAO,GAAMH,EAAII,EAAGD,EAAO,GAAMH,EAAIK,EAAGF,EAAO,GAAMH,EAAIM,EACzDH,EAAO,GAAMJ,EAAIK,EAAGD,EAAO,GAAMH,EAAIK,EAAGF,EAAO,GAAMH,EAAIM,EACzDH,EAAO,GAAMJ,EAAIK,EAAGD,EAAO,GAAMJ,EAAIM,EAAGF,EAAO,GAAMH,EAAIM,EACzDH,EAAO,GAAMH,EAAII,EAAGD,EAAO,IAAOJ,EAAIM,EAAGF,EAAO,IAAOH,EAAIM,EAC3DH,EAAO,IAAOH,EAAII,EAAGD,EAAO,IAAOH,EAAIK,EAAGF,EAAO,IAAOJ,EAAIO,EAC5DH,EAAO,IAAOJ,EAAIK,EAAGD,EAAO,IAAOH,EAAIK,EAAGF,EAAO,IAAOJ,EAAIO,EAC5DH,EAAO,IAAOJ,EAAIK,EAAGD,EAAO,IAAOJ,EAAIM,EAAGF,EAAO,IAAOJ,EAAIO,EAC5DH,EAAO,IAAOH,EAAII,EAAGD,EAAO,IAAOJ,EAAIM,EAAGF,EAAO,IAAOJ,EAAIO,EAE5DL,EAASM,aAAc,EAEvBf,KAAKL,SAASqB,uBAEf,CAQA,aAAAX,CAAehB,GAKd,OAHAW,KAAKX,OAASA,EACdW,KAAKG,SAEEH,IAER,CAEA,IAAAiB,CAAMC,EAAQC,GAMb,OAJArB,MAAMmB,KAAMC,EAAQC,GAEpBnB,KAAKX,OAAS6B,EAAO7B,OAEdW,IAER,CAMA,OAAAoB,GAECpB,KAAKL,SAASyB,UACdpB,KAAKqB,SAASD,SAEf,SAKQjC","ignoreList":[]}