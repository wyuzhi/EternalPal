{"version":3,"file":"node_modules/three/src/helpers/CameraHelper.js","names":["Camera","Vector3","LineSegments","Color","LineBasicMaterial","BufferGeometry","Float32BufferAttribute","WebGLCoordinateSystem","WebGPUCoordinateSystem","_vector","_camera","CameraHelper","constructor","camera","geometry","material","color","vertexColors","toneMapped","vertices","colors","pointMap","addLine","a","b","addPoint","id","push","undefined","length","setAttribute","super","this","type","updateProjectionMatrix","matrix","matrixWorld","matrixAutoUpdate","update","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","frustum","cone","up","target","cross","colorAttribute","getAttribute","setXYZ","r","g","needsUpdate","nearZ","farZ","projectionMatrixInverse","copy","reversedDepth","coordinateSystem","Error","setPoint","w","h","dispose","point","x","y","z","set","unproject","points","position","i","l"],"sources":["node_modules/three/src/helpers/CameraHelper.js"],"sourcesContent":["import { Camera } from '../cameras/Camera.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { Color } from '../math/Color.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { WebGLCoordinateSystem, WebGPUCoordinateSystem } from '../constants.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n * This helps with visualizing what a camera contains in its frustum. It\n * visualizes the frustum of a camera using a line segments.\n *\n * Based on frustum visualization in [lightgl.js shadowmap example]{@link https://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html}.\n *\n * `CameraHelper` must be a child of the scene.\n *\n * ```js\n * const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n * const helper = new THREE.CameraHelper( camera );\n * scene.add( helper );\n * ```\n *\n * @augments LineSegments\n */\nclass CameraHelper extends LineSegments {\n\n\t/**\n\t * Constructs a new arrow helper.\n\t *\n\t * @param {Camera} camera - The camera to visualize.\n\t */\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\t/**\n\t\t * The camera being visualized.\n\t\t *\n\t\t * @type {Camera}\n\t\t */\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\t/**\n\t\t * This contains the points used to visualize the camera.\n\t\t *\n\t\t * @type {Object<string,Array<number>>}\n\t\t */\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\t/**\n\t * Defines the colors of the helper.\n\t *\n\t * @param {Color} frustum - The frustum line color.\n\t * @param {Color} cone - The cone line color.\n\t * @param {Color} up - The up line color.\n\t * @param {Color} target - The target line color.\n\t * @param {Color} cross - The cross line color.\n\t * @return {CameraHelper} A reference to this helper.\n\t */\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Updates the helper based on the projection matrix of the camera.\n\t */\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\tlet nearZ, farZ;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// Adjust z values based on coordinate system\n\n\t\tif ( this.camera.reversedDepth === true ) {\n\n\t\t\tnearZ = 1;\n\t\t\tfarZ = 0;\n\n\t\t} else {\n\n\t\t\tif ( this.camera.coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\t\tnearZ = - 1;\n\t\t\t\tfarZ = 1;\n\n\t\t\t} else if ( this.camera.coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\t\tnearZ = 0;\n\t\t\t\tfarZ = 1;\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'THREE.CameraHelper.update(): Invalid coordinate system: ' + this.camera.coordinateSystem );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// center / target\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, nearZ );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, farZ );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, nearZ );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, nearZ );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, nearZ );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, nearZ );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, farZ );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, farZ );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, farZ );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, farZ );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, nearZ );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, farZ );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, farZ );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, farZ );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, farZ );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, nearZ );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, nearZ );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, nearZ );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, nearZ );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever this instance is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nexport { CameraHelper };\n"],"mappings":"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","ignoreList":[]}