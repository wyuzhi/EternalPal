import{Line}from"../objects/Line.js";import{Mesh}from"../objects/Mesh.js";import{LineBasicMaterial}from"../materials/LineBasicMaterial.js";import{MeshBasicMaterial}from"../materials/MeshBasicMaterial.js";import{Float32BufferAttribute}from"../core/BufferAttribute.js";import{BufferGeometry}from"../core/BufferGeometry.js";class PlaneHelper extends Line{constructor(e,t=1,i=16776960){const s=i,r=new BufferGeometry;r.setAttribute("position",new Float32BufferAttribute([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),r.computeBoundingSphere(),super(r,new LineBasicMaterial({color:s,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=new BufferGeometry;o.setAttribute("position",new Float32BufferAttribute([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),o.computeBoundingSphere(),this.add(new Mesh(o,new MeshBasicMaterial({color:s,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}export{PlaneHelper};
//# sourceMappingURL=PlaneHelper.js.map