{"version":3,"file":"node_modules/three/src/lights/Light.js","names":["Object3D","Color","Light","constructor","color","intensity","super","this","isLight","type","dispose","copy","source","recursive","toJSON","meta","data","object","getHex","undefined","groundColor","distance","angle","decay","penumbra","shadow","target","uuid"],"sources":["node_modules/three/src/lights/Light.js"],"sourcesContent":["import { Object3D } from '../core/Object3D.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * Abstract base class for lights - all other light types inherit the\n * properties and methods described here.\n *\n * @abstract\n * @augments Object3D\n */\nclass Light extends Object3D {\n\n\t/**\n\t * Constructs a new light.\n\t *\n\t * @param {(number|Color|string)} [color=0xffffff] - The light's color.\n\t * @param {number} [intensity=1] - The light's strength/intensity.\n\t */\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\t/**\n\t\t * The light's color.\n\t\t *\n\t\t * @type {Color}\n\t\t */\n\t\tthis.color = new Color( color );\n\n\t\t/**\n\t\t * The light's intensity.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.intensity = intensity;\n\n\t}\n\n\t/**\n\t * Frees the GPU-related resources allocated by this instance. Call this\n\t * method whenever this instance is no longer used in your app.\n\t */\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nexport { Light };\n"],"mappings":"OAASA,aAAgB,6BAChBC,UAAa,mBAStB,MAAMC,cAAcF,SAQnB,WAAAG,CAAaC,EAAOC,EAAY,GAE/BC,QASAC,KAAKC,SAAU,EAEfD,KAAKE,KAAO,QAOZF,KAAKH,MAAQ,IAAIH,MAAOG,GAQxBG,KAAKF,UAAYA,CAElB,CAMA,OAAAK,GAIA,CAEA,IAAAC,CAAMC,EAAQC,GAOb,OALAP,MAAMK,KAAMC,EAAQC,GAEpBN,KAAKH,MAAMO,KAAMC,EAAOR,OACxBG,KAAKF,UAAYO,EAAOP,UAEjBE,IAER,CAEA,MAAAO,CAAQC,GAEP,MAAMC,EAAOV,MAAMQ,OAAQC,GAe3B,OAbAC,EAAKC,OAAOb,MAAQG,KAAKH,MAAMc,SAC/BF,EAAKC,OAAOZ,UAAYE,KAAKF,eAEHc,IAArBZ,KAAKa,cAA4BJ,EAAKC,OAAOG,YAAcb,KAAKa,YAAYF,eAE1DC,IAAlBZ,KAAKc,WAAyBL,EAAKC,OAAOI,SAAWd,KAAKc,eAC3CF,IAAfZ,KAAKe,QAAsBN,EAAKC,OAAOK,MAAQf,KAAKe,YACrCH,IAAfZ,KAAKgB,QAAsBP,EAAKC,OAAOM,MAAQhB,KAAKgB,YAClCJ,IAAlBZ,KAAKiB,WAAyBR,EAAKC,OAAOO,SAAWjB,KAAKiB,eAE1CL,IAAhBZ,KAAKkB,SAAuBT,EAAKC,OAAOQ,OAASlB,KAAKkB,OAAOX,eAC7CK,IAAhBZ,KAAKmB,SAAuBV,EAAKC,OAAOS,OAASnB,KAAKmB,OAAOC,MAE3DX,CAER,SAIQd","ignoreList":[]}