import{LinearFilter,LinearMipmapLinearFilter,ClampToEdgeWrapping}from"../constants.js";import{FileLoader}from"./FileLoader.js";import{DataTexture}from"../textures/DataTexture.js";import{Loader}from"./Loader.js";class DataTextureLoader extends Loader{constructor(e){super(e)}load(e,a,i,r){const t=this,o=new DataTexture,p=new FileLoader(this.manager);return p.setResponseType("arraybuffer"),p.setRequestHeader(this.requestHeader),p.setPath(this.path),p.setWithCredentials(t.withCredentials),p.load(e,(function(e){let i;try{i=t.parse(e)}catch(e){if(void 0===r)return void console.error(e);r(e)}void 0!==i.image?o.image=i.image:void 0!==i.data&&(o.image.width=i.width,o.image.height=i.height,o.image.data=i.data),o.wrapS=void 0!==i.wrapS?i.wrapS:ClampToEdgeWrapping,o.wrapT=void 0!==i.wrapT?i.wrapT:ClampToEdgeWrapping,o.magFilter=void 0!==i.magFilter?i.magFilter:LinearFilter,o.minFilter=void 0!==i.minFilter?i.minFilter:LinearFilter,o.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.colorSpace&&(o.colorSpace=i.colorSpace),void 0!==i.flipY&&(o.flipY=i.flipY),void 0!==i.format&&(o.format=i.format),void 0!==i.type&&(o.type=i.type),void 0!==i.mipmaps&&(o.mipmaps=i.mipmaps,o.minFilter=LinearMipmapLinearFilter),1===i.mipmapCount&&(o.minFilter=LinearFilter),void 0!==i.generateMipmaps&&(o.generateMipmaps=i.generateMipmaps),o.needsUpdate=!0,a&&a(o,i)}),i,r),o}}export{DataTextureLoader};
//# sourceMappingURL=DataTextureLoader.js.map