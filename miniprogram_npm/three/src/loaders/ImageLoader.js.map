{"version":3,"file":"node_modules/three/src/loaders/ImageLoader.js","names":["Cache","Loader","createElementNS","_loading","WeakMap","ImageLoader","constructor","manager","super","load","url","onLoad","onProgress","onError","undefined","this","path","resolveURL","scope","cached","get","complete","itemStart","setTimeout","itemEnd","arr","set","push","image","onImageLoad","removeEventListeners","callbacks","i","length","callback","delete","onImageError","event","remove","itemError","removeEventListener","addEventListener","slice","crossOrigin","add","src"],"sources":["node_modules/three/src/loaders/ImageLoader.js"],"sourcesContent":["import { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\nimport { createElementNS } from '../utils.js';\n\nconst _loading = new WeakMap();\n\n/**\n * A loader for loading images. The class loads images with the HTML `Image` API.\n *\n * ```js\n * const loader = new THREE.ImageLoader();\n * const image = await loader.loadAsync( 'image.png' );\n * ```\n * Please note that `ImageLoader` has dropped support for progress\n * events in `r84`. For an `ImageLoader` that supports progress events, see\n * [this thread]{@link https://github.com/mrdoob/three.js/issues/10439#issuecomment-275785639}.\n *\n * @augments Loader\n */\nclass ImageLoader extends Loader {\n\n\t/**\n\t * Constructs a new image loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded image\n\t * to the `onLoad()` callback. The method also returns a new `Image` object which can\n\t * directly be used for texture creation. If you do it this way, the texture\n\t * may pop up in your scene once the respective loading process is finished.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(Image)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Unsupported in this loader.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t * @return {Image} The image.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( `image:${url}` );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tif ( cached.complete === true ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tlet arr = _loading.get( cached );\n\n\t\t\t\tif ( arr === undefined ) {\n\n\t\t\t\t\tarr = [];\n\t\t\t\t\t_loading.set( cached, arr );\n\n\t\t\t\t}\n\n\t\t\t\tarr.push( { onLoad, onError } );\n\n\t\t\t}\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\t//\n\n\t\t\tconst callbacks = _loading.get( this ) || [];\n\n\t\t\tfor ( let i = 0; i < callbacks.length; i ++ ) {\n\n\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\tif ( callback.onLoad ) callback.onLoad( this );\n\n\t\t\t}\n\n\t\t\t_loading.delete( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tCache.remove( `image:${url}` );\n\n\t\t\t//\n\n\t\t\tconst callbacks = _loading.get( this ) || [];\n\n\t\t\tfor ( let i = 0; i < callbacks.length; i ++ ) {\n\n\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t}\n\n\t\t\t_loading.delete( this );\n\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tCache.add( `image:${url}`, image );\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\n\nexport { ImageLoader };\n"],"mappings":"OAASA,UAAa,oBACbC,WAAc,qBACdC,oBAAuB,cAEhC,MAAMC,SAAW,IAAIC,QAerB,MAAMC,oBAAoBJ,OAOzB,WAAAK,CAAaC,GAEZC,MAAOD,EAER,CAcA,IAAAE,CAAMC,EAAKC,EAAQC,EAAYC,QAEXC,IAAdC,KAAKC,OAAqBN,EAAMK,KAAKC,KAAON,GAEjDA,EAAMK,KAAKR,QAAQU,WAAYP,GAE/B,MAAMQ,EAAQH,KAERI,EAASnB,MAAMoB,IAAK,SAASV,KAEnC,QAAgBI,IAAXK,EAAuB,CAE3B,IAAyB,IAApBA,EAAOE,SAEXH,EAAMX,QAAQe,UAAWZ,GAEzBa,YAAY,WAENZ,GAASA,EAAQQ,GAEtBD,EAAMX,QAAQiB,QAASd,EAExB,GAAG,OAEG,CAEN,IAAIe,EAAMtB,SAASiB,IAAKD,QAEXL,IAARW,IAEJA,EAAM,GACNtB,SAASuB,IAAKP,EAAQM,IAIvBA,EAAIE,KAAM,CAAEhB,SAAQE,WAErB,CAEA,OAAOM,CAER,CAEA,MAAMS,EAAQ1B,gBAAiB,OAE/B,SAAS2B,IAERC,IAEKnB,GAASA,EAAQI,MAItB,MAAMgB,EAAY5B,SAASiB,IAAKL,OAAU,GAE1C,IAAM,IAAIiB,EAAI,EAAGA,EAAID,EAAUE,OAAQD,IAAO,CAE7C,MAAME,EAAWH,EAAWC,GACvBE,EAASvB,QAASuB,EAASvB,OAAQI,KAEzC,CAEAZ,SAASgC,OAAQpB,MAEjBG,EAAMX,QAAQiB,QAASd,EAExB,CAEA,SAAS0B,EAAcC,GAEtBP,IAEKjB,GAAUA,EAASwB,GAExBrC,MAAMsC,OAAQ,SAAS5B,KAIvB,MAAMqB,EAAY5B,SAASiB,IAAKL,OAAU,GAE1C,IAAM,IAAIiB,EAAI,EAAGA,EAAID,EAAUE,OAAQD,IAAO,CAE7C,MAAME,EAAWH,EAAWC,GACvBE,EAASrB,SAAUqB,EAASrB,QAASwB,EAE3C,CAEAlC,SAASgC,OAAQpB,MAGjBG,EAAMX,QAAQgC,UAAW7B,GACzBQ,EAAMX,QAAQiB,QAASd,EAExB,CAEA,SAASoB,IAERF,EAAMY,oBAAqB,OAAQX,GAAa,GAChDD,EAAMY,oBAAqB,QAASJ,GAAc,EAEnD,CAgBA,OAdAR,EAAMa,iBAAkB,OAAQZ,GAAa,GAC7CD,EAAMa,iBAAkB,QAASL,GAAc,GAEpB,UAAtB1B,EAAIgC,MAAO,EAAG,SAEQ5B,IAArBC,KAAK4B,cAA4Bf,EAAMe,YAAc5B,KAAK4B,aAIhE3C,MAAM4C,IAAK,SAASlC,IAAOkB,GAC3BV,EAAMX,QAAQe,UAAWZ,GAEzBkB,EAAMiB,IAAMnC,EAELkB,CAER,SAKQvB","ignoreList":[]}