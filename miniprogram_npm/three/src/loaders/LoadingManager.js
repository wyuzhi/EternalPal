class LoadingManager{constructor(t,o,n){const r=this;let i,e=!1,s=0,a=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=o,this.onError=n,this.abortController=new AbortController,this.itemStart=function(t){a++,!1===e&&void 0!==r.onStart&&r.onStart(t,s,a),e=!0},this.itemEnd=function(t){s++,void 0!==r.onProgress&&r.onProgress(t,s,a),s===a&&(e=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return i?i(t):t},this.setURLModifier=function(t){return i=t,this},this.addHandler=function(t,o){return l.push(t,o),this},this.removeHandler=function(t){const o=l.indexOf(t);return-1!==o&&l.splice(o,2),this},this.getHandler=function(t){for(let o=0,n=l.length;o<n;o+=2){const n=l[o],r=l[o+1];if(n.global&&(n.lastIndex=0),n.test(t))return r}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const DefaultLoadingManager=new LoadingManager;export{DefaultLoadingManager,LoadingManager};
//# sourceMappingURL=LoadingManager.js.map