import{Color}from"../math/Color.js";import{Vector2}from"../math/Vector2.js";import{Vector3}from"../math/Vector3.js";import{Vector4}from"../math/Vector4.js";import{Matrix3}from"../math/Matrix3.js";import{Matrix4}from"../math/Matrix4.js";import{FileLoader}from"./FileLoader.js";import{Loader}from"./Loader.js";import{ShadowMaterial,SpriteMaterial,RawShaderMaterial,ShaderMaterial,PointsMaterial,MeshPhysicalMaterial,MeshStandardMaterial,MeshPhongMaterial,MeshToonMaterial,MeshNormalMaterial,MeshLambertMaterial,MeshDepthMaterial,MeshDistanceMaterial,MeshBasicMaterial,MeshMatcapMaterial,LineDashedMaterial,LineBasicMaterial,Material}from"../materials/Materials.js";class MaterialLoader extends Loader{constructor(e){super(e),this.textures={}}load(e,a,i,o){const t=this,s=new FileLoader(t.manager);s.setPath(t.path),s.setRequestHeader(t.requestHeader),s.setWithCredentials(t.withCredentials),s.load(e,(function(i){try{a(t.parse(JSON.parse(i)))}catch(a){o?o(a):console.error(a),t.manager.itemError(e)}}),i,o)}parse(e){const a=this.textures;function i(e){return void 0===a[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),a[e]}const o=this.createMaterialFromType(e.type);if(void 0!==e.uuid&&(o.uuid=e.uuid),void 0!==e.name&&(o.name=e.name),void 0!==e.color&&void 0!==o.color&&o.color.setHex(e.color),void 0!==e.roughness&&(o.roughness=e.roughness),void 0!==e.metalness&&(o.metalness=e.metalness),void 0!==e.sheen&&(o.sheen=e.sheen),void 0!==e.sheenColor&&(o.sheenColor=(new Color).setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(o.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==o.emissive&&o.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==o.specular&&o.specular.setHex(e.specular),void 0!==e.specularIntensity&&(o.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==o.specularColor&&o.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(o.shininess=e.shininess),void 0!==e.clearcoat&&(o.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(o.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.dispersion&&(o.dispersion=e.dispersion),void 0!==e.iridescence&&(o.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(o.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRange&&(o.iridescenceThicknessRange=e.iridescenceThicknessRange),void 0!==e.transmission&&(o.transmission=e.transmission),void 0!==e.thickness&&(o.thickness=e.thickness),void 0!==e.attenuationDistance&&(o.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==o.attenuationColor&&o.attenuationColor.setHex(e.attenuationColor),void 0!==e.anisotropy&&(o.anisotropy=e.anisotropy),void 0!==e.anisotropyRotation&&(o.anisotropyRotation=e.anisotropyRotation),void 0!==e.fog&&(o.fog=e.fog),void 0!==e.flatShading&&(o.flatShading=e.flatShading),void 0!==e.blending&&(o.blending=e.blending),void 0!==e.combine&&(o.combine=e.combine),void 0!==e.side&&(o.side=e.side),void 0!==e.shadowSide&&(o.shadowSide=e.shadowSide),void 0!==e.opacity&&(o.opacity=e.opacity),void 0!==e.transparent&&(o.transparent=e.transparent),void 0!==e.alphaTest&&(o.alphaTest=e.alphaTest),void 0!==e.alphaHash&&(o.alphaHash=e.alphaHash),void 0!==e.depthFunc&&(o.depthFunc=e.depthFunc),void 0!==e.depthTest&&(o.depthTest=e.depthTest),void 0!==e.depthWrite&&(o.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(o.colorWrite=e.colorWrite),void 0!==e.blendSrc&&(o.blendSrc=e.blendSrc),void 0!==e.blendDst&&(o.blendDst=e.blendDst),void 0!==e.blendEquation&&(o.blendEquation=e.blendEquation),void 0!==e.blendSrcAlpha&&(o.blendSrcAlpha=e.blendSrcAlpha),void 0!==e.blendDstAlpha&&(o.blendDstAlpha=e.blendDstAlpha),void 0!==e.blendEquationAlpha&&(o.blendEquationAlpha=e.blendEquationAlpha),void 0!==e.blendColor&&void 0!==o.blendColor&&o.blendColor.setHex(e.blendColor),void 0!==e.blendAlpha&&(o.blendAlpha=e.blendAlpha),void 0!==e.stencilWriteMask&&(o.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(o.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(o.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(o.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(o.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(o.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(o.stencilZPass=e.stencilZPass),void 0!==e.stencilWrite&&(o.stencilWrite=e.stencilWrite),void 0!==e.wireframe&&(o.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(o.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(o.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(o.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(o.rotation=e.rotation),void 0!==e.linewidth&&(o.linewidth=e.linewidth),void 0!==e.dashSize&&(o.dashSize=e.dashSize),void 0!==e.gapSize&&(o.gapSize=e.gapSize),void 0!==e.scale&&(o.scale=e.scale),void 0!==e.polygonOffset&&(o.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(o.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(o.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(o.dithering=e.dithering),void 0!==e.alphaToCoverage&&(o.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(o.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.forceSinglePass&&(o.forceSinglePass=e.forceSinglePass),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.toneMapped&&(o.toneMapped=e.toneMapped),void 0!==e.userData&&(o.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?o.vertexColors=e.vertexColors>0:o.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const a in e.uniforms){const t=e.uniforms[a];switch(o.uniforms[a]={},t.type){case"t":o.uniforms[a].value=i(t.value);break;case"c":o.uniforms[a].value=(new Color).setHex(t.value);break;case"v2":o.uniforms[a].value=(new Vector2).fromArray(t.value);break;case"v3":o.uniforms[a].value=(new Vector3).fromArray(t.value);break;case"v4":o.uniforms[a].value=(new Vector4).fromArray(t.value);break;case"m3":o.uniforms[a].value=(new Matrix3).fromArray(t.value);break;case"m4":o.uniforms[a].value=(new Matrix4).fromArray(t.value);break;default:o.uniforms[a].value=t.value}}if(void 0!==e.defines&&(o.defines=e.defines),void 0!==e.vertexShader&&(o.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(o.fragmentShader=e.fragmentShader),void 0!==e.glslVersion&&(o.glslVersion=e.glslVersion),void 0!==e.extensions)for(const a in e.extensions)o.extensions[a]=e.extensions[a];if(void 0!==e.lights&&(o.lights=e.lights),void 0!==e.clipping&&(o.clipping=e.clipping),void 0!==e.size&&(o.size=e.size),void 0!==e.sizeAttenuation&&(o.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(o.map=i(e.map)),void 0!==e.matcap&&(o.matcap=i(e.matcap)),void 0!==e.alphaMap&&(o.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(o.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(o.bumpScale=e.bumpScale),void 0!==e.normalMap&&(o.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(o.normalMapType=e.normalMapType),void 0!==e.normalScale){let a=e.normalScale;!1===Array.isArray(a)&&(a=[a,a]),o.normalScale=(new Vector2).fromArray(a)}return void 0!==e.displacementMap&&(o.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(o.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(o.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(o.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(o.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(o.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(o.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(o.specularMap=i(e.specularMap)),void 0!==e.specularIntensityMap&&(o.specularIntensityMap=i(e.specularIntensityMap)),void 0!==e.specularColorMap&&(o.specularColorMap=i(e.specularColorMap)),void 0!==e.envMap&&(o.envMap=i(e.envMap)),void 0!==e.envMapRotation&&o.envMapRotation.fromArray(e.envMapRotation),void 0!==e.envMapIntensity&&(o.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(o.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(o.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(o.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(o.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(o.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(o.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(o.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(o.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(o.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(o.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(o.clearcoatNormalScale=(new Vector2).fromArray(e.clearcoatNormalScale)),void 0!==e.iridescenceMap&&(o.iridescenceMap=i(e.iridescenceMap)),void 0!==e.iridescenceThicknessMap&&(o.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),void 0!==e.transmissionMap&&(o.transmissionMap=i(e.transmissionMap)),void 0!==e.thicknessMap&&(o.thicknessMap=i(e.thicknessMap)),void 0!==e.anisotropyMap&&(o.anisotropyMap=i(e.anisotropyMap)),void 0!==e.sheenColorMap&&(o.sheenColorMap=i(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(o.sheenRoughnessMap=i(e.sheenRoughnessMap)),o}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return MaterialLoader.createMaterialFromType(e)}static createMaterialFromType(e){return new{ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material}[e]}}export{MaterialLoader};
//# sourceMappingURL=MaterialLoader.js.map