{"version":3,"file":"node_modules/three/src/loaders/ObjectLoader.js","names":["UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","InstancedBufferAttribute","Color","Object3D","Group","InstancedMesh","BatchedMesh","Sprite","Points","Line","LineLoop","LineSegments","LOD","Mesh","SkinnedMesh","Bone","Skeleton","Shape","Fog","FogExp2","HemisphereLight","SpotLight","PointLight","DirectionalLight","AmbientLight","RectAreaLight","LightProbe","OrthographicCamera","PerspectiveCamera","Scene","CubeTexture","Texture","Source","DataTexture","ImageLoader","LoadingManager","AnimationClip","MaterialLoader","LoaderUtils","BufferGeometryLoader","Loader","FileLoader","Geometries","getTypedArray","Box3","Sphere","ObjectLoader","constructor","manager","super","load","url","onLoad","onProgress","onError","scope","this","path","extractUrlBase","resourcePath","loader","setPath","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","json","JSON","parse","error","undefined","console","message","metadata","type","toLowerCase","Error","loadAsync","parseAsync","animations","parseAnimations","shapes","parseShapes","geometries","parseGeometries","images","parseImages","object","textures","parseTextures","materials","parseMaterials","parseObject","skeletons","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","uuid","data","HTMLImageElement","parseImagesAsync","i","l","length","shape","fromJSON","bones","traverse","child","isBone","skeleton","bufferGeometryLoader","geometry","warn","name","userData","cache","setTextures","clip","deserializeImage","image","itemStart","itemEnd","itemError","loadImage","test","width","height","setCrossOrigin","crossOrigin","il","Array","isArray","imageArray","j","jl","deserializedImage","push","async","currentUrl","parseConstant","value","source","texture","needsUpdate","mapping","TEXTURE_MAPPING","channel","offset","fromArray","repeat","center","rotation","wrap","wrapS","TEXTURE_WRAPPING","wrapT","format","internalFormat","colorSpace","minFilter","TEXTURE_FILTER","magFilter","anisotropy","flipY","generateMipmaps","premultiplyAlpha","unpackAlignment","compareFunction","material","getGeometry","getMaterial","array","getTexture","background","Number","isInteger","environment","fog","color","near","far","density","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","fov","aspect","focus","zoom","filmGauge","filmOffset","view","Object","assign","left","right","top","bottom","intensity","target","distance","decay","angle","penumbra","groundColor","bindMode","bindMatrix","count","instanceMatrix","instanceColor","Float32Array","itemSize","maxInstanceCount","maxVertexCount","maxIndexCount","perObjectFrustumCulled","sortObjects","_drawRanges","drawRanges","_reservedRanges","reservedRanges","_geometryInfo","geometryInfo","map","info","box","sphere","boundingBox","boundingSphere","_instanceInfo","instanceInfo","_availableInstanceIds","_availableGeometryIds","_nextIndexStart","nextIndexStart","_nextVertexStart","nextVertexStart","_geometryCount","geometryCount","_maxInstanceCount","_maxVertexCount","_maxIndexCount","_geometryInitialized","geometryInitialized","_matricesTexture","matricesTexture","_indirectTexture","indirectTexture","colorsTexture","_colorsTexture","matrix","matrixAutoUpdate","decompose","position","quaternion","scale","up","castShadow","receiveShadow","shadow","bias","normalBias","radius","mapSize","camera","visible","frustumCulled","renderOrder","layers","mask","children","add","objectAnimations","autoUpdate","levels","level","getObjectByProperty","addLevel","hysteresis","keys","isSkinnedMesh","bind","isDirectionalLight","isSpotLight"],"sources":["node_modules/three/src/loaders/ObjectLoader.js"],"sourcesContent":["import {\n\tUVMapping,\n\tCubeReflectionMapping,\n\tCubeRefractionMapping,\n\tEquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping,\n\tCubeUVReflectionMapping,\n\n\tRepeatWrapping,\n\tClampToEdgeWrapping,\n\tMirroredRepeatWrapping,\n\n\tNearestFilter,\n\tNearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter,\n\tLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter\n} from '../constants.js';\nimport { InstancedBufferAttribute } from '../core/InstancedBufferAttribute.js';\nimport { Color } from '../math/Color.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Group } from '../objects/Group.js';\nimport { InstancedMesh } from '../objects/InstancedMesh.js';\nimport { BatchedMesh } from '../objects/BatchedMesh.js';\nimport { Sprite } from '../objects/Sprite.js';\nimport { Points } from '../objects/Points.js';\nimport { Line } from '../objects/Line.js';\nimport { LineLoop } from '../objects/LineLoop.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { LOD } from '../objects/LOD.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { SkinnedMesh } from '../objects/SkinnedMesh.js';\nimport { Bone } from '../objects/Bone.js';\nimport { Skeleton } from '../objects/Skeleton.js';\nimport { Shape } from '../extras/core/Shape.js';\nimport { Fog } from '../scenes/Fog.js';\nimport { FogExp2 } from '../scenes/FogExp2.js';\nimport { HemisphereLight } from '../lights/HemisphereLight.js';\nimport { SpotLight } from '../lights/SpotLight.js';\nimport { PointLight } from '../lights/PointLight.js';\nimport { DirectionalLight } from '../lights/DirectionalLight.js';\nimport { AmbientLight } from '../lights/AmbientLight.js';\nimport { RectAreaLight } from '../lights/RectAreaLight.js';\nimport { LightProbe } from '../lights/LightProbe.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nimport { Scene } from '../scenes/Scene.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\nimport { Texture } from '../textures/Texture.js';\nimport { Source } from '../textures/Source.js';\nimport { DataTexture } from '../textures/DataTexture.js';\nimport { ImageLoader } from './ImageLoader.js';\nimport { LoadingManager } from './LoadingManager.js';\nimport { AnimationClip } from '../animation/AnimationClip.js';\nimport { MaterialLoader } from './MaterialLoader.js';\nimport { LoaderUtils } from './LoaderUtils.js';\nimport { BufferGeometryLoader } from './BufferGeometryLoader.js';\nimport { Loader } from './Loader.js';\nimport { FileLoader } from './FileLoader.js';\nimport * as Geometries from '../geometries/Geometries.js';\nimport { getTypedArray } from '../utils.js';\nimport { Box3 } from '../math/Box3.js';\nimport { Sphere } from '../math/Sphere.js';\n\n/**\n * A loader for loading a JSON resource in the [JSON Object/Scene format]{@link https://github.com/mrdoob/three.js/wiki/JSON-Object-Scene-format-4}.\n * The files are internally loaded via {@link FileLoader}.\n *\n * ```js\n * const loader = new THREE.ObjectLoader();\n * const obj = await loader.loadAsync( 'models/json/example.json' );\n * scene.add( obj );\n *\n * // Alternatively, to parse a previously loaded JSON structure\n * const object = await loader.parseAsync( a_json_object );\n * scene.add( object );\n * ```\n *\n * @augments Loader\n */\nclass ObjectLoader extends Loader {\n\n\t/**\n\t * Constructs a new object loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and pass the loaded 3D object to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(Object3D)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Async version of {@link ObjectLoader#load}.\n\t *\n\t * @async\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @return {Promise<Object3D>} A Promise that resolves with the loaded 3D object.\n\t */\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\t/**\n\t * Parses the given JSON. This is used internally by {@link ObjectLoader#load}\n\t * but can also be used directly to parse a previously loaded JSON structure.\n\t *\n\t * @param {Object} json - The serialized 3D object.\n\t * @param {onLoad} onLoad - Executed when all resources (e.g. textures) have been fully loaded.\n\t * @return {Object3D} The parsed 3D object.\n\t */\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\t/**\n\t * Async version of {@link ObjectLoader#parse}.\n\t *\n\t * @param {Object} json - The serialized 3D object.\n\t * @return {Promise<Object3D>} A Promise that resolves with the parsed 3D object.\n\t */\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\t// internals\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._geometryInfo = data.geometryInfo.map( info => {\n\n\t\t\t\t\tlet box = null;\n\t\t\t\t\tlet sphere = null;\n\t\t\t\t\tif ( info.boundingBox !== undefined ) {\n\n\t\t\t\t\t\tbox = new Box3().fromJSON( info.boundingBox );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( info.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\tsphere = new Sphere().fromJSON( info.boundingSphere );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...info,\n\t\t\t\t\t\tboundingBox: box,\n\t\t\t\t\t\tboundingSphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\t\t\t\tobject._instanceInfo = data.instanceInfo;\n\n\t\t\t\tobject._availableInstanceIds = data._availableInstanceIds;\n\t\t\t\tobject._availableGeometryIds = data._availableGeometryIds;\n\n\t\t\t\tobject._nextIndexStart = data.nextIndexStart;\n\t\t\t\tobject._nextVertexStart = data.nextVertexStart;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tobject._indirectTexture = getTexture( data.indirectTexture.uuid );\n\n\t\t\t\tif ( data.colorsTexture !== undefined ) {\n\n\t\t\t\t\tobject._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.boundingSphere !== undefined ) {\n\n\t\t\t\t\tobject.boundingSphere = new Sphere().fromJSON( data.boundingSphere );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.boundingBox !== undefined ) {\n\n\t\t\t\t\tobject.boundingBox = new Box3().fromJSON( data.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nexport { ObjectLoader };\n"],"mappings":"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","ignoreList":[]}