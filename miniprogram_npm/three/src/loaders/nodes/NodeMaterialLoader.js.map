{"version":3,"file":"node_modules/three/src/loaders/nodes/NodeMaterialLoader.js","names":["MaterialLoader","NodeMaterialLoader","constructor","manager","super","this","nodes","nodeMaterials","parse","json","material","inputNodes","property","uuid","setNodes","value","setNodeMaterials","createMaterialFromType","type","materialClass","undefined"],"sources":["node_modules/three/src/loaders/nodes/NodeMaterialLoader.js"],"sourcesContent":["import { MaterialLoader } from '../../loaders/MaterialLoader.js';\n\n/**\n * A special type of material loader for loading node materials.\n *\n * @augments MaterialLoader\n */\nclass NodeMaterialLoader extends MaterialLoader {\n\n\t/**\n\t * Constructs a new node material loader.\n\t *\n\t * @param {LoadingManager} [manager] - A reference to a loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\t/**\n\t\t * Represents a dictionary of node types.\n\t\t *\n\t\t * @type {Object<string,Node.constructor>}\n\t\t */\n\t\tthis.nodes = {};\n\n\t\t/**\n\t\t * Represents a dictionary of node material types.\n\t\t *\n\t\t * @type {Object<string,NodeMaterial.constructor>}\n\t\t */\n\t\tthis.nodeMaterials = {};\n\n\t}\n\n\t/**\n\t * Parses the node material from the given JSON.\n\t *\n\t * @param {Object} json - The JSON definition\n\t * @return {NodeMaterial}. The parsed material.\n\t */\n\tparse( json ) {\n\n\t\tconst material = super.parse( json );\n\n\t\tconst nodes = this.nodes;\n\t\tconst inputNodes = json.inputNodes;\n\n\t\tfor ( const property in inputNodes ) {\n\n\t\t\tconst uuid = inputNodes[ property ];\n\n\t\t\tmaterial[ property ] = nodes[ uuid ];\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\t/**\n\t * Defines the dictionary of node types.\n\t *\n\t * @param {Object<string,Node.constructor>} value - The node library defined as `<classname,class>`.\n\t * @return {NodeLoader} A reference to this loader.\n\t */\n\tsetNodes( value ) {\n\n\t\tthis.nodes = value;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Defines the dictionary of node material types.\n\t *\n\t * @param {Object<string,NodeMaterial.constructor>} value - The node material library defined as `<classname,class>`.\n\t * @return {NodeLoader} A reference to this loader.\n\t */\n\tsetNodeMaterials( value ) {\n\n\t\tthis.nodeMaterials = value;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Creates a node material from the given type.\n\t *\n\t * @param {string} type - The node material type.\n\t * @return {Node} The created node material instance.\n\t */\n\tcreateMaterialFromType( type ) {\n\n\t\tconst materialClass = this.nodeMaterials[ type ];\n\n\t\tif ( materialClass !== undefined ) {\n\n\t\t\treturn new materialClass();\n\n\t\t}\n\n\t\treturn super.createMaterialFromType( type );\n\n\t}\n\n}\n\nexport default NodeMaterialLoader;\n"],"mappings":"OAASA,mBAAsB,kCAO/B,MAAMC,2BAA2BD,eAOhC,WAAAE,CAAaC,GAEZC,MAAOD,GAOPE,KAAKC,MAAQ,CAAC,EAOdD,KAAKE,cAAgB,CAAC,CAEvB,CAQA,KAAAC,CAAOC,GAEN,MAAMC,EAAWN,MAAMI,MAAOC,GAExBH,EAAQD,KAAKC,MACbK,EAAaF,EAAKE,WAExB,IAAM,MAAMC,KAAYD,EAAa,CAEpC,MAAME,EAAOF,EAAYC,GAEzBF,EAAUE,GAAaN,EAAOO,EAE/B,CAEA,OAAOH,CAER,CAQA,QAAAI,CAAUC,GAGT,OADAV,KAAKC,MAAQS,EACNV,IAER,CAQA,gBAAAW,CAAkBD,GAGjB,OADAV,KAAKE,cAAgBQ,EACdV,IAER,CAQA,sBAAAY,CAAwBC,GAEvB,MAAMC,EAAgBd,KAAKE,cAAeW,GAE1C,YAAuBE,IAAlBD,EAEG,IAAIA,EAILf,MAAMa,uBAAwBC,EAEtC,iBAIcjB","ignoreList":[]}