{"version":3,"file":"node_modules/three/src/materials/nodes/LineBasicNodeMaterial.js","names":["NodeMaterial","LineBasicMaterial","_defaultValues","LineBasicNodeMaterial","type","constructor","parameters","super","this","isLineBasicNodeMaterial","setDefaultValues","setValues"],"sources":["node_modules/three/src/materials/nodes/LineBasicNodeMaterial.js"],"sourcesContent":["import NodeMaterial from './NodeMaterial.js';\n\nimport { LineBasicMaterial } from '../LineBasicMaterial.js';\n\nconst _defaultValues = /*@__PURE__*/ new LineBasicMaterial();\n\n/**\n * Node material version of {@link LineBasicMaterial}.\n *\n * @augments NodeMaterial\n */\nclass LineBasicNodeMaterial extends NodeMaterial {\n\n\tstatic get type() {\n\n\t\treturn 'LineBasicNodeMaterial';\n\n\t}\n\n\t/**\n\t * Constructs a new line basic node material.\n\t *\n\t * @param {Object} [parameters] - The configuration parameter.\n\t */\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isLineBasicNodeMaterial = true;\n\n\t\tthis.setDefaultValues( _defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nexport default LineBasicNodeMaterial;\n"],"mappings":"OAAOA,iBAAkB,2BAEhBC,sBAAyB,0BAElC,MAAMC,eAA+B,IAAID,kBAOzC,MAAME,8BAA8BH,aAEnC,eAAWI,GAEV,MAAO,uBAER,CAOA,WAAAC,CAAaC,GAEZC,QASAC,KAAKC,yBAA0B,EAE/BD,KAAKE,iBAAkBR,gBAEvBM,KAAKG,UAAWL,EAEjB,iBAIcH","ignoreList":[]}