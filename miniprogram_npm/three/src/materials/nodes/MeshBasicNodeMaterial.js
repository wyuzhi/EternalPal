import NodeMaterial from"./NodeMaterial.js";import{materialLightMap}from"../../nodes/accessors/MaterialNode.js";import BasicEnvironmentNode from"../../nodes/lighting/BasicEnvironmentNode.js";import BasicLightMapNode from"../../nodes/lighting/BasicLightMapNode.js";import BasicLightingModel from"../../nodes/functions/BasicLightingModel.js";import{normalViewGeometry}from"../../nodes/accessors/Normal.js";import{diffuseColor}from"../../nodes/core/PropertyNode.js";import{directionToFaceDirection}from"../../nodes/display/FrontFacingNode.js";import{MeshBasicMaterial}from"../MeshBasicMaterial.js";const _defaultValues=new MeshBasicMaterial;class MeshBasicNodeMaterial extends NodeMaterial{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(_defaultValues),this.setValues(e)}setupNormal(){return directionToFaceDirection(normalViewGeometry)}setupEnvironment(e){const i=super.setupEnvironment(e);return i?new BasicEnvironmentNode(i):null}setupLightMap(e){let i=null;return e.material.lightMap&&(i=new BasicLightMapNode(materialLightMap)),i}setupOutgoingLight(){return diffuseColor.rgb}setupLightingModel(){return new BasicLightingModel}}export default MeshBasicNodeMaterial;
//# sourceMappingURL=MeshBasicNodeMaterial.js.map