{"version":3,"file":"node_modules/three/src/materials/nodes/MeshBasicNodeMaterial.js","names":["NodeMaterial","materialLightMap","BasicEnvironmentNode","BasicLightMapNode","BasicLightingModel","normalViewGeometry","diffuseColor","directionToFaceDirection","MeshBasicMaterial","_defaultValues","MeshBasicNodeMaterial","type","constructor","parameters","super","this","isMeshBasicNodeMaterial","lights","setDefaultValues","setValues","setupNormal","setupEnvironment","builder","envNode","setupLightMap","node","material","lightMap","setupOutgoingLight","rgb","setupLightingModel"],"sources":["node_modules/three/src/materials/nodes/MeshBasicNodeMaterial.js"],"sourcesContent":["import NodeMaterial from './NodeMaterial.js';\nimport { materialLightMap } from '../../nodes/accessors/MaterialNode.js';\nimport BasicEnvironmentNode from '../../nodes/lighting/BasicEnvironmentNode.js';\nimport BasicLightMapNode from '../../nodes/lighting/BasicLightMapNode.js';\nimport BasicLightingModel from '../../nodes/functions/BasicLightingModel.js';\nimport { normalViewGeometry } from '../../nodes/accessors/Normal.js';\nimport { diffuseColor } from '../../nodes/core/PropertyNode.js';\nimport { directionToFaceDirection } from '../../nodes/display/FrontFacingNode.js';\n\nimport { MeshBasicMaterial } from '../MeshBasicMaterial.js';\n\nconst _defaultValues = /*@__PURE__*/ new MeshBasicMaterial();\n\n/**\n * Node material version of {@link MeshBasicMaterial}.\n *\n * @augments NodeMaterial\n */\nclass MeshBasicNodeMaterial extends NodeMaterial {\n\n\tstatic get type() {\n\n\t\treturn 'MeshBasicNodeMaterial';\n\n\t}\n\n\t/**\n\t * Constructs a new mesh basic node material.\n\t *\n\t * @param {Object} [parameters] - The configuration parameter.\n\t */\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isMeshBasicNodeMaterial = true;\n\n\t\t/**\n\t\t * Although the basic material is by definition unlit, we set\n\t\t * this property to `true` since we use a lighting model to compute\n\t\t * the outgoing light of the fragment shader.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.lights = true;\n\n\t\tthis.setDefaultValues( _defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\t/**\n\t * Basic materials are not affected by normal and bump maps so we\n\t * return by default {@link normalViewGeometry}.\n\t *\n\t * @return {Node<vec3>} The normal node.\n\t */\n\tsetupNormal() {\n\n\t\treturn directionToFaceDirection( normalViewGeometry ); // see #28839\n\n\t}\n\n\t/**\n\t * Overwritten since this type of material uses {@link BasicEnvironmentNode}\n\t * to implement the default environment mapping.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {?BasicEnvironmentNode<vec3>} The environment node.\n\t */\n\tsetupEnvironment( builder ) {\n\n\t\tconst envNode = super.setupEnvironment( builder );\n\n\t\treturn envNode ? new BasicEnvironmentNode( envNode ) : null;\n\n\t}\n\n\t/**\n\t * This method must be overwritten since light maps are evaluated\n\t * with a special scaling factor for basic materials.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {?BasicLightMapNode<vec3>} The light map node.\n\t */\n\tsetupLightMap( builder ) {\n\n\t\tlet node = null;\n\n\t\tif ( builder.material.lightMap ) {\n\n\t\t\tnode = new BasicLightMapNode( materialLightMap );\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n\t/**\n\t * The material overwrites this method because `lights` is set to `true` but\n\t * we still want to return the diffuse color as the outgoing light.\n\t *\n\t * @return {Node<vec3>} The outgoing light node.\n\t */\n\tsetupOutgoingLight() {\n\n\t\treturn diffuseColor.rgb;\n\n\t}\n\n\t/**\n\t * Setups the lighting model.\n\t *\n\t * @return {BasicLightingModel} The lighting model.\n\t */\n\tsetupLightingModel() {\n\n\t\treturn new BasicLightingModel();\n\n\t}\n\n}\n\nexport default MeshBasicNodeMaterial;\n"],"mappings":"OAAOA,iBAAkB,2BAChBC,qBAAwB,+CAC1BC,yBAA0B,sDAC1BC,sBAAuB,mDACvBC,uBAAwB,qDACtBC,uBAA0B,yCAC1BC,iBAAoB,0CACpBC,6BAAgC,gDAEhCC,sBAAyB,0BAElC,MAAMC,eAA+B,IAAID,kBAOzC,MAAME,8BAA8BV,aAEnC,eAAWW,GAEV,MAAO,uBAER,CAOA,WAAAC,CAAaC,GAEZC,QASAC,KAAKC,yBAA0B,EAU/BD,KAAKE,QAAS,EAEdF,KAAKG,iBAAkBT,gBAEvBM,KAAKI,UAAWN,EAEjB,CAQA,WAAAO,GAEC,OAAOb,yBAA0BF,mBAElC,CASA,gBAAAgB,CAAkBC,GAEjB,MAAMC,EAAUT,MAAMO,iBAAkBC,GAExC,OAAOC,EAAU,IAAIrB,qBAAsBqB,GAAY,IAExD,CASA,aAAAC,CAAeF,GAEd,IAAIG,EAAO,KAQX,OANKH,EAAQI,SAASC,WAErBF,EAAO,IAAItB,kBAAmBF,mBAIxBwB,CAER,CAQA,kBAAAG,GAEC,OAAOtB,aAAauB,GAErB,CAOA,kBAAAC,GAEC,OAAO,IAAI1B,kBAEZ,iBAIcM","ignoreList":[]}