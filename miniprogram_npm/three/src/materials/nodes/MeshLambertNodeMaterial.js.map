{"version":3,"file":"node_modules/three/src/materials/nodes/MeshLambertNodeMaterial.js","names":["NodeMaterial","BasicEnvironmentNode","PhongLightingModel","MeshLambertMaterial","_defaultValues","MeshLambertNodeMaterial","type","constructor","parameters","super","this","isMeshLambertNodeMaterial","lights","setDefaultValues","setValues","setupEnvironment","builder","envNode","setupLightingModel"],"sources":["node_modules/three/src/materials/nodes/MeshLambertNodeMaterial.js"],"sourcesContent":["import NodeMaterial from './NodeMaterial.js';\nimport BasicEnvironmentNode from '../../nodes/lighting/BasicEnvironmentNode.js';\nimport PhongLightingModel from '../../nodes/functions/PhongLightingModel.js';\n\nimport { MeshLambertMaterial } from '../MeshLambertMaterial.js';\n\nconst _defaultValues = /*@__PURE__*/ new MeshLambertMaterial();\n\n/**\n * Node material version of {@link MeshLambertMaterial}.\n *\n * @augments NodeMaterial\n */\nclass MeshLambertNodeMaterial extends NodeMaterial {\n\n\tstatic get type() {\n\n\t\treturn 'MeshLambertNodeMaterial';\n\n\t}\n\n\t/**\n\t * Constructs a new mesh lambert node material.\n\t *\n\t * @param {Object} [parameters] - The configuration parameter.\n\t */\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isMeshLambertNodeMaterial = true;\n\n\t\t/**\n\t\t * Set to `true` because lambert materials react on lights.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.lights = true;\n\n\t\tthis.setDefaultValues( _defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\t/**\n\t * Overwritten since this type of material uses {@link BasicEnvironmentNode}\n\t * to implement the default environment mapping.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {?BasicEnvironmentNode<vec3>} The environment node.\n\t */\n\tsetupEnvironment( builder ) {\n\n\t\tconst envNode = super.setupEnvironment( builder );\n\n\t\treturn envNode ? new BasicEnvironmentNode( envNode ) : null;\n\n\t}\n\n\t/**\n\t * Setups the lighting model.\n\t *\n\t * @return {PhongLightingModel} The lighting model.\n\t */\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new PhongLightingModel( false ); // ( specular ) -> force lambert\n\n\t}\n\n}\n\nexport default MeshLambertNodeMaterial;\n"],"mappings":"OAAOA,iBAAkB,2BAClBC,yBAA0B,sDAC1BC,uBAAwB,qDAEtBC,wBAA2B,4BAEpC,MAAMC,eAA+B,IAAID,oBAOzC,MAAME,gCAAgCL,aAErC,eAAWM,GAEV,MAAO,yBAER,CAOA,WAAAC,CAAaC,GAEZC,QASAC,KAAKC,2BAA4B,EAQjCD,KAAKE,QAAS,EAEdF,KAAKG,iBAAkBT,gBAEvBM,KAAKI,UAAWN,EAEjB,CASA,gBAAAO,CAAkBC,GAEjB,MAAMC,EAAUR,MAAMM,iBAAkBC,GAExC,OAAOC,EAAU,IAAIhB,qBAAsBgB,GAAY,IAExD,CAOA,kBAAAC,GAEC,OAAO,IAAIhB,oBAAoB,EAEhC,iBAIcG","ignoreList":[]}