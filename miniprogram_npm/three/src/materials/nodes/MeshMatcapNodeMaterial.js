import NodeMaterial from"./NodeMaterial.js";import{materialReference}from"../../nodes/accessors/MaterialReferenceNode.js";import{diffuseColor}from"../../nodes/core/PropertyNode.js";import{vec3}from"../../nodes/tsl/TSLBase.js";import{mix}from"../../nodes/math/MathNode.js";import{matcapUV}from"../../nodes/utils/MatcapUV.js";import{MeshMatcapMaterial}from"../MeshMatcapMaterial.js";const _defaultValues=new MeshMatcapMaterial;class MeshMatcapNodeMaterial extends NodeMaterial{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(_defaultValues),this.setValues(e)}setupVariants(e){const a=matcapUV;let t;t=e.material.matcap?materialReference("matcap","texture").context({getUV:()=>a}):vec3(mix(.2,.8,a.y)),diffuseColor.rgb.mulAssign(t.rgb)}}export default MeshMatcapNodeMaterial;
//# sourceMappingURL=MeshMatcapNodeMaterial.js.map