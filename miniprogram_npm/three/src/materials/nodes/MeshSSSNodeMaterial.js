import MeshPhysicalNodeMaterial from"./MeshPhysicalNodeMaterial.js";import PhysicalLightingModel from"../../nodes/functions/PhysicalLightingModel.js";import{normalView}from"../../nodes/accessors/Normal.js";import{positionViewDirection}from"../../nodes/accessors/Position.js";import{float,vec3}from"../../nodes/tsl/TSLBase.js";class SSSLightingModel extends PhysicalLightingModel{constructor(e=!1,s=!1,t=!1,i=!1,o=!1,n=!1,h=!1){super(e,s,t,i,o,n),this.useSSS=h}direct({lightDirection:e,lightColor:s,reflectedLight:t},i){if(!0===this.useSSS){const o=i.material,{thicknessColorNode:n,thicknessDistortionNode:h,thicknessAmbientNode:r,thicknessAttenuationNode:c,thicknessPowerNode:l,thicknessScaleNode:d}=o,a=e.add(normalView.mul(h)).normalize(),u=float(positionViewDirection.dot(a.negate()).saturate().pow(l).mul(d)),S=vec3(u.add(r).mul(n));t.directDiffuse.addAssign(S.mul(c.mul(s)))}super.direct({lightDirection:e,lightColor:s,reflectedLight:t},i)}}class MeshSSSNodeMaterial extends MeshPhysicalNodeMaterial{static get type(){return"MeshSSSNodeMaterial"}constructor(e){super(e),this.thicknessColorNode=null,this.thicknessDistortionNode=float(.1),this.thicknessAmbientNode=float(0),this.thicknessAttenuationNode=float(.1),this.thicknessPowerNode=float(2),this.thicknessScaleNode=float(10)}get useSSS(){return null!==this.thicknessColorNode}setupLightingModel(){return new SSSLightingModel(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion,this.useSSS)}copy(e){return this.thicknessColorNode=e.thicknessColorNode,this.thicknessDistortionNode=e.thicknessDistortionNode,this.thicknessAmbientNode=e.thicknessAmbientNode,this.thicknessAttenuationNode=e.thicknessAttenuationNode,this.thicknessPowerNode=e.thicknessPowerNode,this.thicknessScaleNode=e.thicknessScaleNode,super.copy(e)}}export default MeshSSSNodeMaterial;
//# sourceMappingURL=MeshSSSNodeMaterial.js.map