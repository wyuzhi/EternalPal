{"version":3,"file":"node_modules/three/src/materials/nodes/MeshToonNodeMaterial.js","names":["NodeMaterial","ToonLightingModel","MeshToonMaterial","_defaultValues","MeshToonNodeMaterial","type","constructor","parameters","super","this","isMeshToonNodeMaterial","lights","setDefaultValues","setValues","setupLightingModel"],"sources":["node_modules/three/src/materials/nodes/MeshToonNodeMaterial.js"],"sourcesContent":["import NodeMaterial from './NodeMaterial.js';\nimport ToonLightingModel from '../../nodes/functions/ToonLightingModel.js';\n\nimport { MeshToonMaterial } from '../MeshToonMaterial.js';\n\nconst _defaultValues = /*@__PURE__*/ new MeshToonMaterial();\n\n/**\n * Node material version of {@link MeshToonMaterial}.\n *\n * @augments NodeMaterial\n */\nclass MeshToonNodeMaterial extends NodeMaterial {\n\n\tstatic get type() {\n\n\t\treturn 'MeshToonNodeMaterial';\n\n\t}\n\n\t/**\n\t * Constructs a new mesh toon node material.\n\t *\n\t * @param {Object} [parameters] - The configuration parameter.\n\t */\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isMeshToonNodeMaterial = true;\n\n\t\t/**\n\t\t * Set to `true` because toon materials react on lights.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.lights = true;\n\n\t\tthis.setDefaultValues( _defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\t/**\n\t * Setups the lighting model.\n\t *\n\t * @return {ToonLightingModel} The lighting model.\n\t */\n\tsetupLightingModel( /*builder*/ ) {\n\n\t\treturn new ToonLightingModel();\n\n\t}\n\n}\n\nexport default MeshToonNodeMaterial;\n"],"mappings":"OAAOA,iBAAkB,2BAClBC,sBAAuB,oDAErBC,qBAAwB,yBAEjC,MAAMC,eAA+B,IAAID,iBAOzC,MAAME,6BAA6BJ,aAElC,eAAWK,GAEV,MAAO,sBAER,CAOA,WAAAC,CAAaC,GAEZC,QASAC,KAAKC,wBAAyB,EAQ9BD,KAAKE,QAAS,EAEdF,KAAKG,iBAAkBT,gBAEvBM,KAAKI,UAAWN,EAEjB,CAOA,kBAAAO,GAEC,OAAO,IAAIb,iBAEZ,iBAIcG","ignoreList":[]}