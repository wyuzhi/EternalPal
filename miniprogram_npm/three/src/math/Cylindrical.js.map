{"version":3,"file":"node_modules/three/src/math/Cylindrical.js","names":["Cylindrical","constructor","radius","theta","y","this","set","copy","other","setFromVector3","v","setFromCartesianCoords","x","z","Math","sqrt","atan2","clone"],"sources":["node_modules/three/src/math/Cylindrical.js"],"sourcesContent":["/**\n * This class can be used to represent points in 3D space as\n * [Cylindrical coordinates]{@link https://en.wikipedia.org/wiki/Cylindrical_coordinate_system}.\n */\nclass Cylindrical {\n\n\t/**\n\t * Constructs a new cylindrical.\n\t *\n\t * @param {number} [radius=1] - The distance from the origin to a point in the x-z plane.\n\t * @param {number} [theta=0] - A counterclockwise angle in the x-z plane measured in radians from the positive z-axis.\n\t * @param {number} [y=0] - The height above the x-z plane.\n\t */\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\t/**\n\t\t * The distance from the origin to a point in the x-z plane.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.radius = radius;\n\n\t\t/**\n\t\t * A counterclockwise angle in the x-z plane measured in radians from the positive z-axis.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.theta = theta;\n\n\t\t/**\n\t\t * The height above the x-z plane.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.y = y;\n\n\t}\n\n\t/**\n\t * Sets the cylindrical components by copying the given values.\n\t *\n\t * @param {number} radius - The radius.\n\t * @param {number} theta - The theta angle.\n\t * @param {number} y - The height value.\n\t * @return {Cylindrical} A reference to this cylindrical.\n\t */\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Copies the values of the given cylindrical to this instance.\n\t *\n\t * @param {Cylindrical} other - The cylindrical to copy.\n\t * @return {Cylindrical} A reference to this cylindrical.\n\t */\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the cylindrical components from the given vector which is assumed to hold\n\t * Cartesian coordinates.\n\t *\n\t * @param {Vector3} v - The vector to set.\n\t * @return {Cylindrical} A reference to this cylindrical.\n\t */\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\t/**\n\t * Sets the cylindrical components from the given Cartesian coordinates.\n\t *\n\t * @param {number} x - The x value.\n\t * @param {number} y - The x value.\n\t * @param {number} z - The x value.\n\t * @return {Cylindrical} A reference to this cylindrical.\n\t */\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns a new cylindrical with copied values from this instance.\n\t *\n\t * @return {Cylindrical} A clone of this instance.\n\t */\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nexport { Cylindrical };\n"],"mappings":"AAIA,MAAMA,YASL,WAAAC,CAAaC,EAAS,EAAGC,EAAQ,EAAGC,EAAI,GAQvCC,KAAKH,OAASA,EAQdG,KAAKF,MAAQA,EAQbE,KAAKD,EAAIA,CAEV,CAUA,GAAAE,CAAKJ,EAAQC,EAAOC,GAMnB,OAJAC,KAAKH,OAASA,EACdG,KAAKF,MAAQA,EACbE,KAAKD,EAAIA,EAEFC,IAER,CAQA,IAAAE,CAAMC,GAML,OAJAH,KAAKH,OAASM,EAAMN,OACpBG,KAAKF,MAAQK,EAAML,MACnBE,KAAKD,EAAII,EAAMJ,EAERC,IAER,CASA,cAAAI,CAAgBC,GAEf,OAAOL,KAAKM,uBAAwBD,EAAEE,EAAGF,EAAEN,EAAGM,EAAEG,EAEjD,CAUA,sBAAAF,CAAwBC,EAAGR,EAAGS,GAM7B,OAJAR,KAAKH,OAASY,KAAKC,KAAMH,EAAIA,EAAIC,EAAIA,GACrCR,KAAKF,MAAQW,KAAKE,MAAOJ,EAAGC,GAC5BR,KAAKD,EAAIA,EAEFC,IAER,CAOA,KAAAY,GAEC,OAAO,IAAIZ,KAAKJ,aAAcM,KAAMF,KAErC,SAIQL","ignoreList":[]}