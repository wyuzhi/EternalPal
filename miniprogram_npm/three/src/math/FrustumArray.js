import{WebGLCoordinateSystem}from"../constants.js";import{Frustum}from"./Frustum.js";import{Matrix4}from"./Matrix4.js";const _projScreenMatrix=new Matrix4,_frustum=new Frustum;class FrustumArray{constructor(){this.coordinateSystem=WebGLCoordinateSystem}intersectsObject(r,e){if(!e.isArrayCamera||0===e.cameras.length)return!1;for(let t=0;t<e.cameras.length;t++){const s=e.cameras[t];if(_projScreenMatrix.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),_frustum.setFromProjectionMatrix(_projScreenMatrix,s.coordinateSystem,s.reversedDepth),_frustum.intersectsObject(r))return!0}return!1}intersectsSprite(r,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let t=0;t<e.cameras.length;t++){const s=e.cameras[t];if(_projScreenMatrix.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),_frustum.setFromProjectionMatrix(_projScreenMatrix,s.coordinateSystem,s.reversedDepth),_frustum.intersectsSprite(r))return!0}return!1}intersectsSphere(r,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let t=0;t<e.cameras.length;t++){const s=e.cameras[t];if(_projScreenMatrix.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),_frustum.setFromProjectionMatrix(_projScreenMatrix,s.coordinateSystem,s.reversedDepth),_frustum.intersectsSphere(r))return!0}return!1}intersectsBox(r,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let t=0;t<e.cameras.length;t++){const s=e.cameras[t];if(_projScreenMatrix.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),_frustum.setFromProjectionMatrix(_projScreenMatrix,s.coordinateSystem,s.reversedDepth),_frustum.intersectsBox(r))return!0}return!1}containsPoint(r,e){if(!e||!e.cameras||0===e.cameras.length)return!1;for(let t=0;t<e.cameras.length;t++){const s=e.cameras[t];if(_projScreenMatrix.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),_frustum.setFromProjectionMatrix(_projScreenMatrix,s.coordinateSystem,s.reversedDepth),_frustum.containsPoint(r))return!0}return!1}clone(){return new FrustumArray}}export{FrustumArray};
//# sourceMappingURL=FrustumArray.js.map