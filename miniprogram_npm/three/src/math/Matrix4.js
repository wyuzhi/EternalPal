import{WebGLCoordinateSystem,WebGPUCoordinateSystem}from"../constants.js";import{Vector3}from"./Vector3.js";class Matrix4{constructor(t,e,s,r,n,i,o,m,h,a,l,c,u,_,x,y){Matrix4.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,s,r,n,i,o,m,h,a,l,c,u,_,x,y)}set(t,e,s,r,n,i,o,m,h,a,l,c,u,_,x,y){const z=this.elements;return z[0]=t,z[4]=e,z[8]=s,z[12]=r,z[1]=n,z[5]=i,z[9]=o,z[13]=m,z[2]=h,z[6]=a,z[10]=l,z[14]=c,z[3]=u,z[7]=_,z[11]=x,z[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Matrix4).fromArray(this.elements)}copy(t){const e=this.elements,s=t.elements;return e[0]=s[0],e[1]=s[1],e[2]=s[2],e[3]=s[3],e[4]=s[4],e[5]=s[5],e[6]=s[6],e[7]=s[7],e[8]=s[8],e[9]=s[9],e[10]=s[10],e[11]=s[11],e[12]=s[12],e[13]=s[13],e[14]=s[14],e[15]=s[15],this}copyPosition(t){const e=this.elements,s=t.elements;return e[12]=s[12],e[13]=s[13],e[14]=s[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,s){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this}makeBasis(t,e,s){return this.set(t.x,e.x,s.x,0,t.y,e.y,s.y,0,t.z,e.z,s.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,s=t.elements,r=1/_v1.setFromMatrixColumn(t,0).length(),n=1/_v1.setFromMatrixColumn(t,1).length(),i=1/_v1.setFromMatrixColumn(t,2).length();return e[0]=s[0]*r,e[1]=s[1]*r,e[2]=s[2]*r,e[3]=0,e[4]=s[4]*n,e[5]=s[5]*n,e[6]=s[6]*n,e[7]=0,e[8]=s[8]*i,e[9]=s[9]*i,e[10]=s[10]*i,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,s=t.x,r=t.y,n=t.z,i=Math.cos(s),o=Math.sin(s),m=Math.cos(r),h=Math.sin(r),a=Math.cos(n),l=Math.sin(n);if("XYZ"===t.order){const t=i*a,s=i*l,r=o*a,n=o*l;e[0]=m*a,e[4]=-m*l,e[8]=h,e[1]=s+r*h,e[5]=t-n*h,e[9]=-o*m,e[2]=n-t*h,e[6]=r+s*h,e[10]=i*m}else if("YXZ"===t.order){const t=m*a,s=m*l,r=h*a,n=h*l;e[0]=t+n*o,e[4]=r*o-s,e[8]=i*h,e[1]=i*l,e[5]=i*a,e[9]=-o,e[2]=s*o-r,e[6]=n+t*o,e[10]=i*m}else if("ZXY"===t.order){const t=m*a,s=m*l,r=h*a,n=h*l;e[0]=t-n*o,e[4]=-i*l,e[8]=r+s*o,e[1]=s+r*o,e[5]=i*a,e[9]=n-t*o,e[2]=-i*h,e[6]=o,e[10]=i*m}else if("ZYX"===t.order){const t=i*a,s=i*l,r=o*a,n=o*l;e[0]=m*a,e[4]=r*h-s,e[8]=t*h+n,e[1]=m*l,e[5]=n*h+t,e[9]=s*h-r,e[2]=-h,e[6]=o*m,e[10]=i*m}else if("YZX"===t.order){const t=i*m,s=i*h,r=o*m,n=o*h;e[0]=m*a,e[4]=n-t*l,e[8]=r*l+s,e[1]=l,e[5]=i*a,e[9]=-o*a,e[2]=-h*a,e[6]=s*l+r,e[10]=t-n*l}else if("XZY"===t.order){const t=i*m,s=i*h,r=o*m,n=o*h;e[0]=m*a,e[4]=-l,e[8]=h*a,e[1]=t*l+n,e[5]=i*a,e[9]=s*l-r,e[2]=r*l-s,e[6]=o*a,e[10]=n*l+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(_zero,t,_one)}lookAt(t,e,s){const r=this.elements;return _z.subVectors(t,e),0===_z.lengthSq()&&(_z.z=1),_z.normalize(),_x.crossVectors(s,_z),0===_x.lengthSq()&&(1===Math.abs(s.z)?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(s,_z)),_x.normalize(),_y.crossVectors(_z,_x),r[0]=_x.x,r[4]=_y.x,r[8]=_z.x,r[1]=_x.y,r[5]=_y.y,r[9]=_z.y,r[2]=_x.z,r[6]=_y.z,r[10]=_z.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const s=t.elements,r=e.elements,n=this.elements,i=s[0],o=s[4],m=s[8],h=s[12],a=s[1],l=s[5],c=s[9],u=s[13],_=s[2],x=s[6],y=s[10],z=s[14],M=s[3],d=s[7],p=s[11],f=s[15],k=r[0],C=r[4],S=r[8],V=r[12],v=r[1],w=r[5],g=r[9],b=r[13],F=r[2],R=r[6],G=r[10],W=r[14],E=r[3],P=r[7],X=r[11],Y=r[15];return n[0]=i*k+o*v+m*F+h*E,n[4]=i*C+o*w+m*R+h*P,n[8]=i*S+o*g+m*G+h*X,n[12]=i*V+o*b+m*W+h*Y,n[1]=a*k+l*v+c*F+u*E,n[5]=a*C+l*w+c*R+u*P,n[9]=a*S+l*g+c*G+u*X,n[13]=a*V+l*b+c*W+u*Y,n[2]=_*k+x*v+y*F+z*E,n[6]=_*C+x*w+y*R+z*P,n[10]=_*S+x*g+y*G+z*X,n[14]=_*V+x*b+y*W+z*Y,n[3]=M*k+d*v+p*F+f*E,n[7]=M*C+d*w+p*R+f*P,n[11]=M*S+d*g+p*G+f*X,n[15]=M*V+d*b+p*W+f*Y,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],s=t[4],r=t[8],n=t[12],i=t[1],o=t[5],m=t[9],h=t[13],a=t[2],l=t[6],c=t[10],u=t[14];return t[3]*(+n*m*l-r*h*l-n*o*c+s*h*c+r*o*u-s*m*u)+t[7]*(+e*m*u-e*h*c+n*i*c-r*i*u+r*h*a-n*m*a)+t[11]*(+e*h*l-e*o*u-n*i*l+s*i*u+n*o*a-s*h*a)+t[15]*(-r*o*a-e*m*l+e*o*c+r*i*l-s*i*c+s*m*a)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,s){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=s),this}invert(){const t=this.elements,e=t[0],s=t[1],r=t[2],n=t[3],i=t[4],o=t[5],m=t[6],h=t[7],a=t[8],l=t[9],c=t[10],u=t[11],_=t[12],x=t[13],y=t[14],z=t[15],M=l*y*h-x*c*h+x*m*u-o*y*u-l*m*z+o*c*z,d=_*c*h-a*y*h-_*m*u+i*y*u+a*m*z-i*c*z,p=a*x*h-_*l*h+_*o*u-i*x*u-a*o*z+i*l*z,f=_*l*m-a*x*m-_*o*c+i*x*c+a*o*y-i*l*y,k=e*M+s*d+r*p+n*f;if(0===k)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/k;return t[0]=M*C,t[1]=(x*c*n-l*y*n-x*r*u+s*y*u+l*r*z-s*c*z)*C,t[2]=(o*y*n-x*m*n+x*r*h-s*y*h-o*r*z+s*m*z)*C,t[3]=(l*m*n-o*c*n-l*r*h+s*c*h+o*r*u-s*m*u)*C,t[4]=d*C,t[5]=(a*y*n-_*c*n+_*r*u-e*y*u-a*r*z+e*c*z)*C,t[6]=(_*m*n-i*y*n-_*r*h+e*y*h+i*r*z-e*m*z)*C,t[7]=(i*c*n-a*m*n+a*r*h-e*c*h-i*r*u+e*m*u)*C,t[8]=p*C,t[9]=(_*l*n-a*x*n-_*s*u+e*x*u+a*s*z-e*l*z)*C,t[10]=(i*x*n-_*o*n+_*s*h-e*x*h-i*s*z+e*o*z)*C,t[11]=(a*o*n-i*l*n-a*s*h+e*l*h+i*s*u-e*o*u)*C,t[12]=f*C,t[13]=(a*x*r-_*l*r+_*s*c-e*x*c-a*s*y+e*l*y)*C,t[14]=(_*o*r-i*x*r-_*s*m+e*x*m+i*s*y-e*o*y)*C,t[15]=(i*l*r-a*o*r+a*s*m-e*l*m-i*s*c+e*o*c)*C,this}scale(t){const e=this.elements,s=t.x,r=t.y,n=t.z;return e[0]*=s,e[4]*=r,e[8]*=n,e[1]*=s,e[5]*=r,e[9]*=n,e[2]*=s,e[6]*=r,e[10]*=n,e[3]*=s,e[7]*=r,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],s=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,s,r))}makeTranslation(t,e,s){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,s,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),s=Math.sin(t);return this.set(1,0,0,0,0,e,-s,0,0,s,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,0,s,0,0,1,0,0,-s,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),s=Math.sin(t);return this.set(e,-s,0,0,s,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const s=Math.cos(e),r=Math.sin(e),n=1-s,i=t.x,o=t.y,m=t.z,h=n*i,a=n*o;return this.set(h*i+s,h*o-r*m,h*m+r*o,0,h*o+r*m,a*o+s,a*m-r*i,0,h*m-r*o,a*m+r*i,n*m*m+s,0,0,0,0,1),this}makeScale(t,e,s){return this.set(t,0,0,0,0,e,0,0,0,0,s,0,0,0,0,1),this}makeShear(t,e,s,r,n,i){return this.set(1,s,n,0,t,1,i,0,e,r,1,0,0,0,0,1),this}compose(t,e,s){const r=this.elements,n=e._x,i=e._y,o=e._z,m=e._w,h=n+n,a=i+i,l=o+o,c=n*h,u=n*a,_=n*l,x=i*a,y=i*l,z=o*l,M=m*h,d=m*a,p=m*l,f=s.x,k=s.y,C=s.z;return r[0]=(1-(x+z))*f,r[1]=(u+p)*f,r[2]=(_-d)*f,r[3]=0,r[4]=(u-p)*k,r[5]=(1-(c+z))*k,r[6]=(y+M)*k,r[7]=0,r[8]=(_+d)*C,r[9]=(y-M)*C,r[10]=(1-(c+x))*C,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,s){const r=this.elements;let n=_v1.set(r[0],r[1],r[2]).length();const i=_v1.set(r[4],r[5],r[6]).length(),o=_v1.set(r[8],r[9],r[10]).length();this.determinant()<0&&(n=-n),t.x=r[12],t.y=r[13],t.z=r[14],_m1.copy(this);const m=1/n,h=1/i,a=1/o;return _m1.elements[0]*=m,_m1.elements[1]*=m,_m1.elements[2]*=m,_m1.elements[4]*=h,_m1.elements[5]*=h,_m1.elements[6]*=h,_m1.elements[8]*=a,_m1.elements[9]*=a,_m1.elements[10]*=a,e.setFromRotationMatrix(_m1),s.x=n,s.y=i,s.z=o,this}makePerspective(t,e,s,r,n,i,o=WebGLCoordinateSystem,m=!1){const h=this.elements,a=2*n/(e-t),l=2*n/(s-r),c=(e+t)/(e-t),u=(s+r)/(s-r);let _,x;if(m)_=n/(i-n),x=i*n/(i-n);else if(o===WebGLCoordinateSystem)_=-(i+n)/(i-n),x=-2*i*n/(i-n);else{if(o!==WebGPUCoordinateSystem)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);_=-i/(i-n),x=-i*n/(i-n)}return h[0]=a,h[4]=0,h[8]=c,h[12]=0,h[1]=0,h[5]=l,h[9]=u,h[13]=0,h[2]=0,h[6]=0,h[10]=_,h[14]=x,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,s,r,n,i,o=WebGLCoordinateSystem,m=!1){const h=this.elements,a=2/(e-t),l=2/(s-r),c=-(e+t)/(e-t),u=-(s+r)/(s-r);let _,x;if(m)_=1/(i-n),x=i/(i-n);else if(o===WebGLCoordinateSystem)_=-2/(i-n),x=-(i+n)/(i-n);else{if(o!==WebGPUCoordinateSystem)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);_=-1/(i-n),x=-n/(i-n)}return h[0]=a,h[4]=0,h[8]=0,h[12]=c,h[1]=0,h[5]=l,h[9]=0,h[13]=u,h[2]=0,h[6]=0,h[10]=_,h[14]=x,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,s=t.elements;for(let t=0;t<16;t++)if(e[t]!==s[t])return!1;return!0}fromArray(t,e=0){for(let s=0;s<16;s++)this.elements[s]=t[s+e];return this}toArray(t=[],e=0){const s=this.elements;return t[e]=s[0],t[e+1]=s[1],t[e+2]=s[2],t[e+3]=s[3],t[e+4]=s[4],t[e+5]=s[5],t[e+6]=s[6],t[e+7]=s[7],t[e+8]=s[8],t[e+9]=s[9],t[e+10]=s[10],t[e+11]=s[11],t[e+12]=s[12],t[e+13]=s[13],t[e+14]=s[14],t[e+15]=s[15],t}}const _v1=new Vector3,_m1=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3;export{Matrix4};
//# sourceMappingURL=Matrix4.js.map