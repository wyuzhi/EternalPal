import{clamp}from"./MathUtils.js";class Spherical{constructor(t=1,s=0,h=0){this.radius=t,this.phi=s,this.theta=h}set(t,s,h){return this.radius=t,this.phi=s,this.theta=h,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=clamp(this.phi,t,Math.PI-t),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,s,h){return this.radius=Math.sqrt(t*t+s*s+h*h),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,h),this.phi=Math.acos(clamp(s/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}export{Spherical};
//# sourceMappingURL=Spherical.js.map