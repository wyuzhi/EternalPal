import{clamp}from"./MathUtils.js";class Vector4{constructor(t=0,s=0,h=0,i=1){Vector4.prototype.isVector4=!0,this.x=t,this.y=s,this.z=h,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,s,h,i){return this.x=t,this.y=s,this.z=h,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;case 3:this.w=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this.w=t.w+s.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this.w=t.w-s.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const s=this.x,h=this.y,i=this.z,r=this.w,e=t.elements;return this.x=e[0]*s+e[4]*h+e[8]*i+e[12]*r,this.y=e[1]*s+e[5]*h+e[9]*i+e[13]*r,this.z=e[2]*s+e[6]*h+e[10]*i+e[14]*r,this.w=e[3]*s+e[7]*h+e[11]*i+e[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const s=Math.sqrt(1-t.w*t.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/s,this.y=t.y/s,this.z=t.z/s),this}setAxisAngleFromRotationMatrix(t){let s,h,i,r;const e=.01,a=.1,n=t.elements,y=n[0],w=n[4],x=n[8],u=n[1],z=n[5],o=n[9],l=n[2],c=n[6],M=n[10];if(Math.abs(w-u)<e&&Math.abs(x-l)<e&&Math.abs(o-c)<e){if(Math.abs(w+u)<a&&Math.abs(x+l)<a&&Math.abs(o+c)<a&&Math.abs(y+z+M-3)<a)return this.set(1,0,0,0),this;s=Math.PI;const t=(y+1)/2,n=(z+1)/2,m=(M+1)/2,d=(w+u)/4,p=(x+l)/4,b=(o+c)/4;return t>n&&t>m?t<e?(h=0,i=.707106781,r=.707106781):(h=Math.sqrt(t),i=d/h,r=p/h):n>m?n<e?(h=.707106781,i=0,r=.707106781):(i=Math.sqrt(n),h=d/i,r=b/i):m<e?(h=.707106781,i=.707106781,r=0):(r=Math.sqrt(m),h=p/r,i=b/r),this.set(h,i,r,s),this}let m=Math.sqrt((c-o)*(c-o)+(x-l)*(x-l)+(u-w)*(u-w));return Math.abs(m)<.001&&(m=1),this.x=(c-o)/m,this.y=(x-l)/m,this.z=(u-w)/m,this.w=Math.acos((y+z+M-1)/2),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this.w=s[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,s){return this.x=clamp(this.x,t.x,s.x),this.y=clamp(this.y,t.y,s.y),this.z=clamp(this.z,t.z,s.z),this.w=clamp(this.w,t.w,s.w),this}clampScalar(t,s){return this.x=clamp(this.x,t,s),this.y=clamp(this.y,t,s),this.z=clamp(this.z,t,s),this.w=clamp(this.w,t,s),this}clampLength(t,s){const h=this.length();return this.divideScalar(h||1).multiplyScalar(clamp(h,t,s))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this.w+=(t.w-this.w)*s,this}lerpVectors(t,s,h){return this.x=t.x+(s.x-t.x)*h,this.y=t.y+(s.y-t.y)*h,this.z=t.z+(s.z-t.z)*h,this.w=t.w+(s.w-t.w)*h,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this.w=t[s+3],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t[s+3]=this.w,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this.w=t.getW(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}export{Vector4};
//# sourceMappingURL=Vector4.js.map