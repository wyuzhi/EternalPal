{"version":3,"file":"node_modules/three/src/nodes/accessors/AccessorsUtils.js","names":["normalView","tangentView","bitangentView","Fn","mat3","mix","anisotropy","anisotropyB","roughness","positionViewDirection","TBNViewMatrix","toVar","parallaxDirection","mul","parallaxUV","uv","scale","sub","bentNormalView","bentNormal","cross","normalize","oneMinus","pow2","once"],"sources":["node_modules/three/src/nodes/accessors/AccessorsUtils.js"],"sourcesContent":["import { normalView } from './Normal.js';\nimport { tangentView } from './Tangent.js';\nimport { bitangentView } from './Bitangent.js';\nimport { Fn, mat3 } from '../tsl/TSLBase.js';\nimport { mix } from '../math/MathNode.js';\nimport { anisotropy, anisotropyB, roughness } from '../core/PropertyNode.js';\nimport { positionViewDirection } from './Position.js';\n\n/**\n * TSL object that represents the TBN matrix in view space.\n *\n * @tsl\n * @type {Node<mat3>}\n */\nexport const TBNViewMatrix = /*@__PURE__*/ mat3( tangentView, bitangentView, normalView ).toVar( 'TBNViewMatrix' );\n\n/**\n * TSL object that represents the parallax direction.\n *\n * @tsl\n * @type {Node<mat3>}\n */\nexport const parallaxDirection = /*@__PURE__*/ positionViewDirection.mul( TBNViewMatrix )/*.normalize()*/;\n\n/**\n * TSL function for computing parallax uv coordinates.\n *\n * @tsl\n * @function\n * @param {Node<vec2>} uv - A uv node.\n * @param {Node<vec2>} scale - A scale node.\n * @returns {Node<vec2>} Parallax uv coordinates.\n */\nexport const parallaxUV = ( uv, scale ) => uv.sub( parallaxDirection.mul( scale ) );\n\n/**\n * TSL function for computing bent normals.\n *\n * @tsl\n * @function\n * @returns {Node<vec3>} Bent normals.\n */\nexport const bentNormalView = /*@__PURE__*/ ( Fn( () => {\n\n\t// https://google.github.io/filament/Filament.md.html#lighting/imagebasedlights/anisotropy\n\n\tlet bentNormal = anisotropyB.cross( positionViewDirection );\n\tbentNormal = bentNormal.cross( anisotropyB ).normalize();\n\tbentNormal = mix( bentNormal, normalView, anisotropy.mul( roughness.oneMinus() ).oneMinus().pow2().pow2() ).normalize();\n\n\treturn bentNormal;\n\n} ).once() )();\n"],"mappings":"OAASA,eAAkB,qBAClBC,gBAAmB,sBACnBC,kBAAqB,wBACrBC,GAAIC,SAAY,2BAChBC,QAAW,6BACXC,WAAYC,YAAaC,cAAiB,iCAC1CC,0BAA6B,uBAQ/B,MAAMC,cAA8BN,KAAMH,YAAaC,cAAeF,YAAaW,MAAO,wBAQ1F,MAAMC,kBAAkCH,sBAAsBI,IAAKH,sBAWnE,MAAMI,WAAa,CAAEC,EAAIC,IAAWD,EAAGE,IAAKL,kBAAkBC,IAAKG,WASnE,MAAME,eAAiCf,IAAI,KAIjD,IAAIgB,EAAaZ,YAAYa,MAAOX,uBAIpC,OAHAU,EAAaA,EAAWC,MAAOb,aAAcc,YAC7CF,EAAad,IAAKc,EAAYnB,WAAYM,WAAWO,IAAKL,UAAUc,YAAaA,WAAWC,OAAOA,QAASF,YAErGF,CAAU,IAEdK,MAVwC","ignoreList":[]}