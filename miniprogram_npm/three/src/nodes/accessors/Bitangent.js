import{Fn}from"../tsl/TSLCore.js";import{normalGeometry,normalLocal,normalView,normalWorld}from"./Normal.js";import{tangentGeometry,tangentLocal,tangentView,tangentWorld}from"./Tangent.js";import{bitangentViewFrame}from"./TangentUtils.js";import{directionToFaceDirection}from"../display/FrontFacingNode.js";const getBitangent=Fn((([t,n],{subBuildFn:e,material:o})=>{let a=t.mul(tangentGeometry.w).xyz;return"NORMAL"===e&&!0!==o.flatShading&&(a=a.toVarying(n)),a})).once(["NORMAL"]);export const bitangentGeometry=getBitangent(normalGeometry.cross(tangentGeometry),"v_bitangentGeometry").normalize().toVar("bitangentGeometry");export const bitangentLocal=getBitangent(normalLocal.cross(tangentLocal),"v_bitangentLocal").normalize().toVar("bitangentLocal");export const bitangentView=Fn((({subBuildFn:t,geometry:n,material:e})=>{let o;return o="VERTEX"===t||n.hasAttribute("tangent")?getBitangent(normalView.cross(tangentView),"v_bitangentView").normalize():bitangentViewFrame,!0!==e.flatShading&&(o=directionToFaceDirection(o)),o}),"vec3").once(["NORMAL","VERTEX"])().toVar("bitangentView");export const bitangentWorld=getBitangent(normalWorld.cross(tangentWorld),"v_bitangentWorld").normalize().toVar("bitangentWorld");
//# sourceMappingURL=Bitangent.js.map