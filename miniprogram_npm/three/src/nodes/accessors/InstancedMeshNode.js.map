{"version":3,"file":"node_modules/three/src/nodes/accessors/InstancedMeshNode.js","names":["InstanceNode","nodeProxy","InstancedMeshNode","type","constructor","instancedMesh","count","instanceMatrix","instanceColor","super","this","setParameterLength"],"sources":["node_modules/three/src/nodes/accessors/InstancedMeshNode.js"],"sourcesContent":["import InstanceNode from './InstanceNode.js';\nimport { nodeProxy } from '../tsl/TSLBase.js';\n\n/**\n * This is a special version of `InstanceNode` which requires the usage of {@link InstancedMesh}.\n * It allows an easier setup of the instance node.\n *\n * @augments InstanceNode\n */\nclass InstancedMeshNode extends InstanceNode {\n\n\tstatic get type() {\n\n\t\treturn 'InstancedMeshNode';\n\n\t}\n\n\t/**\n\t * Constructs a new instanced mesh node.\n\t *\n\t * @param {InstancedMesh} instancedMesh - The instanced mesh.\n\t */\n\tconstructor( instancedMesh ) {\n\n\t\tconst { count, instanceMatrix, instanceColor } = instancedMesh;\n\n\t\tsuper( count, instanceMatrix, instanceColor );\n\n\t\t/**\n\t\t * A reference to the instanced mesh.\n\t\t *\n\t\t * @type {InstancedMesh}\n\t\t */\n\t\tthis.instancedMesh = instancedMesh;\n\n\t}\n\n}\n\nexport default InstancedMeshNode;\n\n/**\n * TSL function for creating an instanced mesh node.\n *\n * @tsl\n * @function\n * @param {InstancedMesh} instancedMesh - The instancedMesh.\n * @returns {InstancedMeshNode}\n */\nexport const instancedMesh = /*@__PURE__*/ nodeProxy( InstancedMeshNode ).setParameterLength( 1 );\n"],"mappings":"OAAOA,iBAAkB,2BAChBC,cAAiB,oBAQ1B,MAAMC,0BAA0BF,aAE/B,eAAWG,GAEV,MAAO,mBAER,CAOA,WAAAC,CAAaC,GAEZ,MAAMC,MAAEA,EAAKC,eAAEA,EAAcC,cAAEA,GAAkBH,EAEjDI,MAAOH,EAAOC,EAAgBC,GAO9BE,KAAKL,cAAgBA,CAEtB,iBAIcH,yBAUR,MAAMG,cAA8BJ,UAAWC,mBAAoBS,mBAAoB","ignoreList":[]}