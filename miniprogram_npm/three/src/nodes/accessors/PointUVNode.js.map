{"version":3,"file":"node_modules/three/src/nodes/accessors/PointUVNode.js","names":["Node","nodeImmutable","PointUVNode","type","constructor","super","this","isPointUVNode","generate","pointUV"],"sources":["node_modules/three/src/nodes/accessors/PointUVNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport { nodeImmutable } from '../tsl/TSLBase.js';\n\n/**\n * A node for representing the uv coordinates of points.\n *\n * Can only be used with a WebGL backend. In WebGPU, point\n * primitives always have the size of one pixel and can thus\n * can't be used as sprite-like objects that display textures.\n *\n * @augments Node\n */\nclass PointUVNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'PointUVNode';\n\n\t}\n\n\t/**\n\t * Constructs a new point uv node.\n\t */\n\tconstructor() {\n\n\t\tsuper( 'vec2' );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isPointUVNode = true;\n\n\t}\n\n\tgenerate( /*builder*/ ) {\n\n\t\treturn 'vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )';\n\n\t}\n\n}\n\nexport default PointUVNode;\n\n/**\n * TSL object that represents the uv coordinates of points.\n *\n * @tsl\n * @type {PointUVNode}\n */\nexport const pointUV = /*@__PURE__*/ nodeImmutable( PointUVNode );\n"],"mappings":"OAAOA,SAAU,yBACRC,kBAAqB,oBAW9B,MAAMC,oBAAoBF,KAEzB,eAAWG,GAEV,MAAO,aAER,CAKA,WAAAC,GAECC,MAAO,QASPC,KAAKC,eAAgB,CAEtB,CAEA,QAAAC,GAEC,MAAO,gDAER,iBAIcN,mBAQR,MAAMO,QAAwBR,cAAeC","ignoreList":[]}