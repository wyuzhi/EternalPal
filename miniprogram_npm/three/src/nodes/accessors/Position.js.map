{"version":3,"file":"node_modules/three/src/nodes/accessors/Position.js","names":["attribute","Fn","modelWorldMatrix","positionGeometry","positionLocal","toVarying","positionPrevious","positionWorld","builder","mul","xyz","getSubBuildProperty","once","positionWorldDirection","transformDirection","normalize","toVar","positionView","context","setupPositionView","positionViewDirection","negate"],"sources":["node_modules/three/src/nodes/accessors/Position.js"],"sourcesContent":["import { attribute } from '../core/AttributeNode.js';\nimport { Fn } from '../tsl/TSLCore.js';\nimport { modelWorldMatrix } from './ModelNode.js';\n\n/**\n * TSL object that represents the position attribute of the current rendered object.\n *\n * @tsl\n * @type {AttributeNode<vec3>}\n */\nexport const positionGeometry = /*@__PURE__*/ attribute( 'position', 'vec3' );\n\n/**\n * TSL object that represents the vertex position in local space of the current rendered object.\n *\n * @tsl\n * @type {AttributeNode<vec3>}\n */\nexport const positionLocal = /*@__PURE__*/ positionGeometry.toVarying( 'positionLocal' );\n\n/**\n * TSL object that represents the previous vertex position in local space of the current rendered object.\n * Used in context of {@link VelocityNode} for rendering motion vectors.\n *\n * @tsl\n * @type {AttributeNode<vec3>}\n */\nexport const positionPrevious = /*@__PURE__*/ positionGeometry.toVarying( 'positionPrevious' );\n\n/**\n * TSL object that represents the vertex position in world space of the current rendered object.\n *\n * @tsl\n * @type {VaryingNode<vec3>}\n */\nexport const positionWorld = /*@__PURE__*/ ( Fn( ( builder ) => {\n\n\treturn modelWorldMatrix.mul( positionLocal ).xyz.toVarying( builder.getSubBuildProperty( 'v_positionWorld' ) );\n\n}, 'vec3' ).once( [ 'POSITION' ] ) )();\n\n/**\n * TSL object that represents the position world direction of the current rendered object.\n *\n * @tsl\n * @type {Node<vec3>}\n */\nexport const positionWorldDirection = /*@__PURE__*/ ( Fn( () => {\n\n\tconst vertexPWD = positionLocal.transformDirection( modelWorldMatrix ).toVarying( 'v_positionWorldDirection' );\n\n\treturn vertexPWD.normalize().toVar( 'positionWorldDirection' );\n\n}, 'vec3' ).once( [ 'POSITION' ] ) )();\n\n/**\n * TSL object that represents the vertex position in view space of the current rendered object.\n *\n * @tsl\n * @type {VaryingNode<vec3>}\n */\nexport const positionView = /*@__PURE__*/ ( Fn( ( builder ) => {\n\n\treturn builder.context.setupPositionView().toVarying( 'v_positionView' );\n\n}, 'vec3' ).once( [ 'POSITION' ] ) )();\n\n/**\n * TSL object that represents the position view direction of the current rendered object.\n *\n * @tsl\n * @type {VaryingNode<vec3>}\n */\nexport const positionViewDirection = /*@__PURE__*/ positionView.negate().toVarying( 'v_positionViewDirection' ).normalize().toVar( 'positionViewDirection' );\n"],"mappings":"OAASA,cAAiB,kCACjBC,OAAU,2BACVC,qBAAwB,wBAQ1B,MAAMC,iBAAiCH,UAAW,WAAY,eAQ9D,MAAMI,cAA8BD,iBAAiBE,UAAW,wBAShE,MAAMC,iBAAiCH,iBAAiBE,UAAW,2BAQnE,MAAME,cAAgCN,IAAMO,GAE3CN,iBAAiBO,IAAKL,eAAgBM,IAAIL,UAAWG,EAAQG,oBAAqB,qBAEvF,QAASC,KAAM,CAAE,YAJuB,UAYpC,MAAMC,uBAAyCZ,IAAI,IAEvCG,cAAcU,mBAAoBZ,kBAAmBG,UAAW,4BAEjEU,YAAYC,MAAO,2BAElC,QAASJ,KAAM,CAAE,YANgC,UAc7C,MAAMK,aAA+BhB,IAAMO,GAE1CA,EAAQU,QAAQC,oBAAoBd,UAAW,mBAEpD,QAASO,KAAM,CAAE,YAJsB,UAYnC,MAAMQ,sBAAsCH,aAAaI,SAAShB,UAAW,2BAA4BU,YAAYC,MAAO","ignoreList":[]}