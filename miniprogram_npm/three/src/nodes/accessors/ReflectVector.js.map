{"version":3,"file":"node_modules/three/src/nodes/accessors/ReflectVector.js","names":["cameraViewMatrix","normalView","positionViewDirection","materialRefractionRatio","reflectView","negate","reflect","refractView","refract","reflectVector","transformDirection","toVar","refractVector"],"sources":["node_modules/three/src/nodes/accessors/ReflectVector.js"],"sourcesContent":["import { cameraViewMatrix } from './Camera.js';\nimport { normalView } from './Normal.js';\nimport { positionViewDirection } from './Position.js';\nimport { materialRefractionRatio } from './MaterialProperties.js';\n\n/**\n * The reflect vector in view space.\n *\n * @tsl\n * @type {Node<vec3>}\n */\nexport const reflectView = /*@__PURE__*/ positionViewDirection.negate().reflect( normalView );\n\n/**\n * The refract vector in view space.\n *\n * @tsl\n * @type {Node<vec3>}\n */\nexport const refractView = /*@__PURE__*/ positionViewDirection.negate().refract( normalView, materialRefractionRatio );\n\n/**\n * Used for sampling cube maps when using cube reflection mapping.\n *\n * @tsl\n * @type {Node<vec3>}\n */\nexport const reflectVector = /*@__PURE__*/ reflectView.transformDirection( cameraViewMatrix ).toVar( 'reflectVector' );\n\n/**\n * Used for sampling cube maps when using cube refraction mapping.\n *\n * @tsl\n * @type {Node<vec3>}\n */\nexport const refractVector = /*@__PURE__*/ refractView.transformDirection( cameraViewMatrix ).toVar( 'reflectVector' );\n"],"mappings":"OAASA,qBAAwB,qBACxBC,eAAkB,qBAClBC,0BAA6B,uBAC7BC,4BAA+B,iCAQjC,MAAMC,YAA4BF,sBAAsBG,SAASC,QAASL,mBAQ1E,MAAMM,YAA4BL,sBAAsBG,SAASG,QAASP,WAAYE,gCAQtF,MAAMM,cAA8BL,YAAYM,mBAAoBV,kBAAmBW,MAAO,wBAQ9F,MAAMC,cAA8BL,YAAYG,mBAAoBV,kBAAmBW,MAAO","ignoreList":[]}