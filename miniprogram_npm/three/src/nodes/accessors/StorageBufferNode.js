import BufferNode from"./BufferNode.js";import{bufferAttribute}from"./BufferAttributeNode.js";import{nodeObject,varying}from"../tsl/TSLBase.js";import{storageElement}from"../utils/StorageArrayElementNode.js";import{NodeAccess}from"../core/constants.js";import{getTypeFromLength}from"../core/NodeUtils.js";class StorageBufferNode extends BufferNode{static get type(){return"StorageBufferNode"}constructor(t,e=null,r=0){let s,i=null;e&&e.isStruct?(s="struct",i=e.layout,(t.isStorageBufferAttribute||t.isStorageInstancedBufferAttribute)&&(r=t.count)):null===e&&(t.isStorageBufferAttribute||t.isStorageInstancedBufferAttribute)?(s=getTypeFromLength(t.itemSize),r=t.count):s=e,super(t,s,r),this.isStorageBufferNode=!0,this.structTypeNode=i,this.access=NodeAccess.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this._attribute=null,this._varying=null,this.global=!0,!0!==t.isStorageBufferAttribute&&!0!==t.isStorageInstancedBufferAttribute&&(t.isInstancedBufferAttribute?t.isStorageInstancedBufferAttribute=!0:t.isStorageBufferAttribute=!0)}getHash(t){if(0===this.bufferCount){let e=t.globalCache.getData(this.value);return void 0===e&&(e={node:this},t.globalCache.setData(this.value,e)),e.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(t){return storageElement(this,t)}setPBO(t){return this.isPBO=t,this}getPBO(){return this.isPBO}setAccess(t){return this.access=t,this}toReadOnly(){return this.setAccess(NodeAccess.READ_ONLY)}setAtomic(t){return this.isAtomic=t,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return null===this._attribute&&(this._attribute=bufferAttribute(this.value),this._varying=varying(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(t){if(null!==this.structTypeNode)return this.structTypeNode.getNodeType(t);if(t.isAvailable("storageBuffer")||t.isAvailable("indirectStorageBuffer"))return super.getNodeType(t);const{attribute:e}=this.getAttributeData();return e.getNodeType(t)}getMemberType(t,e){return null!==this.structTypeNode?this.structTypeNode.getMemberType(t,e):"void"}generate(t){if(null!==this.structTypeNode&&this.structTypeNode.build(t),t.isAvailable("storageBuffer")||t.isAvailable("indirectStorageBuffer"))return super.generate(t);const{attribute:e,varying:r}=this.getAttributeData(),s=r.build(t);return t.registerTransform(s,e),s}}export default StorageBufferNode;export const storage=(t,e=null,r=0)=>nodeObject(new StorageBufferNode(t,e,r));export const storageObject=(t,e,r)=>(console.warn('THREE.TSL: "storageObject()" is deprecated. Use "storage().setPBO( true )" instead.'),storage(t,e,r).setPBO(!0));
//# sourceMappingURL=StorageBufferNode.js.map