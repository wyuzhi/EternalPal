import TextureNode from"./TextureNode.js";import{nodeProxy}from"../tsl/TSLBase.js";import{NodeAccess}from"../core/constants.js";class StorageTextureNode extends TextureNode{static get type(){return"StorageTextureNode"}constructor(e,t,r=null){super(e,t),this.storeNode=r,this.isStorageTextureNode=!0,this.access=NodeAccess.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);const t=e.getNodeProperties(this);return t.storeNode=this.storeNode,t}setAccess(e){return this.access=e,this}generate(e,t){let r;return r=null!==this.storeNode?this.generateStore(e):super.generate(e,t),r}toReadWrite(){return this.setAccess(NodeAccess.READ_WRITE)}toReadOnly(){return this.setAccess(NodeAccess.READ_ONLY)}toWriteOnly(){return this.setAccess(NodeAccess.WRITE_ONLY)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:r,storeNode:s,depthNode:o}=t,u=super.generate(e,"property"),c=r.build(e,!0===this.value.is3DTexture?"uvec3":"uvec2"),n=s.build(e,"vec4"),d=o?o.build(e,"int"):null,i=e.generateTextureStore(e,u,c,d,n);e.addLineFlowCode(i,this)}clone(){const e=super.clone();return e.storeNode=this.storeNode,e}}export default StorageTextureNode;export const storageTexture=nodeProxy(StorageTextureNode).setParameterLength(1,3);export const textureStore=(e,t,r)=>{const s=storageTexture(e,t,r);return null!==r&&s.toStack(),s};
//# sourceMappingURL=StorageTextureNode.js.map