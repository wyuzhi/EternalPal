import{add,mul,div}from"../math/OperatorNode.js";import{floor,ceil,fract,pow}from"../math/MathNode.js";import{Fn,vec2,vec4,int}from"../tsl/TSLBase.js";import{maxMipLevel}from"../utils/MaxMipLevelNode.js";const bC=1/6,w0=d=>mul(bC,mul(d,mul(d,d.negate().add(3)).sub(3)).add(1)),w1=d=>mul(bC,mul(d,mul(d,mul(3,d).sub(6))).add(4)),w2=d=>mul(bC,mul(d,mul(d,mul(-3,d).add(3)).add(3)).add(1)),w3=d=>mul(bC,pow(d,3)),g0=d=>w0(d).add(w1(d)),g1=d=>w2(d).add(w3(d)),h0=d=>add(-1,w1(d).div(w0(d).add(w1(d)))),h1=d=>add(1,w3(d).div(w2(d).add(w3(d)))),bicubic=(d,e,l)=>{const u=d.uvNode,a=mul(u,e.zw).add(.5),m=floor(a),t=fract(a),c=g0(t.x),i=g1(t.x),o=h0(t.x),r=h1(t.x),s=h0(t.y),v=h1(t.y),x=vec2(m.x.add(o),m.y.add(s)).sub(.5).mul(e.xy),b=vec2(m.x.add(r),m.y.add(s)).sub(.5).mul(e.xy),w=vec2(m.x.add(o),m.y.add(v)).sub(.5).mul(e.xy),n=vec2(m.x.add(r),m.y.add(v)).sub(.5).mul(e.xy),p=g0(t.y).mul(add(c.mul(d.sample(x).level(l)),i.mul(d.sample(b).level(l)))),y=g1(t.y).mul(add(c.mul(d.sample(w).level(l)),i.mul(d.sample(n).level(l))));return p.add(y)};export const textureBicubicLevel=Fn((([d,e])=>{const l=vec2(d.size(int(e))),u=vec2(d.size(int(e.add(1)))),a=div(1,l),m=div(1,u),t=bicubic(d,vec4(a,l),floor(e)),c=bicubic(d,vec4(m,u),ceil(e));return fract(e).mix(t,c)}));export const textureBicubic=Fn((([d,e])=>{const l=e.mul(maxMipLevel(d));return textureBicubicLevel(d,l)}));
//# sourceMappingURL=TextureBicubic.js.map