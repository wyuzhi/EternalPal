import Node from"../core/Node.js";import{nodeProxy}from"../tsl/TSLBase.js";class CodeNode extends Node{static get type(){return"CodeNode"}constructor(e="",o=[],s=""){super("code"),this.isCodeNode=!0,this.global=!0,this.code=e,this.includes=o,this.language=s}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const o=this.getIncludes(e);for(const s of o)s.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}export default CodeNode;export const code=nodeProxy(CodeNode).setParameterLength(1,3);export const js=(e,o)=>code(e,o,"js");export const wgsl=(e,o)=>code(e,o,"wgsl");export const glsl=(e,o)=>code(e,o,"glsl");
//# sourceMappingURL=CodeNode.js.map