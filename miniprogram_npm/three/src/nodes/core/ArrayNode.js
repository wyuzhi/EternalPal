import TempNode from"./TempNode.js";import{addMethodChaining,nodeObject}from"../tsl/TSLCore.js";class ArrayNode extends TempNode{static get type(){return"ArrayNode"}constructor(e,t,r=null){super(e),this.count=t,this.values=r,this.isArrayNode=!0}getArrayCount(){return this.count}getNodeType(e){return null===this.nodeType&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}}export default ArrayNode;export const array=(...e)=>{let t;if(1===e.length){const r=e[0];t=new ArrayNode(null,r.length,r)}else{const r=e[0],o=e[1];t=new ArrayNode(r,o)}return nodeObject(t)};addMethodChaining("toArray",((e,t)=>array(Array(t).fill(e))));
//# sourceMappingURL=ArrayNode.js.map