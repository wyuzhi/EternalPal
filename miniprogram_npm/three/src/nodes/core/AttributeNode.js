import Node from"./Node.js";import{nodeObject,varying}from"../tsl/TSLBase.js";class AttributeNode extends Node{static get type(){return"AttributeNode"}constructor(t,e=null){super(e),this.global=!0,this._attributeName=t}getHash(t){return this.getAttributeName(t)}getNodeType(t){let e=this.nodeType;if(null===e){const r=this.getAttributeName(t);if(t.hasGeometryAttribute(r)){const i=t.geometry.getAttribute(r);e=t.getTypeFromAttribute(i)}else e="float"}return e}setAttributeName(t){return this._attributeName=t,this}getAttributeName(){return this._attributeName}generate(t){const e=this.getAttributeName(t),r=this.getNodeType(t);if(!0===t.hasGeometryAttribute(e)){const i=t.geometry.getAttribute(e),a=t.getTypeFromAttribute(i),o=t.getAttribute(e,a);if("vertex"===t.shaderStage)return t.format(o.name,a,r);return varying(this).build(t,r)}return console.warn(`AttributeNode: Vertex attribute "${e}" not found on geometry.`),t.generateConst(r)}serialize(t){super.serialize(t),t.global=this.global,t._attributeName=this._attributeName}deserialize(t){super.deserialize(t),this.global=t.global,this._attributeName=t._attributeName}}export default AttributeNode;export const attribute=(t,e=null)=>nodeObject(new AttributeNode(t,e));
//# sourceMappingURL=AttributeNode.js.map