import Node from"./Node.js";import{addMethodChaining,nodeProxy}from"../tsl/TSLCore.js";class ContextNode extends Node{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}generate(e,t){const o=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e,t);return e.setContext(o),n}}export default ContextNode;export const context=nodeProxy(ContextNode).setParameterLength(1,2);export const setName=(e,t)=>context(e,{nodeName:t});export function label(e,t){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),setName(e,t)}addMethodChaining("context",context),addMethodChaining("label",label),addMethodChaining("setName",setName);
//# sourceMappingURL=ContextNode.js.map