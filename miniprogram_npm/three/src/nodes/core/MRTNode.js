import OutputStructNode from"./OutputStructNode.js";import{nodeProxy,vec4}from"../tsl/TSLBase.js";export function getTextureIndex(t,e){for(let r=0;r<t.length;r++)if(t[r].name===e)return r;return-1}class MRTNode extends OutputStructNode{static get type(){return"MRTNode"}constructor(t){super(),this.outputNodes=t,this.isMRTNode=!0}has(t){return void 0!==this.outputNodes[t]}get(t){return this.outputNodes[t]}merge(t){const e={...this.outputNodes,...t.outputNodes};return mrt(e)}setup(t){const e=this.outputNodes,r=[],o=t.renderer.getRenderTarget().textures;for(const t in e){r[getTextureIndex(o,t)]=vec4(e[t])}return this.members=r,super.setup(t)}}export default MRTNode;export const mrt=nodeProxy(MRTNode);
//# sourceMappingURL=MRTNode.js.map