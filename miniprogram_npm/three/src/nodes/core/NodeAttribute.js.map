{"version":3,"file":"node_modules/three/src/nodes/core/NodeAttribute.js","names":["NodeAttribute","constructor","name","type","node","this","isNodeAttribute"],"sources":["node_modules/three/src/nodes/core/NodeAttribute.js"],"sourcesContent":["/**\n * {@link NodeBuilder} is going to create instances of this class during the build process\n * of nodes. They represent the final shader attributes that are going to be generated\n * by the builder. Arrays of node attributes is maintained in {@link NodeBuilder#attributes}\n * and {@link NodeBuilder#bufferAttributes} for this purpose.\n */\nclass NodeAttribute {\n\n\t/**\n\t * Constructs a new node attribute.\n\t *\n\t * @param {string} name - The name of the attribute.\n\t * @param {string} type - The type of the attribute.\n\t * @param {?Node} node - An optional reference to the node.\n\t */\n\tconstructor( name, type, node = null ) {\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isNodeAttribute = true;\n\n\t\t/**\n\t\t * The name of the attribute.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * The type of the attribute.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * An optional reference to the node.\n\t\t *\n\t\t * @type {?Node}\n\t\t * @default null\n\t\t */\n\t\tthis.node = node;\n\n\t}\n\n}\n\nexport default NodeAttribute;\n"],"mappings":"AAMA,MAAMA,cASL,WAAAC,CAAaC,EAAMC,EAAMC,EAAO,MAS/BC,KAAKC,iBAAkB,EAOvBD,KAAKH,KAAOA,EAOZG,KAAKF,KAAOA,EAQZE,KAAKD,KAAOA,CAEb,iBAIcJ","ignoreList":[]}