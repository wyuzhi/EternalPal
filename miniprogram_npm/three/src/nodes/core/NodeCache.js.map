{"version":3,"file":"node_modules/three/src/nodes/core/NodeCache.js","names":["_id","NodeCache","constructor","parent","this","id","nodesData","WeakMap","getData","node","data","get","undefined","setData","set"],"sources":["node_modules/three/src/nodes/core/NodeCache.js"],"sourcesContent":["let _id = 0;\n\n/**\n * This utility class is used in {@link NodeBuilder} as an internal\n * cache data structure for node data.\n */\nclass NodeCache {\n\n\t/**\n\t * Constructs a new node cache.\n\t *\n\t * @param {?NodeCache} parent - A reference to a parent cache.\n\t */\n\tconstructor( parent = null ) {\n\n\t\t/**\n\t\t * The id of the cache.\n\t\t *\n\t\t * @type {number}\n\t\t * @readonly\n\t\t */\n\t\tthis.id = _id ++;\n\n\t\t/**\n\t\t * A weak map for managing node data.\n\t\t *\n\t\t * @type {WeakMap<Node, Object>}\n\t\t */\n\t\tthis.nodesData = new WeakMap();\n\n\t\t/**\n\t\t * Reference to a parent node cache.\n\t\t *\n\t\t * @type {?NodeCache}\n\t\t * @default null\n\t\t */\n\t\tthis.parent = parent;\n\n\t}\n\n\t/**\n\t * Returns the data for the given node.\n\t *\n\t * @param {Node} node - The node.\n\t * @return {?Object} The data for the node.\n\t */\n\tgetData( node ) {\n\n\t\tlet data = this.nodesData.get( node );\n\n\t\tif ( data === undefined && this.parent !== null ) {\n\n\t\t\tdata = this.parent.getData( node );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * Sets the data for a given node.\n\t *\n\t * @param {Node} node - The node.\n\t * @param {Object} data - The data that should be cached.\n\t */\n\tsetData( node, data ) {\n\n\t\tthis.nodesData.set( node, data );\n\n\t}\n\n}\n\nexport default NodeCache;\n"],"mappings":"AAAA,IAAIA,IAAM,EAMV,MAAMC,UAOL,WAAAC,CAAaC,EAAS,MAQrBC,KAAKC,GAAKL,MAOVI,KAAKE,UAAY,IAAIC,QAQrBH,KAAKD,OAASA,CAEf,CAQA,OAAAK,CAASC,GAER,IAAIC,EAAON,KAAKE,UAAUK,IAAKF,GAQ/B,YANcG,IAATF,GAAsC,OAAhBN,KAAKD,SAE/BO,EAAON,KAAKD,OAAOK,QAASC,IAItBC,CAER,CAQA,OAAAG,CAASJ,EAAMC,GAEdN,KAAKE,UAAUQ,IAAKL,EAAMC,EAE3B,iBAIcT","ignoreList":[]}