import{NodeUpdateType}from"./constants.js";class NodeFrame{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let a=e.get(t);return void 0===a&&(a={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,a)),a}updateBeforeNode(e){const t=e.getUpdateBeforeType(),a=e.updateReference(this);if(t===NodeUpdateType.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,a);t.get(a)!==this.frameId&&!1!==e.updateBefore(this)&&t.set(a,this.frameId)}else if(t===NodeUpdateType.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,a);t.get(a)!==this.renderId&&!1!==e.updateBefore(this)&&t.set(a,this.renderId)}else t===NodeUpdateType.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),a=e.updateReference(this);if(t===NodeUpdateType.FRAME){const{frameMap:t}=this._getMaps(this.updateAfterMap,a);t.get(a)!==this.frameId&&!1!==e.updateAfter(this)&&t.set(a,this.frameId)}else if(t===NodeUpdateType.RENDER){const{renderMap:t}=this._getMaps(this.updateAfterMap,a);t.get(a)!==this.renderId&&!1!==e.updateAfter(this)&&t.set(a,this.renderId)}else t===NodeUpdateType.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),a=e.updateReference(this);if(t===NodeUpdateType.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,a);t.get(a)!==this.frameId&&!1!==e.update(this)&&t.set(a,this.frameId)}else if(t===NodeUpdateType.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,a);t.get(a)!==this.renderId&&!1!==e.update(this)&&t.set(a,this.renderId)}else t===NodeUpdateType.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}export default NodeFrame;
//# sourceMappingURL=NodeFrame.js.map