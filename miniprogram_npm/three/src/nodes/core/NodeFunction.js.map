{"version":3,"file":"node_modules/three/src/nodes/core/NodeFunction.js","names":["NodeFunction","constructor","type","inputs","name","precision","this","getCode","console","warn","isNodeFunction"],"sources":["node_modules/three/src/nodes/core/NodeFunction.js"],"sourcesContent":["/**\n * Base class for node functions. A derived module must be implemented\n * for each supported native shader language. Similar to other `Node*` modules,\n * this class is only relevant during the building process and not used\n * in user-level code.\n */\nclass NodeFunction {\n\n\t/**\n\t * Constructs a new node function.\n\t *\n\t * @param {string} type - The node type. This type is the return type of the node function.\n\t * @param {Array<NodeFunctionInput>} inputs - The function's inputs.\n\t * @param {string} [name=''] - The function's name.\n\t * @param {string} [precision=''] - The precision qualifier.\n\t */\n\tconstructor( type, inputs, name = '', precision = '' ) {\n\n\t\t/**\n\t\t * The node type. This type is the return type of the node function.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * The function's inputs.\n\t\t *\n\t\t * @type {Array<NodeFunctionInput>}\n\t\t */\n\t\tthis.inputs = inputs;\n\n\t\t/**\n\t\t * The name of the uniform.\n\t\t *\n\t\t * @type {string}\n\t\t * @default ''\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * The precision qualifier.\n\t\t *\n\t\t * @type {string}\n\t\t * @default ''\n\t\t */\n\t\tthis.precision = precision;\n\n\t}\n\n\t/**\n\t * This method returns the native code of the node function.\n\t *\n\t * @abstract\n\t * @param {string} name - The function's name.\n\t * @return {string} A shader code.\n\t */\n\tgetCode( /*name = this.name*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n}\n\nNodeFunction.isNodeFunction = true;\n\nexport default NodeFunction;\n"],"mappings":"AAMA,MAAMA,aAUL,WAAAC,CAAaC,EAAMC,EAAQC,EAAO,GAAIC,EAAY,IAOjDC,KAAKJ,KAAOA,EAOZI,KAAKH,OAASA,EAQdG,KAAKF,KAAOA,EAQZE,KAAKD,UAAYA,CAElB,CASA,OAAAE,GAECC,QAAQC,KAAM,qBAEf,EAIDT,aAAaU,gBAAiB,iBAEfV","ignoreList":[]}