{"version":3,"file":"node_modules/three/src/nodes/core/NodeUtils.js","names":["Color","Matrix2","Matrix3","Matrix4","Vector2","Vector3","Vector4","cyrb53","value","seed","h1","h2","Array","val","i","length","Math","imul","ch","charCodeAt","hashString","str","hashArray","array","hash","params","getCacheKey","object","force","values","isNode","push","id","getSelf","property","childNode","getNodeChildren","slice","node","toJSON","startsWith","isArray","child","index","Object","getPrototypeOf","prototype","subProperty","typeFromLength","Map","dataFromObject","WeakMap","getTypeFromLength","get","getTypedArrayFromType","type","test","Int32Array","Uint32Array","Float32Array","Error","getLengthFromType","console","error","getMemoryLengthFromType","getByteBoundaryFromType","getValueType","typeOf","isVector2","isVector3","isVector4","isMatrix2","isMatrix3","isMatrix4","isColor","ArrayBuffer","getValueFromType","last4","undefined","base64ToArrayBuffer","getDataFromObject","data","set","arrayBufferToBase64","arrayBuffer","chars","Uint8Array","String","fromCharCode","btoa","base64","from","atob","c","buffer"],"sources":["node_modules/three/src/nodes/core/NodeUtils.js"],"sourcesContent":["import { Color } from '../../math/Color.js';\nimport { Matrix2 } from '../../math/Matrix2.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\nimport { Matrix4 } from '../../math/Matrix4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\n// cyrb53 (c) 2018 bryc (github.com/bryc). License: Public domain. Attribution appreciated.\n// A fast and simple 64-bit (or 53-bit) string hash function with decent collision resistance.\n// Largely inspired by MurmurHash2/3, but with a focus on speed/simplicity.\n// See https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript/52171480#52171480\n// https://github.com/bryc/code/blob/master/jshash/experimental/cyrb53.js\nfunction cyrb53( value, seed = 0 ) {\n\n\tlet h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n\n\tif ( value instanceof Array ) {\n\n\t\tfor ( let i = 0, val; i < value.length; i ++ ) {\n\n\t\t\tval = value[ i ];\n\t\t\th1 = Math.imul( h1 ^ val, 2654435761 );\n\t\t\th2 = Math.imul( h2 ^ val, 1597334677 );\n\n\t\t}\n\n\t} else {\n\n\t\tfor ( let i = 0, ch; i < value.length; i ++ ) {\n\n\t\t\tch = value.charCodeAt( i );\n\t\t\th1 = Math.imul( h1 ^ ch, 2654435761 );\n\t\t\th2 = Math.imul( h2 ^ ch, 1597334677 );\n\n\t\t}\n\n\t}\n\n\th1 = Math.imul( h1 ^ ( h1 >>> 16 ), 2246822507 );\n\th1 ^= Math.imul( h2 ^ ( h2 >>> 13 ), 3266489909 );\n\th2 = Math.imul( h2 ^ ( h2 >>> 16 ), 2246822507 );\n\th2 ^= Math.imul( h1 ^ ( h1 >>> 13 ), 3266489909 );\n\n\treturn 4294967296 * ( 2097151 & h2 ) + ( h1 >>> 0 );\n\n}\n\n/**\n * Computes a hash for the given string.\n *\n * @method\n * @param {string} str - The string to be hashed.\n * @return {number} The hash.\n */\nexport const hashString = ( str ) => cyrb53( str );\n\n/**\n * Computes a hash for the given array.\n *\n * @method\n * @param {Array<number>} array - The array to be hashed.\n * @return {number} The hash.\n */\nexport const hashArray = ( array ) => cyrb53( array );\n\n/**\n * Computes a hash for the given list of parameters.\n *\n * @method\n * @param {...number} params - A list of parameters.\n * @return {number} The hash.\n */\nexport const hash = ( ...params ) => cyrb53( params );\n\n/**\n * Computes a cache key for the given node.\n *\n * @method\n * @param {Object|Node} object - The object to be hashed.\n * @param {boolean} [force=false] - Whether to force a cache key computation or not.\n * @return {number} The hash.\n */\nexport function getCacheKey( object, force = false ) {\n\n\tconst values = [];\n\n\tif ( object.isNode === true ) {\n\n\t\tvalues.push( object.id );\n\t\tobject = object.getSelf();\n\n\t}\n\n\tfor ( const { property, childNode } of getNodeChildren( object ) ) {\n\n\t\tvalues.push( cyrb53( property.slice( 0, - 4 ) ), childNode.getCacheKey( force ) );\n\n\t}\n\n\treturn cyrb53( values );\n\n}\n\n/**\n * This generator function can be used to iterate over the node children\n * of the given object.\n *\n * @generator\n * @param {Object} node - The object to be hashed.\n * @param {boolean} [toJSON=false] - Whether to return JSON or not.\n * @yields {Object} A result node holding the property, index (if available) and the child node.\n */\nexport function* getNodeChildren( node, toJSON = false ) {\n\n\tfor ( const property in node ) {\n\n\t\t// Ignore private properties.\n\t\tif ( property.startsWith( '_' ) === true ) continue;\n\n\t\tconst object = node[ property ];\n\n\t\tif ( Array.isArray( object ) === true ) {\n\n\t\t\tfor ( let i = 0; i < object.length; i ++ ) {\n\n\t\t\t\tconst child = object[ i ];\n\n\t\t\t\tif ( child && ( child.isNode === true || toJSON && typeof child.toJSON === 'function' ) ) {\n\n\t\t\t\t\tyield { property, index: i, childNode: child };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( object && object.isNode === true ) {\n\n\t\t\tyield { property, childNode: object };\n\n\t\t} else if ( object && Object.getPrototypeOf( object ) === Object.prototype ) {\n\n\t\t\tfor ( const subProperty in object ) {\n\n\t\t\t\t// Ignore private properties.\n\t\t\t\tif ( subProperty.startsWith( '_' ) === true ) continue;\n\n\t\t\t\tconst child = object[ subProperty ];\n\n\t\t\t\tif ( child && ( child.isNode === true || toJSON && typeof child.toJSON === 'function' ) ) {\n\n\t\t\t\t\tyield { property, index: subProperty, childNode: child };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst typeFromLength = /*@__PURE__*/ new Map( [\n\t[ 1, 'float' ],\n\t[ 2, 'vec2' ],\n\t[ 3, 'vec3' ],\n\t[ 4, 'vec4' ],\n\t[ 9, 'mat3' ],\n\t[ 16, 'mat4' ]\n] );\n\nconst dataFromObject = /*@__PURE__*/ new WeakMap();\n\n/**\n * Returns the data type for the given the length.\n *\n * @method\n * @param {number} length - The length.\n * @return {string} The data type.\n */\nexport function getTypeFromLength( length ) {\n\n\treturn typeFromLength.get( length );\n\n}\n\n/**\n * Returns the typed array for the given data type.\n *\n * @method\n * @param {string} type - The data type.\n * @return {TypedArray} The typed array.\n */\nexport function getTypedArrayFromType( type ) {\n\n\t// Handle component type for vectors and matrices\n\tif ( /[iu]?vec\\d/.test( type ) ) {\n\n\t\t// Handle int vectors\n\t\tif ( type.startsWith( 'ivec' ) ) return Int32Array;\n\t\t// Handle uint vectors\n\t\tif ( type.startsWith( 'uvec' ) ) return Uint32Array;\n\t\t// Default to float vectors\n\t\treturn Float32Array;\n\n\t}\n\n\t// Handle matrices (always float)\n\tif ( /mat\\d/.test( type ) ) return Float32Array;\n\n\t// Basic types\n\tif ( /float/.test( type ) ) return Float32Array;\n\tif ( /uint/.test( type ) ) return Uint32Array;\n\tif ( /int/.test( type ) ) return Int32Array;\n\n\tthrow new Error( `THREE.NodeUtils: Unsupported type: ${type}` );\n\n}\n\n/**\n * Returns the length for the given data type.\n *\n * @method\n * @param {string} type - The data type.\n * @return {number} The length.\n */\nexport function getLengthFromType( type ) {\n\n\tif ( /float|int|uint/.test( type ) ) return 1;\n\tif ( /vec2/.test( type ) ) return 2;\n\tif ( /vec3/.test( type ) ) return 3;\n\tif ( /vec4/.test( type ) ) return 4;\n\tif ( /mat2/.test( type ) ) return 4;\n\tif ( /mat3/.test( type ) ) return 9;\n\tif ( /mat4/.test( type ) ) return 16;\n\n\tconsole.error( 'THREE.TSL: Unsupported type:', type );\n\n}\n\n/**\n * Returns the gpu memory length for the given data type.\n *\n * @method\n * @param {string} type - The data type.\n * @return {number} The length.\n */\nexport function getMemoryLengthFromType( type ) {\n\n\tif ( /float|int|uint/.test( type ) ) return 1;\n\tif ( /vec2/.test( type ) ) return 2;\n\tif ( /vec3/.test( type ) ) return 3;\n\tif ( /vec4/.test( type ) ) return 4;\n\tif ( /mat2/.test( type ) ) return 4;\n\tif ( /mat3/.test( type ) ) return 12;\n\tif ( /mat4/.test( type ) ) return 16;\n\n\tconsole.error( 'THREE.TSL: Unsupported type:', type );\n\n}\n\n/**\n * Returns the byte boundary for the given data type.\n *\n * @method\n * @param {string} type - The data type.\n * @return {number} The byte boundary.\n */\nexport function getByteBoundaryFromType( type ) {\n\n\tif ( /float|int|uint/.test( type ) ) return 4;\n\tif ( /vec2/.test( type ) ) return 8;\n\tif ( /vec3/.test( type ) ) return 16;\n\tif ( /vec4/.test( type ) ) return 16;\n\tif ( /mat2/.test( type ) ) return 8;\n\tif ( /mat3/.test( type ) ) return 48;\n\tif ( /mat4/.test( type ) ) return 64;\n\n\tconsole.error( 'THREE.TSL: Unsupported type:', type );\n\n}\n\n/**\n * Returns the data type for the given value.\n *\n * @method\n * @param {any} value - The value.\n * @return {?string} The data type.\n */\nexport function getValueType( value ) {\n\n\tif ( value === undefined || value === null ) return null;\n\n\tconst typeOf = typeof value;\n\n\tif ( value.isNode === true ) {\n\n\t\treturn 'node';\n\n\t} else if ( typeOf === 'number' ) {\n\n\t\treturn 'float';\n\n\t} else if ( typeOf === 'boolean' ) {\n\n\t\treturn 'bool';\n\n\t} else if ( typeOf === 'string' ) {\n\n\t\treturn 'string';\n\n\t} else if ( typeOf === 'function' ) {\n\n\t\treturn 'shader';\n\n\t} else if ( value.isVector2 === true ) {\n\n\t\treturn 'vec2';\n\n\t} else if ( value.isVector3 === true ) {\n\n\t\treturn 'vec3';\n\n\t} else if ( value.isVector4 === true ) {\n\n\t\treturn 'vec4';\n\n\t} else if ( value.isMatrix2 === true ) {\n\n\t\treturn 'mat2';\n\n\t} else if ( value.isMatrix3 === true ) {\n\n\t\treturn 'mat3';\n\n\t} else if ( value.isMatrix4 === true ) {\n\n\t\treturn 'mat4';\n\n\t} else if ( value.isColor === true ) {\n\n\t\treturn 'color';\n\n\t} else if ( value instanceof ArrayBuffer ) {\n\n\t\treturn 'ArrayBuffer';\n\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Returns the value/object for the given data type and parameters.\n *\n * @method\n * @param {string} type - The given type.\n * @param {...any} params - A parameter list.\n * @return {any} The value/object.\n */\nexport function getValueFromType( type, ...params ) {\n\n\tconst last4 = type ? type.slice( - 4 ) : undefined;\n\n\tif ( params.length === 1 ) { // ensure same behaviour as in NodeBuilder.format()\n\n\t\tif ( last4 === 'vec2' ) params = [ params[ 0 ], params[ 0 ] ];\n\t\telse if ( last4 === 'vec3' ) params = [ params[ 0 ], params[ 0 ], params[ 0 ] ];\n\t\telse if ( last4 === 'vec4' ) params = [ params[ 0 ], params[ 0 ], params[ 0 ], params[ 0 ] ];\n\n\t}\n\n\tif ( type === 'color' ) {\n\n\t\treturn new Color( ...params );\n\n\t} else if ( last4 === 'vec2' ) {\n\n\t\treturn new Vector2( ...params );\n\n\t} else if ( last4 === 'vec3' ) {\n\n\t\treturn new Vector3( ...params );\n\n\t} else if ( last4 === 'vec4' ) {\n\n\t\treturn new Vector4( ...params );\n\n\t} else if ( last4 === 'mat2' ) {\n\n\t\treturn new Matrix2( ...params );\n\n\t} else if ( last4 === 'mat3' ) {\n\n\t\treturn new Matrix3( ...params );\n\n\t} else if ( last4 === 'mat4' ) {\n\n\t\treturn new Matrix4( ...params );\n\n\t} else if ( type === 'bool' ) {\n\n\t\treturn params[ 0 ] || false;\n\n\t} else if ( ( type === 'float' ) || ( type === 'int' ) || ( type === 'uint' ) ) {\n\n\t\treturn params[ 0 ] || 0;\n\n\t} else if ( type === 'string' ) {\n\n\t\treturn params[ 0 ] || '';\n\n\t} else if ( type === 'ArrayBuffer' ) {\n\n\t\treturn base64ToArrayBuffer( params[ 0 ] );\n\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Gets the object data that can be shared between different rendering steps.\n *\n * @param {Object} object - The object to get the data for.\n * @return {Object} The object data.\n */\nexport function getDataFromObject( object ) {\n\n\tlet data = dataFromObject.get( object );\n\n\tif ( data === undefined ) {\n\n\t\tdata = {};\n\t\tdataFromObject.set( object, data );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * Converts the given array buffer to a Base64 string.\n *\n * @method\n * @param {ArrayBuffer} arrayBuffer - The array buffer.\n * @return {string} The Base64 string.\n */\nexport function arrayBufferToBase64( arrayBuffer ) {\n\n\tlet chars = '';\n\n\tconst array = new Uint8Array( arrayBuffer );\n\n\tfor ( let i = 0; i < array.length; i ++ ) {\n\n\t\tchars += String.fromCharCode( array[ i ] );\n\n\t}\n\n\treturn btoa( chars );\n\n}\n\n/**\n * Converts the given Base64 string to an array buffer.\n *\n * @method\n * @param {string} base64 - The Base64 string.\n * @return {ArrayBuffer} The array buffer.\n */\nexport function base64ToArrayBuffer( base64 ) {\n\n\treturn Uint8Array.from( atob( base64 ), c => c.charCodeAt( 0 ) ).buffer;\n\n}\n"],"mappings":"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","ignoreList":[]}