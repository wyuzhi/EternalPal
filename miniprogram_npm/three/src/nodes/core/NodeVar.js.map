{"version":3,"file":"node_modules/three/src/nodes/core/NodeVar.js","names":["NodeVar","constructor","name","type","readOnly","count","this","isNodeVar"],"sources":["node_modules/three/src/nodes/core/NodeVar.js"],"sourcesContent":["/**\n * {@link NodeBuilder} is going to create instances of this class during the build process\n * of nodes. They represent the final shader variables that are going to be generated\n * by the builder. A dictionary of node variables is maintained in {@link NodeBuilder#vars} for\n * this purpose.\n */\nclass NodeVar {\n\n\t/**\n\t * Constructs a new node variable.\n\t *\n\t * @param {string} name - The name of the variable.\n\t * @param {string} type - The type of the variable.\n\t * @param {boolean} [readOnly=false] - The read-only flag.\n\t * @param {?number} [count=null] - The size.\n\t */\n\tconstructor( name, type, readOnly = false, count = null ) {\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isNodeVar = true;\n\n\t\t/**\n\t\t * The name of the variable.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * The type of the variable.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t *  The read-only flag.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.readOnly = readOnly;\n\n\t\t/**\n\t\t * The size.\n\t\t *\n\t\t * @type {?number}\n\t\t */\n\t\tthis.count = count;\n\n\t}\n\n}\n\nexport default NodeVar;\n"],"mappings":"AAMA,MAAMA,QAUL,WAAAC,CAAaC,EAAMC,EAAMC,GAAW,EAAOC,EAAQ,MASlDC,KAAKC,WAAY,EAOjBD,KAAKJ,KAAOA,EAOZI,KAAKH,KAAOA,EAOZG,KAAKF,SAAWA,EAOhBE,KAAKD,MAAQA,CAEd,iBAIcL","ignoreList":[]}