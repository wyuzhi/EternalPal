import Node from"./Node.js";import{nodeProxy}from"../tsl/TSLBase.js";class OutputStructNode extends Node{static get type(){return"OutputStructNode"}constructor(...t){super(),this.members=t,this.isOutputStructNode=!0}getNodeType(t){const e=t.getNodeProperties(this);if(void 0===e.membersLayout){const o=this.members,r=[];for(let e=0;e<o.length;e++){const u="m"+e,s=o[e].getNodeType(t);r.push({name:u,type:s,index:e})}e.membersLayout=r,e.structType=t.getOutputStructTypeFromNode(this,e.membersLayout)}return e.structType.name}generate(t){const e=t.getOutputStructName(),o=this.members,r=""!==e?e+".":"";for(let e=0;e<o.length;e++){const u=o[e].build(t);t.addLineFlowCode(`${r}m${e} = ${u}`,this)}return e}}export default OutputStructNode;export const outputStruct=nodeProxy(OutputStructNode);
//# sourceMappingURL=OutputStructNode.js.map