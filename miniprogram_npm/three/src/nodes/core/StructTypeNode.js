import Node from"./Node.js";import{getByteBoundaryFromType,getMemoryLengthFromType}from"./NodeUtils.js";function getMembersLayout(e){return Object.entries(e).map((([e,t])=>"string"==typeof t?{name:e,type:t,atomic:!1}:{name:e,type:t.type,atomic:t.atomic||!1}))}class StructTypeNode extends Node{static get type(){return"StructTypeNode"}constructor(e,t=null){super("struct"),this.membersLayout=getMembersLayout(e),this.name=t,this.isStructLayoutNode=!0}getLength(){const e=Float32Array.BYTES_PER_ELEMENT;let t=0;for(const r of this.membersLayout){const o=r.type,s=getMemoryLengthFromType(o)*e,m=t%8,y=m%getByteBoundaryFromType(o),n=m+y;t+=y,0!==n&&8-n<s&&(t+=8-n),t+=s}return 8*Math.ceil(t/8)/e}getMemberType(e,t){const r=this.membersLayout.find((e=>e.name===t));return r?r.type:"void"}getNodeType(e){return e.getStructTypeFromNode(this,this.membersLayout,this.name).name}setup(e){e.addInclude(this)}generate(e){return this.getNodeType(e)}}export default StructTypeNode;
//# sourceMappingURL=StructTypeNode.js.map