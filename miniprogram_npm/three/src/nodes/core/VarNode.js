import Node from"./Node.js";import{addMethodChaining,getCurrentStack,nodeProxy}from"../tsl/TSLCore.js";class VarNode extends Node{static get type(){return"VarNode"}constructor(e,t=null,n=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=n,this.parents=!0,this.intent=!1}setIntent(e){return this.intent=e,this}getIntent(){return this.intent}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}getArrayCount(e){return this.node.getArrayCount(e)}build(...e){if(!0===this.intent){if(!0!==e[0].getNodeProperties(this).assign)return this.node.build(...e)}return super.build(...e)}generate(e){const{node:t,name:n,readOnly:r}=this,{renderer:o}=e,a=!0===o.backend.isWebGPUBackend;let s=!1,d=!1;r&&(s=e.isDeterministic(t),d=a?r:s);const i=e.getVectorType(this.getNodeType(e)),h=t.build(e,i),c=e.getVarFromNode(this,n,i,void 0,d),g=e.getPropertyName(c);let l=g;if(d)if(a)l=s?`const ${g}`:`let ${g}`;else{const n=t.getArrayCount(e);l=`const ${e.getVar(c.type,g,n)}`}return e.addLineFlowCode(`${l} = ${h}`,this),g}}export default VarNode;const createVar=nodeProxy(VarNode);export const Var=(e,t=null)=>createVar(e,t).toStack();export const Const=(e,t=null)=>createVar(e,t,!0).toStack();export const VarIntent=e=>null===getCurrentStack()?e:createVar(e).setIntent(!0).toStack();addMethodChaining("toVar",Var),addMethodChaining("toConst",Const),addMethodChaining("toVarIntent",VarIntent);export const temp=e=>(console.warn('TSL: "temp( node )" is deprecated. Use "Var( node )" or "node.toVar()" instead.'),createVar(e));addMethodChaining("temp",temp);
//# sourceMappingURL=VarNode.js.map