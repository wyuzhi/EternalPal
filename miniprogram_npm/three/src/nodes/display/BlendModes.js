import{Fn,If,vec4}from"../tsl/TSLBase.js";import{mix,min,step}from"../math/MathNode.js";export const blendBurn=Fn((([e,n])=>min(1,e.oneMinus().div(n)).oneMinus())).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]});export const blendDodge=Fn((([e,n])=>min(e.div(n.oneMinus()),1))).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]});export const blendScreen=Fn((([e,n])=>e.oneMinus().mul(n.oneMinus()).oneMinus())).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]});export const blendOverlay=Fn((([e,n])=>mix(e.mul(2).mul(n),e.oneMinus().mul(2).mul(n.oneMinus()).oneMinus(),step(.5,e)))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]});export const blendColor=Fn((([e,n])=>{const t=n.a.add(e.a.mul(n.a.oneMinus()));return vec4(n.rgb.mul(n.a).add(e.rgb.mul(e.a).mul(n.a.oneMinus())).div(t),t)})).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]});export const premultiplyAlpha=Fn((([e])=>vec4(e.rgb.mul(e.a),e.a)),{color:"vec4",return:"vec4"});export const unpremultiplyAlpha=Fn((([e])=>(If(e.a.equal(0),(()=>vec4(0))),vec4(e.rgb.div(e.a),e.a))),{color:"vec4",return:"vec4"});export const burn=(...e)=>(console.warn('THREE.TSL: "burn" has been renamed. Use "blendBurn" instead.'),blendBurn(e));export const dodge=(...e)=>(console.warn('THREE.TSL: "dodge" has been renamed. Use "blendDodge" instead.'),blendDodge(e));export const screen=(...e)=>(console.warn('THREE.TSL: "screen" has been renamed. Use "blendScreen" instead.'),blendScreen(e));export const overlay=(...e)=>(console.warn('THREE.TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),blendOverlay(e));
//# sourceMappingURL=BlendModes.js.map