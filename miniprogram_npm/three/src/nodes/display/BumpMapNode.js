import TempNode from"../core/TempNode.js";import{uv}from"../accessors/UV.js";import{normalView}from"../accessors/Normal.js";import{positionView}from"../accessors/Position.js";import{faceDirection}from"./FrontFacingNode.js";import{Fn,nodeProxy,float,vec2}from"../tsl/TSLBase.js";const dHdxy_fwd=Fn((({textureNode:e,bumpScale:o})=>{const r=o=>e.cache().context({getUV:e=>o(e.uvNode||uv()),forceUVContext:!0}),t=float(r((e=>e)));return vec2(float(r((e=>e.add(e.dFdx())))).sub(t),float(r((e=>e.add(e.dFdy())))).sub(t)).mul(o)})),perturbNormalArb=Fn((e=>{const{surf_pos:o,surf_norm:r,dHdxy:t}=e,s=o.dFdx().normalize(),d=r,a=o.dFdy().normalize().cross(d),m=d.cross(s),u=s.dot(a).mul(faceDirection),n=u.sign().mul(t.x.mul(a).add(t.y.mul(m)));return u.abs().mul(r).sub(n).normalize()}));class BumpMapNode extends TempNode{static get type(){return"BumpMapNode"}constructor(e,o=null){super("vec3"),this.textureNode=e,this.scaleNode=o}setup(){const e=null!==this.scaleNode?this.scaleNode:1,o=dHdxy_fwd({textureNode:this.textureNode,bumpScale:e});return perturbNormalArb({surf_pos:positionView,surf_norm:normalView,dHdxy:o})}}export default BumpMapNode;export const bumpMap=nodeProxy(BumpMapNode).setParameterLength(1,2);
//# sourceMappingURL=BumpMapNode.js.map