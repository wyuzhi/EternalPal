import TempNode from"../core/TempNode.js";import{normalView,transformNormalToView}from"../accessors/Normal.js";import{TBNViewMatrix}from"../accessors/AccessorsUtils.js";import{nodeProxy,vec3}from"../tsl/TSLBase.js";import{TangentSpaceNormalMap,ObjectSpaceNormalMap}from"../../constants.js";import{directionToFaceDirection}from"./FrontFacingNode.js";class NormalMapNode extends TempNode{static get type(){return"NormalMapNode"}constructor(e,o=null){super("vec3"),this.node=e,this.scaleNode=o,this.normalMapType=TangentSpaceNormalMap}setup({material:e}){const{normalMapType:o,scaleNode:r}=this;let a=this.node.mul(2).sub(1);if(null!==r){let o=r;!0===e.flatShading&&(o=directionToFaceDirection(o)),a=vec3(a.xy.mul(o),a.z)}let t=null;return o===ObjectSpaceNormalMap?t=transformNormalToView(a):o===TangentSpaceNormalMap?t=TBNViewMatrix.mul(a).normalize():(console.error(`THREE.NodeMaterial: Unsupported normal map type: ${o}`),t=normalView),t}}export default NormalMapNode;export const normalMap=nodeProxy(NormalMapNode).setParameterLength(1,2);
//# sourceMappingURL=NormalMapNode.js.map