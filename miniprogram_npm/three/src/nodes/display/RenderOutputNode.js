import TempNode from"../core/TempNode.js";import{addMethodChaining,nodeObject}from"../tsl/TSLCore.js";import{NoColorSpace,NoToneMapping}from"../../constants.js";import{ColorManagement}from"../../math/ColorManagement.js";class RenderOutputNode extends TempNode{static get type(){return"RenderOutputNode"}constructor(o,e,t){super("vec4"),this.colorNode=o,this.toneMapping=e,this.outputColorSpace=t,this.isRenderOutputNode=!0}setup({context:o}){let e=this.colorNode||o.color;const t=(null!==this.toneMapping?this.toneMapping:o.toneMapping)||NoToneMapping,n=(null!==this.outputColorSpace?this.outputColorSpace:o.outputColorSpace)||NoColorSpace;return t!==NoToneMapping&&(e=e.toneMapping(t)),n!==NoColorSpace&&n!==ColorManagement.workingColorSpace&&(e=e.workingToColorSpace(n)),e}}export default RenderOutputNode;export const renderOutput=(o,e=null,t=null)=>nodeObject(new RenderOutputNode(nodeObject(o),e,t));addMethodChaining("renderOutput",renderOutput);
//# sourceMappingURL=RenderOutputNode.js.map