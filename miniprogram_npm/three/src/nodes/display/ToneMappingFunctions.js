import{Fn,float,mat3,vec3,If}from"../tsl/TSLBase.js";import{select}from"../math/ConditionalNode.js";import{clamp,log2,max,min,pow,mix}from"../math/MathNode.js";import{mul,sub,div}from"../math/OperatorNode.js";export const linearToneMapping=Fn((([e,a])=>e.mul(a).clamp())).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});export const reinhardToneMapping=Fn((([e,a])=>(e=e.mul(a)).div(e.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});export const cineonToneMapping=Fn((([e,a])=>{const n=(e=(e=e.mul(a)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),t=e.mul(e.mul(6.2).add(1.7)).add(.06);return n.div(t).pow(2.2)})).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});const RRTAndODTFit=Fn((([e])=>{const a=e.mul(e.add(.0245786)).sub(90537e-9),n=e.mul(e.add(.432951).mul(.983729)).add(.238081);return a.div(n)}));export const acesFilmicToneMapping=Fn((([e,a])=>{const n=mat3(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),t=mat3(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(a).div(.6),e=n.mul(e),e=RRTAndODTFit(e),(e=t.mul(e)).clamp()})).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});const LINEAR_REC2020_TO_LINEAR_SRGB=mat3(vec3(1.6605,-.1246,-.0182),vec3(-.5876,1.1329,-.1006),vec3(-.0728,-.0083,1.1187)),LINEAR_SRGB_TO_LINEAR_REC2020=mat3(vec3(.6274,.0691,.0164),vec3(.3293,.9195,.088),vec3(.0433,.0113,.8956)),agxDefaultContrastApprox=Fn((([e])=>{const a=vec3(e).toVar(),n=vec3(a.mul(a)).toVar(),t=vec3(n.mul(n)).toVar();return float(15.5).mul(t.mul(n)).sub(mul(40.14,t.mul(a))).add(mul(31.96,t).sub(mul(6.868,n.mul(a))).add(mul(.4298,n).add(mul(.1191,a).sub(.00232))))}));export const agxToneMapping=Fn((([e,a])=>{const n=vec3(e).toVar(),t=mat3(vec3(.856627153315983,.137318972929847,.11189821299995),vec3(.0951212405381588,.761241990602591,.0767994186031903),vec3(.0482516061458583,.101439036467562,.811302368396859)),o=mat3(vec3(1.1271005818144368,-.1413297634984383,-.14132976349843826),vec3(-.11060664309660323,1.157823702216272,-.11060664309660294),vec3(-.016493938717834573,-.016493938717834257,1.2519364065950405)),s=float(-12.47393),m=float(4.026069);return n.mulAssign(a),n.assign(LINEAR_SRGB_TO_LINEAR_REC2020.mul(n)),n.assign(t.mul(n)),n.assign(max(n,1e-10)),n.assign(log2(n)),n.assign(n.sub(s).div(m.sub(s))),n.assign(clamp(n,0,1)),n.assign(agxDefaultContrastApprox(n)),n.assign(o.mul(n)),n.assign(pow(max(vec3(0),n),vec3(2.2))),n.assign(LINEAR_REC2020_TO_LINEAR_SRGB.mul(n)),n.assign(clamp(n,0,1)),n})).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});export const neutralToneMapping=Fn((([e,a])=>{const n=float(.76),t=float(.15);e=e.mul(a);const o=min(e.r,min(e.g,e.b)),s=select(o.lessThan(.08),o.sub(mul(6.25,o.mul(o))),.04);e.subAssign(s);const m=max(e.r,max(e.g,e.b));If(m.lessThan(n),(()=>e));const u=sub(1,n),p=sub(1,u.mul(u).div(m.add(u.sub(n))));e.mulAssign(p.div(m));const l=sub(1,div(1,t.mul(m.sub(p)).add(1)));return mix(e,vec3(p),l)})).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});
//# sourceMappingURL=ToneMappingFunctions.js.map