{"version":3,"file":"node_modules/three/src/nodes/display/ToneMappingNode.js","names":["TempNode","addMethodChaining","nodeObject","vec4","rendererReference","NoToneMapping","hash","ToneMappingNode","type","constructor","toneMapping","exposureNode","toneMappingExposure","colorNode","super","this","customCacheKey","setup","builder","context","color","outputNode","toneMappingFn","renderer","library","getToneMappingFunction","rgb","a","console","error","mapping","exposure"],"sources":["node_modules/three/src/nodes/display/ToneMappingNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { addMethodChaining, nodeObject, vec4 } from '../tsl/TSLCore.js';\nimport { rendererReference } from '../accessors/RendererReferenceNode.js';\n\nimport { NoToneMapping } from '../../constants.js';\nimport { hash } from '../core/NodeUtils.js';\n\n/**\n * This node represents a tone mapping operation.\n *\n * @augments TempNode\n */\nclass ToneMappingNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'ToneMappingNode';\n\n\t}\n\n\t/**\n\t * Constructs a new tone mapping node.\n\t *\n\t * @param {number} toneMapping - The tone mapping type.\n\t * @param {Node} exposureNode - The tone mapping exposure.\n\t * @param {Node} [colorNode=null] - The color node to process.\n\t */\n\tconstructor( toneMapping, exposureNode = toneMappingExposure, colorNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\t/**\n\t\t * The tone mapping type.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.toneMapping = toneMapping;\n\n\t\t/**\n\t\t * The tone mapping exposure.\n\t\t *\n\t\t * @type {Node}\n\t\t * @default null\n\t\t */\n\t\tthis.exposureNode = exposureNode;\n\n\t\t/**\n\t\t * Represents the color to process.\n\t\t *\n\t\t * @type {?Node}\n\t\t * @default null\n\t\t */\n\t\tthis.colorNode = colorNode;\n\n\t}\n\n\t/**\n\t * Overwrites the default `customCacheKey()` implementation by including the tone\n\t * mapping type into the cache key.\n\t *\n\t * @return {number} The hash.\n\t */\n\tcustomCacheKey() {\n\n\t\treturn hash( this.toneMapping );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst colorNode = this.colorNode || builder.context.color;\n\t\tconst toneMapping = this.toneMapping;\n\n\t\tif ( toneMapping === NoToneMapping ) return colorNode;\n\n\t\tlet outputNode = null;\n\n\t\tconst toneMappingFn = builder.renderer.library.getToneMappingFunction( toneMapping );\n\n\t\tif ( toneMappingFn !== null ) {\n\n\t\t\toutputNode = vec4( toneMappingFn( colorNode.rgb, this.exposureNode ), colorNode.a );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'ToneMappingNode: Unsupported Tone Mapping configuration.', toneMapping );\n\n\t\t\toutputNode = colorNode;\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default ToneMappingNode;\n\n/**\n * TSL function for creating a tone mapping node.\n *\n * @tsl\n * @function\n * @param {number} mapping - The tone mapping type.\n * @param {Node<float> | number} exposure - The tone mapping exposure.\n * @param {Node<vec3> | Color} color - The color node to process.\n * @returns {ToneMappingNode<vec3>}\n */\nexport const toneMapping = ( mapping, exposure, color ) => nodeObject( new ToneMappingNode( mapping, nodeObject( exposure ), nodeObject( color ) ) );\n\n/**\n * TSL object that represents the global tone mapping exposure of the renderer.\n *\n * @tsl\n * @type {RendererReferenceNode<vec3>}\n */\nexport const toneMappingExposure = /*@__PURE__*/ rendererReference( 'toneMappingExposure', 'float' );\n\naddMethodChaining( 'toneMapping', ( color, mapping, exposure ) => toneMapping( mapping, exposure, color ) );\n"],"mappings":"OAAOA,aAAc,6BACZC,kBAAmBC,WAAYC,SAAY,2BAC3CC,sBAAyB,+CAEzBC,kBAAqB,4BACrBC,SAAY,uBAOrB,MAAMC,wBAAwBP,SAE7B,eAAWQ,GAEV,MAAO,iBAER,CASA,WAAAC,CAAaC,EAAaC,EAAeC,oBAAqBC,EAAY,MAEzEC,MAAO,QAOPC,KAAKL,YAAcA,EAQnBK,KAAKJ,aAAeA,EAQpBI,KAAKF,UAAYA,CAElB,CAQA,cAAAG,GAEC,OAAOV,KAAMS,KAAKL,YAEnB,CAEA,KAAAO,CAAOC,GAEN,MAAML,EAAYE,KAAKF,WAAaK,EAAQC,QAAQC,MAC9CV,EAAcK,KAAKL,YAEzB,GAAKA,IAAgBL,cAAgB,OAAOQ,EAE5C,IAAIQ,EAAa,KAEjB,MAAMC,EAAgBJ,EAAQK,SAASC,QAAQC,uBAAwBf,GAcvE,OAZuB,OAAlBY,EAEJD,EAAalB,KAAMmB,EAAeT,EAAUa,IAAKX,KAAKJ,cAAgBE,EAAUc,IAIhFC,QAAQC,MAAO,2DAA4DnB,GAE3EW,EAAaR,GAIPQ,CAER,iBAIcd,uBAYR,MAAMG,YAAc,CAAEoB,EAASC,EAAUX,IAAWlB,WAAY,IAAIK,gBAAiBuB,EAAS5B,WAAY6B,GAAY7B,WAAYkB,YAQlI,MAAMR,oBAAoCR,kBAAmB,sBAAuB,SAE3FH,kBAAmB,eAAe,CAAEmB,EAAOU,EAASC,IAAcrB,YAAaoB,EAASC,EAAUX","ignoreList":[]}