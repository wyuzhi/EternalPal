{"version":3,"file":"node_modules/three/src/nodes/fog/Fog.js","names":["positionView","smoothstep","Fn","output","vec4","getViewZNode","builder","viewZ","getViewZ","context","undefined","this","z","negate","rangeFogFactor","near","far","densityFogFactor","density","mul","exp","oneMinus","fog","color","factor","toFloat","mix","rgb","toVec3","a","rangeFog","console","warn","densityFog"],"sources":["node_modules/three/src/nodes/fog/Fog.js"],"sourcesContent":["import { positionView } from '../accessors/Position.js';\nimport { smoothstep } from '../math/MathNode.js';\nimport { Fn, output, vec4 } from '../tsl/TSLBase.js';\n\n/**\n * Returns a node that represents the `z` coordinate in view space\n * for the current fragment. It's a different representation of the\n * default depth value.\n *\n * This value can be part of a computation that defines how the fog\n * density increases when moving away from the camera.\n *\n * @param {NodeBuilder} builder - The current node builder.\n * @return {Node} The viewZ node.\n */\nfunction getViewZNode( builder ) {\n\n\tlet viewZ;\n\n\tconst getViewZ = builder.context.getViewZ;\n\n\tif ( getViewZ !== undefined ) {\n\n\t\tviewZ = getViewZ( this );\n\n\t}\n\n\treturn ( viewZ || positionView.z ).negate();\n\n}\n\n/**\n * Constructs a new range factor node.\n *\n * @tsl\n * @function\n * @param {Node} near - Defines the near value.\n * @param {Node} far - Defines the far value.\n */\nexport const rangeFogFactor = Fn( ( [ near, far ], builder ) => {\n\n\tconst viewZ = getViewZNode( builder );\n\n\treturn smoothstep( near, far, viewZ );\n\n} );\n\n/**\n * Represents an exponential squared fog. This type of fog gives\n * a clear view near the camera and a faster than exponentially\n * densening fog farther from the camera.\n *\n * @tsl\n * @function\n * @param {Node} density - Defines the fog density.\n */\nexport const densityFogFactor = Fn( ( [ density ], builder ) => {\n\n\tconst viewZ = getViewZNode( builder );\n\n\treturn density.mul( density, viewZ, viewZ ).negate().exp().oneMinus();\n\n} );\n\n/**\n * This class can be used to configure a fog for the scene.\n * Nodes of this type are assigned to `Scene.fogNode`.\n *\n * @tsl\n * @function\n * @param {Node} color - Defines the color of the fog.\n * @param {Node} factor - Defines how the fog is factored in the scene.\n */\nexport const fog = Fn( ( [ color, factor ] ) => {\n\n\treturn vec4( factor.toFloat().mix( output.rgb, color.toVec3() ), output.a );\n\n} );\n\n// Deprecated\n\n/**\n * @tsl\n * @function\n * @deprecated since r171. Use `fog( color, rangeFogFactor( near, far ) )` instead.\n *\n * @param {Node} color\n * @param {Node} near\n * @param {Node} far\n * @returns {Function}\n */\nexport function rangeFog( color, near, far ) { // @deprecated, r171\n\n\tconsole.warn( 'THREE.TSL: \"rangeFog( color, near, far )\" is deprecated. Use \"fog( color, rangeFogFactor( near, far ) )\" instead.' );\n\treturn fog( color, rangeFogFactor( near, far ) );\n\n}\n\n/**\n * @tsl\n * @function\n * @deprecated since r171. Use `fog( color, densityFogFactor( density ) )` instead.\n *\n * @param {Node} color\n * @param {Node} density\n * @returns {Function}\n */\nexport function densityFog( color, density ) { // @deprecated, r171\n\n\tconsole.warn( 'THREE.TSL: \"densityFog( color, density )\" is deprecated. Use \"fog( color, densityFogFactor( density ) )\" instead.' );\n\treturn fog( color, densityFogFactor( density ) );\n\n}\n"],"mappings":"OAASA,iBAAoB,kCACpBC,eAAkB,6BAClBC,GAAIC,OAAQC,SAAY,oBAajC,SAASC,aAAcC,GAEtB,IAAIC,EAEJ,MAAMC,EAAWF,EAAQG,QAAQD,SAQjC,YANkBE,IAAbF,IAEJD,EAAQC,EAAUG,QAIVJ,GAASP,aAAaY,GAAIC,QAEpC,QAUO,MAAMC,eAAiBZ,IAAI,EAAIa,EAAMC,GAAOV,KAElD,MAAMC,EAAQF,aAAcC,GAE5B,OAAOL,WAAYc,EAAMC,EAAKT,EAAO,WAa/B,MAAMU,iBAAmBf,IAAI,EAAIgB,GAAWZ,KAElD,MAAMC,EAAQF,aAAcC,GAE5B,OAAOY,EAAQC,IAAKD,EAASX,EAAOA,GAAQM,SAASO,MAAMC,UAAU,WAa/D,MAAMC,IAAMpB,IAAI,EAAIqB,EAAOC,KAE1BpB,KAAMoB,EAAOC,UAAUC,IAAKvB,OAAOwB,IAAKJ,EAAMK,UAAYzB,OAAO0B,YAgBlE,SAASC,SAAUP,EAAOR,EAAMC,GAGtC,OADAe,QAAQC,KAAM,qHACPV,IAAKC,EAAOT,eAAgBC,EAAMC,GAE1C,QAWO,SAASiB,WAAYV,EAAOL,GAGlC,OADAa,QAAQC,KAAM,qHACPV,IAAKC,EAAON,iBAAkBC,GAEtC","ignoreList":[]}