{"version":3,"file":"node_modules/three/src/nodes/functions/BSDF/DFGApprox.js","names":["Fn","vec2","vec4","DFGApprox","roughness","dotNV","c0","c1","r","mul","add","a004","x","min","exp2","y","zw","setLayout","name","type","inputs"],"sources":["node_modules/three/src/nodes/functions/BSDF/DFGApprox.js"],"sourcesContent":["import { Fn, vec2, vec4 } from '../../tsl/TSLBase.js';\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\nconst DFGApprox = /*@__PURE__*/ Fn( ( { roughness, dotNV } ) => {\n\n\tconst c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tconst r = roughness.mul( c0 ).add( c1 );\n\n\tconst a004 = r.x.mul( r.x ).min( dotNV.mul( - 9.28 ).exp2() ).mul( r.x ).add( r.y );\n\n\tconst fab = vec2( - 1.04, 1.04 ).mul( a004 ).add( r.zw );\n\n\treturn fab;\n\n} ).setLayout( {\n\tname: 'DFGApprox',\n\ttype: 'vec2',\n\tinputs: [\n\t\t{ name: 'roughness', type: 'float' },\n\t\t{ name: 'dotNV', type: 'vec3' }\n\t]\n} );\n\nexport default DFGApprox;\n"],"mappings":"OAASA,GAAIC,KAAMC,SAAY,uBAM/B,MAAMC,UAA0BH,IAAI,EAAII,YAAWC,YAElD,MAAMC,EAAKJ,MAAQ,GAAK,OAAU,KAAO,MAEnCK,EAAKL,KAAM,EAAG,MAAQ,MAAQ,KAE9BM,EAAIJ,EAAUK,IAAKH,GAAKI,IAAKH,GAE7BI,EAAOH,EAAEI,EAAEH,IAAKD,EAAEI,GAAIC,IAAKR,EAAMI,KAAO,MAAOK,QAASL,IAAKD,EAAEI,GAAIF,IAAKF,EAAEO,GAIhF,OAFYd,MAAQ,KAAM,MAAOQ,IAAKE,GAAOD,IAAKF,EAAEQ,GAE1C,IAEPC,UAAW,CACdC,KAAM,YACNC,KAAM,OACNC,OAAQ,CACP,CAAEF,KAAM,YAAaC,KAAM,SAC3B,CAAED,KAAM,QAASC,KAAM,0BAIVhB","ignoreList":[]}