import{Fn,float,vec3}from"../../tsl/TSLBase.js";const RECIPROCAL_PI=float(1/Math.PI),D_GGX_Anisotropic=Fn((({alphaT:t,alphaB:a,dotNH:o,dotTH:l,dotBH:e})=>{const i=t.mul(a),n=vec3(a.mul(l),t.mul(e),i.mul(o)),p=n.dot(n),f=i.div(p);return RECIPROCAL_PI.mul(i.mul(f.pow2()))})).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]});export default D_GGX_Anisotropic;
//# sourceMappingURL=D_GGX_Anisotropic.js.map