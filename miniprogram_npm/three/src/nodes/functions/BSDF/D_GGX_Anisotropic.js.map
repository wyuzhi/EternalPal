{"version":3,"file":"node_modules/three/src/nodes/functions/BSDF/D_GGX_Anisotropic.js","names":["Fn","float","vec3","RECIPROCAL_PI","Math","PI","D_GGX_Anisotropic","alphaT","alphaB","dotNH","dotTH","dotBH","a2","mul","v","v2","dot","w2","div","pow2","setLayout","name","type","inputs","qualifier"],"sources":["node_modules/three/src/nodes/functions/BSDF/D_GGX_Anisotropic.js"],"sourcesContent":["import { Fn, float, vec3 } from '../../tsl/TSLBase.js';\n\nconst RECIPROCAL_PI = /*@__PURE__*/ float( 1 / Math.PI );\n\n// https://google.github.io/filament/Filament.md.html#materialsystem/anisotropicmodel/anisotropicspecularbrdf\n\nconst D_GGX_Anisotropic = /*@__PURE__*/ Fn( ( { alphaT, alphaB, dotNH, dotTH, dotBH } ) => {\n\n\tconst a2 = alphaT.mul( alphaB );\n\tconst v = vec3( alphaB.mul( dotTH ), alphaT.mul( dotBH ), a2.mul( dotNH ) );\n\tconst v2 = v.dot( v );\n\tconst w2 = a2.div( v2 );\n\n\treturn RECIPROCAL_PI.mul( a2.mul( w2.pow2() ) );\n\n} ).setLayout( {\n\tname: 'D_GGX_Anisotropic',\n\ttype: 'float',\n\tinputs: [\n\t\t{ name: 'alphaT', type: 'float', qualifier: 'in' },\n\t\t{ name: 'alphaB', type: 'float', qualifier: 'in' },\n\t\t{ name: 'dotNH', type: 'float', qualifier: 'in' },\n\t\t{ name: 'dotTH', type: 'float', qualifier: 'in' },\n\t\t{ name: 'dotBH', type: 'float', qualifier: 'in' }\n\t]\n} );\n\nexport default D_GGX_Anisotropic;\n"],"mappings":"OAASA,GAAIC,MAAOC,SAAY,uBAEhC,MAAMC,cAA8BF,MAAO,EAAIG,KAAKC,IAI9CC,kBAAkCN,IAAI,EAAIO,SAAQC,SAAQC,QAAOC,QAAOC,YAE7E,MAAMC,EAAKL,EAAOM,IAAKL,GACjBM,EAAIZ,KAAMM,EAAOK,IAAKH,GAASH,EAAOM,IAAKF,GAASC,EAAGC,IAAKJ,IAC5DM,EAAKD,EAAEE,IAAKF,GACZG,EAAKL,EAAGM,IAAKH,GAEnB,OAAOZ,cAAcU,IAAKD,EAAGC,IAAKI,EAAGE,QAAU,IAE5CC,UAAW,CACdC,KAAM,oBACNC,KAAM,QACNC,OAAQ,CACP,CAAEF,KAAM,SAAUC,KAAM,QAASE,UAAW,MAC5C,CAAEH,KAAM,SAAUC,KAAM,QAASE,UAAW,MAC5C,CAAEH,KAAM,QAASC,KAAM,QAASE,UAAW,MAC3C,CAAEH,KAAM,QAASC,KAAM,QAASE,UAAW,MAC3C,CAAEH,KAAM,QAASC,KAAM,QAASE,UAAW,wBAI9BlB","ignoreList":[]}