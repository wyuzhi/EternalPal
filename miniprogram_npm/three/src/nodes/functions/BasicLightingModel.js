import LightingModel from"../core/LightingModel.js";import{diffuseColor}from"../core/PropertyNode.js";import{MultiplyOperation,MixOperation,AddOperation}from"../../constants.js";import{materialSpecularStrength,materialReflectivity}from"../accessors/MaterialNode.js";import{mix}from"../math/MathNode.js";import{vec4}from"../tsl/TSLBase.js";class BasicLightingModel extends LightingModel{constructor(){super()}indirect({context:i}){const e=i.ambientOcclusion,t=i.reflectedLight,r=i.irradianceLightMap;t.indirectDiffuse.assign(vec4(0)),r?t.indirectDiffuse.addAssign(r):t.indirectDiffuse.addAssign(vec4(1,1,1,0)),t.indirectDiffuse.mulAssign(e),t.indirectDiffuse.mulAssign(diffuseColor.rgb)}finish(i){const{material:e,context:t}=i,r=t.outgoingLight,a=i.context.environment;if(a)switch(e.combine){case MultiplyOperation:r.rgb.assign(mix(r.rgb,r.rgb.mul(a.rgb),materialSpecularStrength.mul(materialReflectivity)));break;case MixOperation:r.rgb.assign(mix(r.rgb,a.rgb,materialSpecularStrength.mul(materialReflectivity)));break;case AddOperation:r.rgb.addAssign(a.rgb.mul(materialSpecularStrength.mul(materialReflectivity)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",e.combine)}}}export default BasicLightingModel;
//# sourceMappingURL=BasicLightingModel.js.map