import BasicLightingModel from"./BasicLightingModel.js";import F_Schlick from"./BSDF/F_Schlick.js";import BRDF_Lambert from"./BSDF/BRDF_Lambert.js";import{diffuseColor,shininess,specularColor}from"../core/PropertyNode.js";import{normalView}from"../accessors/Normal.js";import{materialSpecularStrength}from"../accessors/MaterialNode.js";import{positionViewDirection}from"../accessors/Position.js";import{Fn,float}from"../tsl/TSLBase.js";const G_BlinnPhong_Implicit=()=>float(.25),D_BlinnPhong=Fn((({dotNH:i})=>shininess.mul(float(.5)).add(1).mul(float(1/Math.PI)).mul(i.pow(shininess)))),BRDF_BlinnPhong=Fn((({lightDirection:i})=>{const o=i.add(positionViewDirection).normalize(),t=normalView.dot(o).clamp(),e=positionViewDirection.dot(o).clamp(),r=F_Schlick({f0:specularColor,f90:1,dotVH:e}),n=G_BlinnPhong_Implicit(),l=D_BlinnPhong({dotNH:t});return r.mul(n).mul(l)}));class PhongLightingModel extends BasicLightingModel{constructor(i=!0){super(),this.specular=i}direct({lightDirection:i,lightColor:o,reflectedLight:t}){const e=normalView.dot(i).clamp().mul(o);t.directDiffuse.addAssign(e.mul(BRDF_Lambert({diffuseColor:diffuseColor.rgb}))),!0===this.specular&&t.directSpecular.addAssign(e.mul(BRDF_BlinnPhong({lightDirection:i})).mul(materialSpecularStrength))}indirect(i){const{ambientOcclusion:o,irradiance:t,reflectedLight:e}=i.context;e.indirectDiffuse.addAssign(t.mul(BRDF_Lambert({diffuseColor:diffuseColor}))),e.indirectDiffuse.mulAssign(o)}}export default PhongLightingModel;
//# sourceMappingURL=PhongLightingModel.js.map