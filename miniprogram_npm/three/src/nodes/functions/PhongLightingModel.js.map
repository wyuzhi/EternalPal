{"version":3,"file":"node_modules/three/src/nodes/functions/PhongLightingModel.js","names":["BasicLightingModel","F_Schlick","BRDF_Lambert","diffuseColor","shininess","specularColor","normalView","materialSpecularStrength","positionViewDirection","Fn","float","G_BlinnPhong_Implicit","D_BlinnPhong","dotNH","mul","add","Math","PI","pow","BRDF_BlinnPhong","lightDirection","halfDir","normalize","dot","clamp","dotVH","F","f0","f90","G","D","PhongLightingModel","constructor","specular","super","this","direct","lightColor","reflectedLight","irradiance","directDiffuse","addAssign","rgb","directSpecular","indirect","builder","ambientOcclusion","context","indirectDiffuse","mulAssign"],"sources":["node_modules/three/src/nodes/functions/PhongLightingModel.js"],"sourcesContent":["import BasicLightingModel from './BasicLightingModel.js';\nimport F_Schlick from './BSDF/F_Schlick.js';\nimport BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport { diffuseColor, shininess, specularColor } from '../core/PropertyNode.js';\nimport { normalView } from '../accessors/Normal.js';\nimport { materialSpecularStrength } from '../accessors/MaterialNode.js';\nimport { positionViewDirection } from '../accessors/Position.js';\nimport { Fn, float } from '../tsl/TSLBase.js';\n\nconst G_BlinnPhong_Implicit = () => float( 0.25 );\n\nconst D_BlinnPhong = /*@__PURE__*/ Fn( ( { dotNH } ) => {\n\n\treturn shininess.mul( float( 0.5 ) ).add( 1.0 ).mul( float( 1 / Math.PI ) ).mul( dotNH.pow( shininess ) );\n\n} );\n\nconst BRDF_BlinnPhong = /*@__PURE__*/ Fn( ( { lightDirection } ) => {\n\n\tconst halfDir = lightDirection.add( positionViewDirection ).normalize();\n\n\tconst dotNH = normalView.dot( halfDir ).clamp();\n\tconst dotVH = positionViewDirection.dot( halfDir ).clamp();\n\n\tconst F = F_Schlick( { f0: specularColor, f90: 1.0, dotVH } );\n\tconst G = G_BlinnPhong_Implicit();\n\tconst D = D_BlinnPhong( { dotNH } );\n\n\treturn F.mul( G ).mul( D );\n\n} );\n\n/**\n * Represents the lighting model for a phong material. Used in {@link MeshPhongNodeMaterial}.\n *\n * @augments BasicLightingModel\n */\nclass PhongLightingModel extends BasicLightingModel {\n\n\t/**\n\t * Constructs a new phong lighting model.\n\t *\n\t * @param {boolean} [specular=true] - Whether specular is supported or not.\n\t */\n\tconstructor( specular = true ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * Whether specular is supported or not. Set this to `false` if you are\n\t\t * looking for a Lambert-like material meaning a material for non-shiny\n\t\t * surfaces, without specular highlights.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.specular = specular;\n\n\t}\n\n\t/**\n\t * Implements the direct lighting. The specular portion is optional an can be controlled\n\t * with the {@link PhongLightingModel#specular} flag.\n\t *\n\t * @param {Object} lightData - The light data.\n\t */\n\tdirect( { lightDirection, lightColor, reflectedLight } ) {\n\n\t\tconst dotNL = normalView.dot( lightDirection ).clamp();\n\t\tconst irradiance = dotNL.mul( lightColor );\n\n\t\treflectedLight.directDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor: diffuseColor.rgb } ) ) );\n\n\t\tif ( this.specular === true ) {\n\n\t\t\treflectedLight.directSpecular.addAssign( irradiance.mul( BRDF_BlinnPhong( { lightDirection } ) ).mul( materialSpecularStrength ) );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Implements the indirect lighting.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t */\n\tindirect( builder ) {\n\n\t\tconst { ambientOcclusion, irradiance, reflectedLight } = builder.context;\n\n\t\treflectedLight.indirectDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor } ) ) );\n\n\t\treflectedLight.indirectDiffuse.mulAssign( ambientOcclusion );\n\n\t}\n\n}\n\nexport default PhongLightingModel;\n"],"mappings":"OAAOA,uBAAwB,iCACxBC,cAAe,6BACfC,iBAAkB,gCAChBC,aAAcC,UAAWC,kBAAqB,iCAC9CC,eAAkB,gCAClBC,6BAAgC,sCAChCC,0BAA6B,kCAC7BC,GAAIC,UAAa,oBAE1B,MAAMC,sBAAwB,IAAMD,MAAO,KAErCE,aAA6BH,IAAI,EAAII,WAEnCT,UAAUU,IAAKJ,MAAO,KAAQK,IAAK,GAAMD,IAAKJ,MAAO,EAAIM,KAAKC,KAAOH,IAAKD,EAAMK,IAAKd,cAIvFe,gBAAgCV,IAAI,EAAIW,qBAE7C,MAAMC,EAAUD,EAAeL,IAAKP,uBAAwBc,YAEtDT,EAAQP,WAAWiB,IAAKF,GAAUG,QAClCC,EAAQjB,sBAAsBe,IAAKF,GAAUG,QAE7CE,EAAIzB,UAAW,CAAE0B,GAAItB,cAAeuB,IAAK,EAAKH,UAC9CI,EAAIlB,wBACJmB,EAAIlB,aAAc,CAAEC,UAE1B,OAAOa,EAAEZ,IAAKe,GAAIf,IAAKgB,EAAG,IAS3B,MAAMC,2BAA2B/B,mBAOhC,WAAAgC,CAAaC,GAAW,GAEvBC,QAUAC,KAAKF,SAAWA,CAEjB,CAQA,MAAAG,EAAQhB,eAAEA,EAAciB,WAAEA,EAAUC,eAAEA,IAErC,MACMC,EADQjC,WAAWiB,IAAKH,GAAiBI,QACtBV,IAAKuB,GAE9BC,EAAeE,cAAcC,UAAWF,EAAWzB,IAAKZ,aAAc,CAAEC,aAAcA,aAAauC,SAE5E,IAAlBP,KAAKF,UAETK,EAAeK,eAAeF,UAAWF,EAAWzB,IAAKK,gBAAiB,CAAEC,oBAAqBN,IAAKP,0BAIxG,CAOA,QAAAqC,CAAUC,GAET,MAAMC,iBAAEA,EAAgBP,WAAEA,EAAUD,eAAEA,GAAmBO,EAAQE,QAEjET,EAAeU,gBAAgBP,UAAWF,EAAWzB,IAAKZ,aAAc,CAAEC,8BAE1EmC,EAAeU,gBAAgBC,UAAWH,EAE3C,iBAIcf","ignoreList":[]}