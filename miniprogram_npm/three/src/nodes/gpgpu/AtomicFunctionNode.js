import Node from"../core/Node.js";import{expression}from"../code/ExpressionNode.js";import{nodeProxy}from"../tsl/TSLCore.js";class AtomicFunctionNode extends Node{static get type(){return"AtomicFunctionNode"}constructor(o,t,i){super("uint"),this.method=o,this.pointerNode=t,this.valueNode=i,this.parents=!0}getInputType(o){return this.pointerNode.getNodeType(o)}getNodeType(o){return this.getInputType(o)}generate(o){const t=o.getNodeProperties(this),i=t.parents,c=this.method,e=this.getNodeType(o),n=this.getInputType(o),d=this.pointerNode,m=this.valueNode,u=[];u.push(`&${d.build(o,n)}`),null!==m&&u.push(m.build(o,n));const s=`${o.getMethod(c,e)}( ${u.join(", ")} )`;if(!(!!i&&(1===i.length&&!0===i[0].isStackNode)))return void 0===t.constNode&&(t.constNode=expression(s,e).toConst()),t.constNode.build(o);o.addLineFlowCode(s,this)}}AtomicFunctionNode.ATOMIC_LOAD="atomicLoad",AtomicFunctionNode.ATOMIC_STORE="atomicStore",AtomicFunctionNode.ATOMIC_ADD="atomicAdd",AtomicFunctionNode.ATOMIC_SUB="atomicSub",AtomicFunctionNode.ATOMIC_MAX="atomicMax",AtomicFunctionNode.ATOMIC_MIN="atomicMin",AtomicFunctionNode.ATOMIC_AND="atomicAnd",AtomicFunctionNode.ATOMIC_OR="atomicOr",AtomicFunctionNode.ATOMIC_XOR="atomicXor";export default AtomicFunctionNode;const atomicNode=nodeProxy(AtomicFunctionNode);export const atomicFunc=(o,t,i)=>atomicNode(o,t,i).toStack();export const atomicLoad=o=>atomicFunc(AtomicFunctionNode.ATOMIC_LOAD,o,null);export const atomicStore=(o,t)=>atomicFunc(AtomicFunctionNode.ATOMIC_STORE,o,t);export const atomicAdd=(o,t)=>atomicFunc(AtomicFunctionNode.ATOMIC_ADD,o,t);export const atomicSub=(o,t)=>atomicFunc(AtomicFunctionNode.ATOMIC_SUB,o,t);export const atomicMax=(o,t)=>atomicFunc(AtomicFunctionNode.ATOMIC_MAX,o,t);export const atomicMin=(o,t)=>atomicFunc(AtomicFunctionNode.ATOMIC_MIN,o,t);export const atomicAnd=(o,t)=>atomicFunc(AtomicFunctionNode.ATOMIC_AND,o,t);export const atomicOr=(o,t)=>atomicFunc(AtomicFunctionNode.ATOMIC_OR,o,t);export const atomicXor=(o,t)=>atomicFunc(AtomicFunctionNode.ATOMIC_XOR,o,t);
//# sourceMappingURL=AtomicFunctionNode.js.map