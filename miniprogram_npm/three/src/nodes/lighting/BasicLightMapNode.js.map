{"version":3,"file":"node_modules/three/src/nodes/lighting/BasicLightMapNode.js","names":["LightingNode","float","BasicLightMapNode","type","constructor","lightMapNode","super","this","setup","builder","RECIPROCAL_PI","Math","PI","context","irradianceLightMap","mul"],"sources":["node_modules/three/src/nodes/lighting/BasicLightMapNode.js"],"sourcesContent":["import LightingNode from './LightingNode.js';\nimport { float } from '../tsl/TSLBase.js';\n\n/**\n * A specific version of {@link IrradianceNode} that is only relevant\n * for {@link MeshBasicNodeMaterial}. Since the material is unlit, it\n * requires a special scaling factor for the light map.\n *\n * @augments LightingNode\n */\nclass BasicLightMapNode extends LightingNode {\n\n\tstatic get type() {\n\n\t\treturn 'BasicLightMapNode';\n\n\t}\n\n\t/**\n\t * Constructs a new basic light map node.\n\t *\n\t * @param {?Node<vec3>} [lightMapNode=null] - The light map node.\n\t */\n\tconstructor( lightMapNode = null ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The light map node.\n\t\t *\n\t\t * @type {?Node<vec3>}\n\t\t */\n\t\tthis.lightMapNode = lightMapNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\t// irradianceLightMap property is used in the indirectDiffuse() method of BasicLightingModel\n\n\t\tconst RECIPROCAL_PI = float( 1 / Math.PI );\n\n\t\tbuilder.context.irradianceLightMap = this.lightMapNode.mul( RECIPROCAL_PI );\n\n\t}\n\n}\n\nexport default BasicLightMapNode;\n"],"mappings":"OAAOA,iBAAkB,2BAChBC,UAAa,oBAStB,MAAMC,0BAA0BF,aAE/B,eAAWG,GAEV,MAAO,mBAER,CAOA,WAAAC,CAAaC,EAAe,MAE3BC,QAOAC,KAAKF,aAAeA,CAErB,CAEA,KAAAG,CAAOC,GAIN,MAAMC,EAAgBT,MAAO,EAAIU,KAAKC,IAEtCH,EAAQI,QAAQC,mBAAqBP,KAAKF,aAAaU,IAAKL,EAE7D,iBAIcR","ignoreList":[]}