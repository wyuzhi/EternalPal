{"version":3,"file":"node_modules/three/src/nodes/lighting/EnvironmentNode.js","names":["LightingNode","cache","roughness","clearcoatRoughness","cameraViewMatrix","normalView","clearcoatNormalView","normalWorld","positionViewDirection","float","bentNormalView","pmremTexture","materialEnvIntensity","_envNodeCache","WeakMap","EnvironmentNode","type","constructor","envNode","super","this","setup","builder","material","isTextureNode","isMaterialReferenceNode","value","property","cacheEnvNode","get","undefined","set","radianceNormalView","useAnisotropy","anisotropy","radiance","context","createRadianceContext","mul","irradiance","createIrradianceContext","Math","PI","isolateRadiance","isolateIrradiance","addAssign","iblIrradiance","clearcoatRadiance","lightingModel","clearcoatRadianceContext","isolateClearcoatRadiance","roughnessNode","normalViewNode","reflectVec","getUV","negate","reflect","mix","normalize","transformDirection","getTextureLevel","normalWorldNode"],"sources":["node_modules/three/src/nodes/lighting/EnvironmentNode.js"],"sourcesContent":["import LightingNode from './LightingNode.js';\nimport { cache } from '../core/CacheNode.js';\nimport { roughness, clearcoatRoughness } from '../core/PropertyNode.js';\nimport { cameraViewMatrix } from '../accessors/Camera.js';\nimport { normalView, clearcoatNormalView, normalWorld } from '../accessors/Normal.js';\nimport { positionViewDirection } from '../accessors/Position.js';\nimport { float } from '../tsl/TSLBase.js';\nimport { bentNormalView } from '../accessors/AccessorsUtils.js';\nimport { pmremTexture } from '../pmrem/PMREMNode.js';\nimport { materialEnvIntensity } from '../accessors/MaterialProperties.js';\n\nconst _envNodeCache = new WeakMap();\n\n/**\n * Represents a physical model for Image-based lighting (IBL). The environment\n * is defined via environment maps in the equirectangular, cube map or cubeUV (PMREM) format.\n * `EnvironmentNode` is intended for PBR materials like {@link MeshStandardNodeMaterial}.\n *\n * @augments LightingNode\n */\nclass EnvironmentNode extends LightingNode {\n\n\tstatic get type() {\n\n\t\treturn 'EnvironmentNode';\n\n\t}\n\n\t/**\n\t * Constructs a new environment node.\n\t *\n\t * @param {Node} [envNode=null] - A node representing the environment.\n\t */\n\tconstructor( envNode = null ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * A node representing the environment.\n\t\t *\n\t\t * @type {?Node}\n\t\t * @default null\n\t\t */\n\t\tthis.envNode = envNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { material } = builder;\n\n\t\tlet envNode = this.envNode;\n\n\t\tif ( envNode.isTextureNode || envNode.isMaterialReferenceNode ) {\n\n\t\t\tconst value = ( envNode.isTextureNode ) ? envNode.value : material[ envNode.property ];\n\n\t\t\tlet cacheEnvNode = _envNodeCache.get( value );\n\n\t\t\tif ( cacheEnvNode === undefined ) {\n\n\t\t\t\tcacheEnvNode = pmremTexture( value );\n\n\t\t\t\t_envNodeCache.set( value, cacheEnvNode );\n\n\t\t\t}\n\n\t\t\tenvNode\t= cacheEnvNode;\n\n\t\t}\n\n\t\t//\n\n\t\tconst useAnisotropy = material.useAnisotropy === true || material.anisotropy > 0;\n\t\tconst radianceNormalView = useAnisotropy ? bentNormalView : normalView;\n\n\t\tconst radiance = envNode.context( createRadianceContext( roughness, radianceNormalView ) ).mul( materialEnvIntensity );\n\t\tconst irradiance = envNode.context( createIrradianceContext( normalWorld ) ).mul( Math.PI ).mul( materialEnvIntensity );\n\n\t\tconst isolateRadiance = cache( radiance );\n\t\tconst isolateIrradiance = cache( irradiance );\n\n\t\t//\n\n\t\tbuilder.context.radiance.addAssign( isolateRadiance );\n\n\t\tbuilder.context.iblIrradiance.addAssign( isolateIrradiance );\n\n\t\t//\n\n\t\tconst clearcoatRadiance = builder.context.lightingModel.clearcoatRadiance;\n\n\t\tif ( clearcoatRadiance ) {\n\n\t\t\tconst clearcoatRadianceContext = envNode.context( createRadianceContext( clearcoatRoughness, clearcoatNormalView ) ).mul( materialEnvIntensity );\n\t\t\tconst isolateClearcoatRadiance = cache( clearcoatRadianceContext );\n\n\t\t\tclearcoatRadiance.addAssign( isolateClearcoatRadiance );\n\n\t\t}\n\n\t}\n\n}\n\nexport default EnvironmentNode;\n\nconst createRadianceContext = ( roughnessNode, normalViewNode ) => {\n\n\tlet reflectVec = null;\n\n\treturn {\n\t\tgetUV: () => {\n\n\t\t\tif ( reflectVec === null ) {\n\n\t\t\t\treflectVec = positionViewDirection.negate().reflect( normalViewNode );\n\n\t\t\t\t// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t\t\treflectVec = roughnessNode.mul( roughnessNode ).mix( reflectVec, normalViewNode ).normalize();\n\n\t\t\t\treflectVec = reflectVec.transformDirection( cameraViewMatrix );\n\n\t\t\t}\n\n\t\t\treturn reflectVec;\n\n\t\t},\n\t\tgetTextureLevel: () => {\n\n\t\t\treturn roughnessNode;\n\n\t\t}\n\t};\n\n};\n\nconst createIrradianceContext = ( normalWorldNode ) => {\n\n\treturn {\n\t\tgetUV: () => {\n\n\t\t\treturn normalWorldNode;\n\n\t\t},\n\t\tgetTextureLevel: () => {\n\n\t\t\treturn float( 1.0 );\n\n\t\t}\n\t};\n\n};\n"],"mappings":"OAAOA,iBAAkB,2BAChBC,UAAa,8BACbC,UAAWC,uBAA0B,iCACrCC,qBAAwB,gCACxBC,WAAYC,oBAAqBC,gBAAmB,gCACpDC,0BAA6B,kCAC7BC,UAAa,2BACbC,mBAAsB,wCACtBC,iBAAoB,+BACpBC,yBAA4B,qCAErC,MAAMC,cAAgB,IAAIC,QAS1B,MAAMC,wBAAwBf,aAE7B,eAAWgB,GAEV,MAAO,iBAER,CAOA,WAAAC,CAAaC,EAAU,MAEtBC,QAQAC,KAAKF,QAAUA,CAEhB,CAEA,KAAAG,CAAOC,GAEN,MAAMC,SAAEA,GAAaD,EAErB,IAAIJ,EAAUE,KAAKF,QAEnB,GAAKA,EAAQM,eAAiBN,EAAQO,wBAA0B,CAE/D,MAAMC,EAAUR,EAAsB,cAAIA,EAAQQ,MAAQH,EAAUL,EAAQS,UAE5E,IAAIC,EAAef,cAAcgB,IAAKH,QAEhBI,IAAjBF,IAEJA,EAAejB,aAAce,GAE7Bb,cAAckB,IAAKL,EAAOE,IAI3BV,EAAUU,CAEX,CAIA,MACMI,GAD2C,IAA3BT,EAASU,eAA0BV,EAASW,WAAa,EACpCxB,eAAiBL,WAEtD8B,EAAWjB,EAAQkB,QAASC,sBAAuBnC,UAAW8B,IAAuBM,IAAK1B,sBAC1F2B,EAAarB,EAAQkB,QAASI,wBAAyBjC,cAAgB+B,IAAKG,KAAKC,IAAKJ,IAAK1B,sBAE3F+B,EAAkB1C,MAAOkC,GACzBS,EAAoB3C,MAAOsC,GAIjCjB,EAAQc,QAAQD,SAASU,UAAWF,GAEpCrB,EAAQc,QAAQU,cAAcD,UAAWD,GAIzC,MAAMG,EAAoBzB,EAAQc,QAAQY,cAAcD,kBAExD,GAAKA,EAAoB,CAExB,MAAME,EAA2B/B,EAAQkB,QAASC,sBAAuBlC,mBAAoBG,sBAAwBgC,IAAK1B,sBACpHsC,EAA2BjD,MAAOgD,GAExCF,EAAkBF,UAAWK,EAE9B,CAED,iBAIcnC,gBAEf,MAAMsB,sBAAwB,CAAEc,EAAeC,KAE9C,IAAIC,EAAa,KAEjB,MAAO,CACNC,MAAO,KAEc,OAAfD,IAEJA,EAAa7C,sBAAsB+C,SAASC,QAASJ,GAGrDC,EAAaF,EAAcb,IAAKa,GAAgBM,IAAKJ,EAAYD,GAAiBM,YAElFL,EAAaA,EAAWM,mBAAoBvD,mBAItCiD,GAGRO,gBAAiB,IAETT,EAGR,EAIIX,wBAA4BqB,IAE1B,CACNP,MAAO,IAECO,EAGRD,gBAAiB,IAETnD,MAAO","ignoreList":[]}