import AnalyticLightNode from"./AnalyticLightNode.js";import{uniform}from"../core/UniformNode.js";import{mix}from"../math/MathNode.js";import{normalWorld}from"../accessors/Normal.js";import{lightPosition}from"../accessors/Lights.js";import{renderGroup}from"../core/UniformGroupNode.js";import{Color}from"../../math/Color.js";class HemisphereLightNode extends AnalyticLightNode{static get type(){return"HemisphereLightNode"}constructor(o=null){super(o),this.lightPositionNode=lightPosition(o),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=uniform(new Color).setGroup(renderGroup)}update(o){const{light:t}=this;super.update(o),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(o){const{colorNode:t,groundColorNode:i,lightDirectionNode:r}=this,e=normalWorld.dot(r).mul(.5).add(.5),s=mix(i,t,e);o.context.irradiance.addAssign(s)}}export default HemisphereLightNode;
//# sourceMappingURL=HemisphereLightNode.js.map