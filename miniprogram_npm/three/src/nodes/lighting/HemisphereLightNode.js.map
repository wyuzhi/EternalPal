{"version":3,"file":"node_modules/three/src/nodes/lighting/HemisphereLightNode.js","names":["AnalyticLightNode","uniform","mix","normalWorld","lightPosition","renderGroup","Color","HemisphereLightNode","type","constructor","light","super","this","lightPositionNode","lightDirectionNode","normalize","groundColorNode","setGroup","update","frame","object3d","value","copy","groundColor","multiplyScalar","intensity","setup","builder","colorNode","hemiDiffuseWeight","dot","mul","add","irradiance","context","addAssign"],"sources":["node_modules/three/src/nodes/lighting/HemisphereLightNode.js"],"sourcesContent":["import AnalyticLightNode from './AnalyticLightNode.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { normalWorld } from '../accessors/Normal.js';\nimport { lightPosition } from '../accessors/Lights.js';\nimport { renderGroup } from '../core/UniformGroupNode.js';\n\nimport { Color } from '../../math/Color.js';\n\n/**\n * Module for representing hemisphere lights as nodes.\n *\n * @augments AnalyticLightNode\n */\nclass HemisphereLightNode extends AnalyticLightNode {\n\n\tstatic get type() {\n\n\t\treturn 'HemisphereLightNode';\n\n\t}\n\n\t/**\n\t * Constructs a new hemisphere light node.\n\t *\n\t * @param {?HemisphereLight} [light=null] - The hemisphere light source.\n\t */\n\tconstructor( light = null ) {\n\n\t\tsuper( light );\n\n\t\t/**\n\t\t * Uniform node representing the light's position.\n\t\t *\n\t\t * @type {UniformNode<vec3>}\n\t\t */\n\t\tthis.lightPositionNode = lightPosition( light );\n\n\t\t/**\n\t\t * A node representing the light's direction.\n\t\t *\n\t\t * @type {Node<vec3>}\n\t\t */\n\t\tthis.lightDirectionNode = this.lightPositionNode.normalize();\n\n\t\t/**\n\t\t * Uniform node representing the light's ground color.\n\t\t *\n\t\t * @type {UniformNode<vec3>}\n\t\t */\n\t\tthis.groundColorNode = uniform( new Color() ).setGroup( renderGroup );\n\n\t}\n\n\t/**\n\t * Overwritten to updated hemisphere light specific uniforms.\n\t *\n\t * @param {NodeFrame} frame - A reference to the current node frame.\n\t */\n\tupdate( frame ) {\n\n\t\tconst { light } = this;\n\n\t\tsuper.update( frame );\n\n\t\tthis.lightPositionNode.object3d = light;\n\n\t\tthis.groundColorNode.value.copy( light.groundColor ).multiplyScalar( light.intensity );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { colorNode, groundColorNode, lightDirectionNode } = this;\n\n\t\tconst dotNL = normalWorld.dot( lightDirectionNode );\n\t\tconst hemiDiffuseWeight = dotNL.mul( 0.5 ).add( 0.5 );\n\n\t\tconst irradiance = mix( groundColorNode, colorNode, hemiDiffuseWeight );\n\n\t\tbuilder.context.irradiance.addAssign( irradiance );\n\n\t}\n\n}\n\nexport default HemisphereLightNode;\n"],"mappings":"OAAOA,sBAAuB,gCACrBC,YAAe,gCACfC,QAAW,6BACXC,gBAAmB,gCACnBC,kBAAqB,gCACrBC,gBAAmB,qCAEnBC,UAAa,sBAOtB,MAAMC,4BAA4BP,kBAEjC,eAAWQ,GAEV,MAAO,qBAER,CAOA,WAAAC,CAAaC,EAAQ,MAEpBC,MAAOD,GAOPE,KAAKC,kBAAoBT,cAAeM,GAOxCE,KAAKE,mBAAqBF,KAAKC,kBAAkBE,YAOjDH,KAAKI,gBAAkBf,QAAS,IAAIK,OAAUW,SAAUZ,YAEzD,CAOA,MAAAa,CAAQC,GAEP,MAAMT,MAAEA,GAAUE,KAElBD,MAAMO,OAAQC,GAEdP,KAAKC,kBAAkBO,SAAWV,EAElCE,KAAKI,gBAAgBK,MAAMC,KAAMZ,EAAMa,aAAcC,eAAgBd,EAAMe,UAE5E,CAEA,KAAAC,CAAOC,GAEN,MAAMC,UAAEA,EAASZ,gBAAEA,EAAeF,mBAAEA,GAAuBF,KAGrDiB,EADQ1B,YAAY2B,IAAKhB,GACCiB,IAAK,IAAMC,IAAK,IAE1CC,EAAa/B,IAAKc,EAAiBY,EAAWC,GAEpDF,EAAQO,QAAQD,WAAWE,UAAWF,EAEvC,iBAIc1B","ignoreList":[]}