{"version":3,"file":"node_modules/three/src/nodes/lighting/IESSpotLightNode.js","names":["SpotLightNode","texture","vec2","IESSpotLightNode","type","getSpotAttenuation","builder","angleCosine","iesMap","this","light","spotAttenuation","isTexture","angle","acos","mul","Math","PI","r","super"],"sources":["node_modules/three/src/nodes/lighting/IESSpotLightNode.js"],"sourcesContent":["import SpotLightNode from './SpotLightNode.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { vec2 } from '../tsl/TSLBase.js';\n\n/**\n * An IES version of the default spot light node.\n *\n * @augments SpotLightNode\n */\nclass IESSpotLightNode extends SpotLightNode {\n\n\tstatic get type() {\n\n\t\treturn 'IESSpotLightNode';\n\n\t}\n\n\t/**\n\t * Overwrites the default implementation to compute an IES conform spot attenuation.\n\t *\n\t * @param {NodeBuilder} builder - The node builder.\n\t * @param {Node<float>} angleCosine - The angle to compute the spot attenuation for.\n\t * @return {Node<float>} The spot attenuation.\n\t */\n\tgetSpotAttenuation( builder, angleCosine ) {\n\n\t\tconst iesMap = this.light.iesMap;\n\n\t\tlet spotAttenuation = null;\n\n\t\tif ( iesMap && iesMap.isTexture === true ) {\n\n\t\t\tconst angle = angleCosine.acos().mul( 1.0 / Math.PI );\n\n\t\t\tspotAttenuation = texture( iesMap, vec2( angle, 0 ), 0 ).r;\n\n\t\t} else {\n\n\t\t\tspotAttenuation = super.getSpotAttenuation( angleCosine );\n\n\t\t}\n\n\t\treturn spotAttenuation;\n\n\t}\n\n}\n\nexport default IESSpotLightNode;\n"],"mappings":"OAAOA,kBAAmB,4BACjBC,YAAe,qCACfC,SAAY,oBAOrB,MAAMC,yBAAyBH,cAE9B,eAAWI,GAEV,MAAO,kBAER,CASA,kBAAAC,CAAoBC,EAASC,GAE5B,MAAMC,EAASC,KAAKC,MAAMF,OAE1B,IAAIG,EAAkB,KAEtB,GAAKH,IAA+B,IAArBA,EAAOI,UAAqB,CAE1C,MAAMC,EAAQN,EAAYO,OAAOC,IAAK,EAAMC,KAAKC,IAEjDN,EAAkBV,QAASO,EAAQN,KAAMW,EAAO,GAAK,GAAIK,CAE1D,MAECP,EAAkBQ,MAAMd,mBAAoBE,GAI7C,OAAOI,CAER,iBAIcR","ignoreList":[]}