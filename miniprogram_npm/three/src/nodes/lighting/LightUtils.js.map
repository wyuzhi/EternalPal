{"version":3,"file":"node_modules/three/src/nodes/lighting/LightUtils.js","names":["Fn","getDistanceAttenuation","lightDistance","cutoffDistance","decayExponent","distanceFalloff","pow","max","reciprocal","greaterThan","select","mul","div","pow4","oneMinus","clamp","pow2"],"sources":["node_modules/three/src/nodes/lighting/LightUtils.js"],"sourcesContent":["import { Fn } from '../tsl/TSLBase.js';\n\n/**\n * Represents a `discard` shader operation in TSL.\n *\n * @method\n * @param {Object} inputs - The input parameter object.\n * @param {Node<float>} inputs.lightDistance - The distance of the light's position to the current fragment position.\n * @param {Node<float>} inputs.cutoffDistance - The light's cutoff distance.\n * @param {Node<float>} inputs.decayExponent - The light's decay exponent.\n * @return {Node<float>} The distance falloff.\n */\nexport const getDistanceAttenuation = /*@__PURE__*/ Fn( ( { lightDistance, cutoffDistance, decayExponent } ) => {\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\tconst distanceFalloff = lightDistance.pow( decayExponent ).max( 0.01 ).reciprocal();\n\n\treturn cutoffDistance.greaterThan( 0 ).select(\n\t\tdistanceFalloff.mul( lightDistance.div( cutoffDistance ).pow4().oneMinus().clamp().pow2() ),\n\t\tdistanceFalloff\n\t);\n\n} ); // validated\n"],"mappings":"OAASA,OAAU,2BAYZ,MAAMC,uBAAuCD,IAAI,EAAIE,gBAAeC,iBAAgBC,oBAK1F,MAAMC,EAAkBH,EAAcI,IAAKF,GAAgBG,IAAK,KAAOC,aAEvE,OAAOL,EAAeM,YAAa,GAAIC,OACtCL,EAAgBM,IAAKT,EAAcU,IAAKT,GAAiBU,OAAOC,WAAWC,QAAQC,QACnFX,EACA","ignoreList":[]}