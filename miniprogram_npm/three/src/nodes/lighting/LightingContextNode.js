import ContextNode from"../core/ContextNode.js";import{nodeProxy,float,vec3}from"../tsl/TSLBase.js";class LightingContextNode extends ContextNode{static get type(){return"LightingContextNode"}constructor(e,t=null,i=null,o=null){super(e),this.lightingModel=t,this.backdropNode=i,this.backdropAlphaNode=o,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,i={directDiffuse:vec3().toVar("directDiffuse"),directSpecular:vec3().toVar("directSpecular"),indirectDiffuse:vec3().toVar("indirectDiffuse"),indirectSpecular:vec3().toVar("indirectSpecular")};return{radiance:vec3().toVar("radiance"),irradiance:vec3().toVar("irradiance"),iblIrradiance:vec3().toVar("iblIrradiance"),ambientOcclusion:float(1).toVar("ambientOcclusion"),reflectedLight:i,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}export default LightingContextNode;export const lightingContext=nodeProxy(LightingContextNode);
//# sourceMappingURL=LightingContextNode.js.map