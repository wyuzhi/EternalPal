import AnalyticLightNode from"./AnalyticLightNode.js";import{getDistanceAttenuation}from"./LightUtils.js";import{uniform}from"../core/UniformNode.js";import{renderGroup}from"../core/UniformGroupNode.js";import{pointShadow}from"./PointShadowNode.js";export const directPointLight=({color:t,lightVector:o,cutoffDistance:e,decayExponent:i})=>{const n=o.normalize(),r=o.length(),c=getDistanceAttenuation({lightDistance:r,cutoffDistance:e,decayExponent:i});return{lightDirection:n,lightColor:t.mul(c)}};class PointLightNode extends AnalyticLightNode{static get type(){return"PointLightNode"}constructor(t=null){super(t),this.cutoffDistanceNode=uniform(0).setGroup(renderGroup),this.decayExponentNode=uniform(2).setGroup(renderGroup)}update(t){const{light:o}=this;super.update(t),this.cutoffDistanceNode.value=o.distance,this.decayExponentNode.value=o.decay}setupShadowNode(){return pointShadow(this.light)}setupDirect(t){return directPointLight({color:this.colorNode,lightVector:this.getLightVector(t),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode})}}export default PointLightNode;
//# sourceMappingURL=PointLightNode.js.map