import Node from"../core/Node.js";import{property}from"../core/PropertyNode.js";import{addMethodChaining,nodeProxy}from"../tsl/TSLCore.js";class ConditionalNode extends Node{static get type(){return"ConditionalNode"}constructor(e,o,t=null){super(),this.condNode=e,this.ifNode=o,this.elseNode=t}getNodeType(e){const{ifNode:o,elseNode:t}=e.getNodeProperties(this);if(void 0===o)return e.flowBuildStage(this,"setup"),this.getNodeType(e);const n=o.getNodeType(e);if(null!==t){const o=t.getNodeType(e);if(e.getTypeLength(o)>e.getTypeLength(n))return o}return n}setup(e){const o=this.condNode.cache(),t=this.ifNode.cache(),n=this.elseNode?this.elseNode.cache():null,d=e.context.nodeBlock;e.getDataFromNode(t).parentNodeBlock=d,null!==n&&(e.getDataFromNode(n).parentNodeBlock=d);const r=e.getNodeProperties(this);r.condNode=o,r.ifNode=t.context({nodeBlock:t}),r.elseNode=n?n.context({nodeBlock:n}):null}generate(e,o){const t=this.getNodeType(e),n=e.getDataFromNode(this);if(void 0!==n.nodeProperty)return n.nodeProperty;const{condNode:d,ifNode:r,elseNode:l}=e.getNodeProperties(this),i=e.currentFunctionNode,s="void"!==o,a=s?property(t).build(e):"";n.nodeProperty=a;const c=d.build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${c} ) {\n\n`).addFlowTab();let u=r.build(e,t);if(u&&(s?u=a+" = "+u+";":(u="return "+u+";",null===i&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),u="// "+u))),e.removeFlowTab().addFlowCode(e.tab+"\t"+u+"\n\n"+e.tab+"}"),null!==l){e.addFlowCode(" else {\n\n").addFlowTab();let o=l.build(e,t);o&&(s?o=a+" = "+o+";":(o="return "+o+";",null===i&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),o="// "+o))),e.removeFlowTab().addFlowCode(e.tab+"\t"+o+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return e.format(a,t,o)}}export default ConditionalNode;export const select=nodeProxy(ConditionalNode).setParameterLength(2,3);addMethodChaining("select",select);
//# sourceMappingURL=ConditionalNode.js.map