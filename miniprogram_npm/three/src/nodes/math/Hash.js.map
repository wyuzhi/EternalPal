{"version":3,"file":"node_modules/three/src/nodes/math/Hash.js","names":["Fn","hash","seed","state","toUint","mul","add","word","shiftRight","bitXor","toFloat"],"sources":["node_modules/three/src/nodes/math/Hash.js"],"sourcesContent":["import { Fn } from '../tsl/TSLBase.js';\n\n/**\n * Generates a hash value in the range `[0, 1]` from the given seed.\n *\n * @tsl\n * @function\n * @param {Node<float>} seed - The seed.\n * @return {Node<float>} The hash value.\n */\nexport const hash = /*@__PURE__*/ Fn( ( [ seed ] ) => {\n\n\t// Taken from https://www.shadertoy.com/view/XlGcRh, originally from pcg-random.org\n\n\tconst state = seed.toUint().mul( 747796405 ).add( 2891336453 );\n\tconst word = state.shiftRight( state.shiftRight( 28 ).add( 4 ) ).bitXor( state ).mul( 277803737 );\n\tconst result = word.shiftRight( 22 ).bitXor( word );\n\n\treturn result.toFloat().mul( 1 / 2 ** 32 ); // Convert to range [0, 1)\n\n} );\n"],"mappings":"OAASA,OAAU,2BAUZ,MAAMC,KAAqBD,IAAI,EAAIE,MAIzC,MAAMC,EAAQD,EAAKE,SAASC,IAAK,WAAYC,IAAK,YAC5CC,EAAOJ,EAAMK,WAAYL,EAAMK,WAAY,IAAKF,IAAK,IAAMG,OAAQN,GAAQE,IAAK,WAGtF,OAFeE,EAAKC,WAAY,IAAKC,OAAQF,GAE/BG,UAAUL,IAAK,EAAI,GAAK,GAAI","ignoreList":[]}