{"version":3,"file":"node_modules/three/src/nodes/shapes/Shapes.js","names":["Fn","float","select","lengthSq","smoothstep","uv","shapeCircle","coord","renderer","material","len2","mul","sub","alpha","alphaToCoverage","samples","dlen","fwidth","toVar","oneMinus","add","greaterThan"],"sources":["node_modules/three/src/nodes/shapes/Shapes.js"],"sourcesContent":["import { Fn, float, select } from '../tsl/TSLBase.js';\nimport { lengthSq, smoothstep } from '../math/MathNode.js';\nimport { uv } from '../accessors/UV.js';\n\n/**\n * Generates a circle based on the uv coordinates.\n *\n * @tsl\n * @function\n * @param {Node<vec2>} coord - The uv to generate the circle.\n * @return {Node<float>} The circle shape.\n */\nexport const shapeCircle = Fn( ( [ coord = uv() ], { renderer, material } ) => {\n\n\tconst len2 = lengthSq( coord.mul( 2 ).sub( 1 ) );\n\n\tlet alpha;\n\n\tif ( material.alphaToCoverage && renderer.samples > 1 ) {\n\n\t\tconst dlen = float( len2.fwidth() ).toVar();\n\n\t\talpha = smoothstep( dlen.oneMinus(), dlen.add( 1 ), len2 ).oneMinus();\n\n\t} else {\n\n\t\talpha = select( len2.greaterThan( 1.0 ), 0, 1 );\n\n\t}\n\n\treturn alpha;\n\n} );\n"],"mappings":"OAASA,GAAIC,MAAOC,WAAc,2BACzBC,SAAUC,eAAkB,6BAC5BC,OAAU,4BAUZ,MAAMC,YAAcN,IAAI,EAAIO,EAAQF,OAAUG,WAAUC,eAE9D,MAAMC,EAAOP,SAAUI,EAAMI,IAAK,GAAIC,IAAK,IAE3C,IAAIC,EAEJ,GAAKJ,EAASK,iBAAmBN,EAASO,QAAU,EAAI,CAEvD,MAAMC,EAAOf,MAAOS,EAAKO,UAAWC,QAEpCL,EAAQT,WAAYY,EAAKG,WAAYH,EAAKI,IAAK,GAAKV,GAAOS,UAE5D,MAECN,EAAQX,OAAQQ,EAAKW,YAAa,GAAO,EAAG,GAI7C,OAAOR,CAAK","ignoreList":[]}