{"version":3,"file":"node_modules/three/src/nodes/utils/ArrayElementNode.js","names":["Node","ArrayElementNode","type","constructor","node","indexNode","super","this","isArrayElementNode","getNodeType","builder","getElementType","generate","indexType","build","isVector","isInteger"],"sources":["node_modules/three/src/nodes/utils/ArrayElementNode.js"],"sourcesContent":["import Node from '../core/Node.js';\n\n/**\n * Base class for representing element access on an array-like\n * node data structures.\n *\n * @augments Node\n */\nclass ArrayElementNode extends Node { // @TODO: If extending from TempNode it breaks webgpu_compute\n\n\tstatic get type() {\n\n\t\treturn 'ArrayElementNode';\n\n\t}\n\n\t/**\n\t * Constructs an array element node.\n\t *\n\t * @param {Node} node - The array-like node.\n\t * @param {Node} indexNode - The index node that defines the element access.\n\t */\n\tconstructor( node, indexNode ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The array-like node.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.node = node;\n\n\t\t/**\n\t\t * The index node that defines the element access.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.indexNode = indexNode;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isArrayElementNode = true;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from the array-like node.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {string} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getElementType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst indexType = this.indexNode.getNodeType( builder );\n\n\t\tconst nodeSnippet = this.node.build( builder );\n\t\tconst indexSnippet = this.indexNode.build( builder, ! builder.isVector( indexType ) && builder.isInteger( indexType ) ? indexType : 'uint' );\n\n\t\treturn `${ nodeSnippet }[ ${ indexSnippet } ]`;\n\n\t}\n\n}\n\nexport default ArrayElementNode;\n"],"mappings":"OAAOA,SAAU,kBAQjB,MAAMC,yBAAyBD,KAE9B,eAAWE,GAEV,MAAO,kBAER,CAQA,WAAAC,CAAaC,EAAMC,GAElBC,QAOAC,KAAKH,KAAOA,EAOZG,KAAKF,UAAYA,EASjBE,KAAKC,oBAAqB,CAE3B,CAQA,WAAAC,CAAaC,GAEZ,OAAOH,KAAKH,KAAKO,eAAgBD,EAElC,CAEA,QAAAE,CAAUF,GAET,MAAMG,EAAYN,KAAKF,UAAUI,YAAaC,GAK9C,MAAO,GAHaH,KAAKH,KAAKU,MAAOJ,OAChBH,KAAKF,UAAUS,MAAOJ,GAAWA,EAAQK,SAAUF,IAAeH,EAAQM,UAAWH,GAAcA,EAAY,WAIrI,iBAIcZ","ignoreList":[]}