import TempNode from"../core/TempNode.js";import{addMethodChaining,nodeObject}from"../tsl/TSLCore.js";class DebugNode extends TempNode{static get type(){return"DebugNode"}constructor(e,t=null){super(),this.node=e,this.callback=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const t=this.callback,o=this.node.build(e),d="--- TSL debug - "+e.shaderStage+" shader ---",n="-".repeat(d.length);let r="";return r+="// #"+d+"#\n",r+=e.flow.code.replace(/^\t/gm,"")+"\n",r+="/* ... */ "+o+" /* ... */\n",r+="// #"+n+"#\n",null!==t?t(e,r):console.log(r),o}}export default DebugNode;export const debug=(e,t=null)=>nodeObject(new DebugNode(nodeObject(e),t)).toStack();addMethodChaining("debug",debug);
//# sourceMappingURL=DebugNode.js.map