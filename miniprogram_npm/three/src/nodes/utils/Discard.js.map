{"version":3,"file":"node_modules/three/src/nodes/utils/Discard.js","names":["select","expression","addMethodChaining","Discard","conditional","toStack","Return"],"sources":["node_modules/three/src/nodes/utils/Discard.js"],"sourcesContent":["import { select } from '../math/ConditionalNode.js';\nimport { expression } from '../code/ExpressionNode.js';\nimport { addMethodChaining } from '../tsl/TSLCore.js';\n\n/**\n * Represents a `discard` shader operation in TSL.\n *\n * @tsl\n * @function\n * @param {?ConditionalNode} conditional - An optional conditional node. It allows to decide whether the discard should be executed or not.\n * @return {Node} The `discard` expression.\n */\nexport const Discard = ( conditional ) => ( conditional ? select( conditional, expression( 'discard' ) ) : expression( 'discard' ) ).toStack();\n\n/**\n * Represents a `return` shader operation in TSL.\n *\n * @tsl\n * @function\n * @return {ExpressionNode} The `return` expression.\n */\nexport const Return = () => expression( 'return' ).toStack();\n\naddMethodChaining( 'discard', Discard );\n"],"mappings":"OAASA,WAAc,oCACdC,eAAkB,mCAClBC,sBAAyB,2BAU3B,MAAMC,QAAYC,IAAmBA,EAAcJ,OAAQI,EAAaH,WAAY,YAAgBA,WAAY,YAAcI,iBAS9H,MAAMC,OAAS,IAAML,WAAY,UAAWI,UAEnDH,kBAAmB,UAAWC","ignoreList":[]}