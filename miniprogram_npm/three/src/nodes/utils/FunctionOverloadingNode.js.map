{"version":3,"file":"node_modules/three/src/nodes/utils/FunctionOverloadingNode.js","names":["Node","nodeProxy","FunctionOverloadingNode","type","constructor","functionNodes","parametersNodes","super","this","_candidateFnCall","global","getNodeType","shaderNode","layout","setup","builder","params","candidateFnCall","candidateFn","candidateScore","functionNode","Error","inputs","length","score","i","param","input","overloadingBaseFn","overloadingFn"],"sources":["node_modules/three/src/nodes/utils/FunctionOverloadingNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport { nodeProxy } from '../tsl/TSLCore.js';\n\n/**\n * This class allows to define multiple overloaded versions\n * of the same function. Depending on the parameters of the function\n * call, the node picks the best-fit overloaded version.\n *\n * @augments Node\n */\nclass FunctionOverloadingNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'FunctionOverloadingNode';\n\n\t}\n\n\t/**\n\t * Constructs a new function overloading node.\n\t *\n\t * @param {Array<Function>} functionNodes - Array of `Fn` function definitions.\n\t * @param {...Node} parametersNodes - A list of parameter nodes.\n\t */\n\tconstructor( functionNodes = [], ...parametersNodes ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * Array of `Fn` function definitions.\n\t\t *\n\t\t * @type {Array<Function>}\n\t\t */\n\t\tthis.functionNodes = functionNodes;\n\n\t\t/**\n\t\t * A list of parameter nodes.\n\t\t *\n\t\t * @type {Array<Node>}\n\t\t */\n\t\tthis.parametersNodes = parametersNodes;\n\n\t\t/**\n\t\t * The selected overloaded function call.\n\t\t *\n\t\t * @private\n\t\t * @type {ShaderCallNodeInternal}\n\t\t */\n\t\tthis._candidateFnCall = null;\n\n\t\t/**\n\t\t * This node is marked as global.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.global = true;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from\n\t * the function's return type.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {string} The node type.\n\t */\n\tgetNodeType() {\n\n\t\treturn this.functionNodes[ 0 ].shaderNode.layout.type;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst params = this.parametersNodes;\n\n\t\tlet candidateFnCall = this._candidateFnCall;\n\n\t\tif ( candidateFnCall === null ) {\n\n\t\t\tlet candidateFn = null;\n\t\t\tlet candidateScore = - 1;\n\n\t\t\tfor ( const functionNode of this.functionNodes ) {\n\n\t\t\t\tconst shaderNode = functionNode.shaderNode;\n\t\t\t\tconst layout = shaderNode.layout;\n\n\t\t\t\tif ( layout === null ) {\n\n\t\t\t\t\tthrow new Error( 'FunctionOverloadingNode: FunctionNode must be a layout.' );\n\n\t\t\t\t}\n\n\t\t\t\tconst inputs = layout.inputs;\n\n\t\t\t\tif ( params.length === inputs.length ) {\n\n\t\t\t\t\tlet score = 0;\n\n\t\t\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\n\n\t\t\t\t\t\tconst param = params[ i ];\n\t\t\t\t\t\tconst input = inputs[ i ];\n\n\t\t\t\t\t\tif ( param.getNodeType( builder ) === input.type ) {\n\n\t\t\t\t\t\t\tscore ++;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tscore = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( score > candidateScore ) {\n\n\t\t\t\t\t\tcandidateFn = functionNode;\n\t\t\t\t\t\tcandidateScore = score;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._candidateFnCall = candidateFnCall = candidateFn( ...params );\n\n\t\t}\n\n\t\treturn candidateFnCall;\n\n\t}\n\n}\n\nexport default FunctionOverloadingNode;\n\nconst overloadingBaseFn = /*@__PURE__*/ nodeProxy( FunctionOverloadingNode );\n\n/**\n * TSL function for creating a function overloading node.\n *\n * @tsl\n * @function\n * @param {Array<Function>} functionNodes - Array of `Fn` function definitions.\n * @returns {FunctionOverloadingNode}\n */\nexport const overloadingFn = ( functionNodes ) => ( ...params ) => overloadingBaseFn( functionNodes, ...params );\n"],"mappings":"OAAOA,SAAU,yBACRC,cAAiB,oBAS1B,MAAMC,gCAAgCF,KAErC,eAAWG,GAEV,MAAO,yBAER,CAQA,WAAAC,CAAaC,EAAgB,MAAOC,GAEnCC,QAOAC,KAAKH,cAAgBA,EAOrBG,KAAKF,gBAAkBA,EAQvBE,KAAKC,iBAAmB,KAQxBD,KAAKE,QAAS,CAEf,CASA,WAAAC,GAEC,OAAOH,KAAKH,cAAe,GAAIO,WAAWC,OAAOV,IAElD,CAEA,KAAAW,CAAOC,GAEN,MAAMC,EAASR,KAAKF,gBAEpB,IAAIW,EAAkBT,KAAKC,iBAE3B,GAAyB,OAApBQ,EAA2B,CAE/B,IAAIC,EAAc,KACdC,GAAmB,EAEvB,IAAM,MAAMC,KAAgBZ,KAAKH,cAAgB,CAEhD,MACMQ,EADaO,EAAaR,WACNC,OAE1B,GAAgB,OAAXA,EAEJ,MAAM,IAAIQ,MAAO,2DAIlB,MAAMC,EAAST,EAAOS,OAEtB,GAAKN,EAAOO,SAAWD,EAAOC,OAAS,CAEtC,IAAIC,EAAQ,EAEZ,IAAM,IAAIC,EAAI,EAAGA,EAAIT,EAAOO,OAAQE,IAAO,CAE1C,MAAMC,EAAQV,EAAQS,GAChBE,EAAQL,EAAQG,GAEjBC,EAAMf,YAAaI,KAAcY,EAAMxB,KAE3CqB,IAIAA,EAAQ,CAIV,CAEKA,EAAQL,IAEZD,EAAcE,EACdD,EAAiBK,EAInB,CAED,CAEAhB,KAAKC,iBAAmBQ,EAAkBC,KAAgBF,EAE3D,CAEA,OAAOC,CAER,iBAIcf,wBAEf,MAAM0B,kBAAkC3B,UAAWC,gCAU5C,MAAM2B,cAAkBxB,GAAmB,IAAKW,IAAYY,kBAAmBvB,KAAkBW","ignoreList":[]}