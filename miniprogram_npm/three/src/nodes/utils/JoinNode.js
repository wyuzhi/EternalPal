import TempNode from"../core/TempNode.js";class JoinNode extends TempNode{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce(((t,o)=>t+e.getTypeLength(o.getNodeType(e))),0))}generate(e,t){const o=this.getNodeType(e),n=e.getTypeLength(o),r=this.nodes,p=e.getComponentType(o),s=[];let g=0;for(const t of r){if(g>=n){console.error(`THREE.TSL: Length of parameters exceeds maximum length of function '${o}()' type.`);break}let r,d=t.getNodeType(e),T=e.getTypeLength(d);g+T>n&&(console.error(`THREE.TSL: Length of '${o}()' data exceeds maximum length of output type.`),T=n-g,d=e.getTypeFromLength(T)),g+=T,r=t.build(e,d);const m=e.getComponentType(d);m!==p&&(r=e.format(r,m,p)),s.push(r)}const d=`${e.getType(o)}( ${s.join(", ")} )`;return e.format(d,o,t)}}export default JoinNode;
//# sourceMappingURL=JoinNode.js.map