import Node from"../core/Node.js";import{expression}from"../code/ExpressionNode.js";import{nodeObject,nodeArray,Fn}from"../tsl/TSLBase.js";class LoopNode extends Node{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt(0)+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const o={};for(let e=0,t=this.params.length-1;e<t;e++){const t=this.params[e],r=!0!==t.isNode&&t.name||this.getVarName(e),n=!0!==t.isNode&&t.type||"int";o[r]=expression(r,n)}const r=e.addStack();t.returnsNode=this.params[this.params.length-1](o,e),t.stackNode=r;const n=this.params[0];return!0!==n.isNode&&"function"==typeof n.update&&(t.updateNode=Fn(this.params[0].update)(o)),e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),o=this.params,r=t.stackNode;for(let r=0,n=o.length-1;r<n;r++){const n=o[r];let s,a=!1,d=null,i=null,l=null,p=null,u=null,c=null;if(n.isNode?"bool"===n.getNodeType(e)?(a=!0,p="bool",i=n.build(e,p)):(p="int",l=this.getVarName(r),d="0",i=n.build(e,p),u="<"):(p=n.type||"int",l=n.name||this.getVarName(r),d=n.start,i=n.end,u=n.condition,c=n.update,"number"==typeof d?d=e.generateConst(p,d):d&&d.isNode&&(d=d.build(e,p)),"number"==typeof i?i=e.generateConst(p,i):i&&i.isNode&&(i=i.build(e,p)),void 0!==d&&void 0===i?(d+=" - 1",i="0",u=">="):void 0!==i&&void 0===d&&(d="0",u="<"),void 0===u&&(u=Number(d)>Number(i)?">=":"<")),a)s=`while ( ${i} )`;else{const o={start:d,end:i,condition:u},r=o.start,n=o.end;let a;const N=()=>u.includes("<")?"+=":"-=";if(null!=c)switch(typeof c){case"function":a=e.flowStagesNode(t.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":a=l+" "+N()+" "+e.generateConst(p,c);break;case"string":a=l+" "+c;break;default:c.isNode?a=l+" "+N()+" "+c.build(e):(console.error("THREE.TSL: 'Loop( { update: ... } )' is not a function, string or number."),a="break /* invalid update */")}else c="int"===p||"uint"===p?u.includes("<")?"++":"--":N()+" 1.",a=l+" "+c;s=`for ( ${e.getVar(p,l)+" = "+r}; ${l+" "+u+" "+n}; ${a} )`}e.addFlowCode((0===r?"\n":"")+e.tab+s+" {\n\n").addFlowTab()}const n=r.build(e,"void"),s=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+n);for(let t=0,o=this.params.length-1;t<o;t++)e.addFlowCode((0===t?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),s}}export default LoopNode;export const Loop=(...e)=>nodeObject(new LoopNode(nodeArray(e,"int"))).toStack();export const Continue=()=>expression("continue").toStack();export const Break=()=>expression("break").toStack();
//# sourceMappingURL=LoopNode.js.map