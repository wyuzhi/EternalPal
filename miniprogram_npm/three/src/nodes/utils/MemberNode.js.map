{"version":3,"file":"node_modules/three/src/nodes/utils/MemberNode.js","names":["Node","MemberNode","type","constructor","node","property","super","this","isMemberNode","getNodeType","builder","getMemberType","generate","build"],"sources":["node_modules/three/src/nodes/utils/MemberNode.js"],"sourcesContent":["import Node from '../core/Node.js';\n\n/**\n * Base class for representing member access on an object-like\n * node data structures.\n *\n * @augments Node\n */\nclass MemberNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'MemberNode';\n\n\t}\n\n\t/**\n\t * Constructs an array element node.\n\t *\n\t * @param {Node} node - The array-like node.\n\t * @param {string} property - The property name.\n\t */\n\tconstructor( node, property ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The array-like node.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.node = node;\n\n\t\t/**\n\t\t * The property name.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.property = property;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isMemberNode = true;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getMemberType( builder, this.property );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst propertyName = this.node.build( builder );\n\n\t\treturn propertyName + '.' + this.property;\n\n\t}\n\n}\n\nexport default MemberNode;\n"],"mappings":"OAAOA,SAAU,kBAQjB,MAAMC,mBAAmBD,KAExB,eAAWE,GAEV,MAAO,YAER,CAQA,WAAAC,CAAaC,EAAMC,GAElBC,QAOAC,KAAKH,KAAOA,EAOZG,KAAKF,SAAWA,EAShBE,KAAKC,cAAe,CAErB,CAEA,WAAAC,CAAaC,GAEZ,OAAOH,KAAKH,KAAKO,cAAeD,EAASH,KAAKF,SAE/C,CAEA,QAAAO,CAAUF,GAIT,OAFqBH,KAAKH,KAAKS,MAAOH,GAEhB,IAAMH,KAAKF,QAElC,iBAIcJ","ignoreList":[]}