{"version":3,"file":"node_modules/three/src/nodes/utils/Oscillators.js","names":["time","oscSine","t","add","mul","Math","PI","sin","oscSquare","fract","round","oscTriangle","sub","abs","oscSawtooth"],"sources":["node_modules/three/src/nodes/utils/Oscillators.js"],"sourcesContent":["import { time } from './Timer.js';\n\n/**\n * Generates a sine wave oscillation based on a timer.\n *\n * @tsl\n * @function\n * @param {Node<float>} t - The timer to generate the oscillation with.\n * @return {Node<float>} The oscillation node.\n */\nexport const oscSine = ( t = time ) => t.add( 0.75 ).mul( Math.PI * 2 ).sin().mul( 0.5 ).add( 0.5 );\n\n/**\n * Generates a square wave oscillation based on a timer.\n *\n * @tsl\n * @function\n * @param {Node<float>} t - The timer to generate the oscillation with.\n * @return {Node<float>} The oscillation node.\n */\nexport const oscSquare = ( t = time ) => t.fract().round();\n\n/**\n * Generates a triangle wave oscillation based on a timer.\n *\n * @tsl\n * @function\n * @param {Node<float>} t - The timer to generate the oscillation with.\n * @return {Node<float>} The oscillation node.\n */\nexport const oscTriangle = ( t = time ) => t.add( 0.5 ).fract().mul( 2 ).sub( 1 ).abs();\n\n/**\n * Generates a sawtooth wave oscillation based on a timer.\n *\n * @tsl\n * @function\n * @param {Node<float>} t - The timer to generate the oscillation with.\n * @return {Node<float>} The oscillation node.\n */\nexport const oscSawtooth = ( t = time ) => t.fract();\n"],"mappings":"OAASA,SAAY,oBAUd,MAAMC,QAAU,CAAEC,EAAIF,OAAUE,EAAEC,IAAK,KAAOC,IAAe,EAAVC,KAAKC,IAASC,MAAMH,IAAK,IAAMD,IAAK,WAUvF,MAAMK,UAAY,CAAEN,EAAIF,OAAUE,EAAEO,QAAQC,eAU5C,MAAMC,YAAc,CAAET,EAAIF,OAAUE,EAAEC,IAAK,IAAMM,QAAQL,IAAK,GAAIQ,IAAK,GAAIC,aAU3E,MAAMC,YAAc,CAAEZ,EAAIF,OAAUE,EAAEO","ignoreList":[]}