import Node from"../core/Node.js";import{float,addMethodChaining,nodeProxy}from"../tsl/TSLCore.js";class RemapNode extends Node{static get type(){return"RemapNode"}constructor(e,o,t,d=float(0),a=float(1)){super(),this.node=e,this.inLowNode=o,this.inHighNode=t,this.outLowNode=d,this.outHighNode=a,this.doClamp=!0}setup(){const{node:e,inLowNode:o,inHighNode:t,outLowNode:d,outHighNode:a,doClamp:r}=this;let n=e.sub(o).div(t.sub(o));return!0===r&&(n=n.clamp()),n.mul(a.sub(d)).add(d)}}export default RemapNode;export const remap=nodeProxy(RemapNode,null,null,{doClamp:!1}).setParameterLength(3,5);export const remapClamp=nodeProxy(RemapNode).setParameterLength(3,5);addMethodChaining("remap",remap),addMethodChaining("remapClamp",remapClamp);
//# sourceMappingURL=RemapNode.js.map