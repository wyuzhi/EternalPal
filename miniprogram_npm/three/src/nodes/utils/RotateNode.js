import TempNode from"../core/TempNode.js";import{nodeProxy,vec4,mat2,mat4}from"../tsl/TSLBase.js";import{cos,sin}from"../math/MathNode.js";class RotateNode extends TempNode{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:o}=this;if("vec2"===this.getNodeType(e)){const e=t.cos(),s=t.sin();return mat2(e,s,s.negate(),e).mul(o)}{const e=t,s=mat4(vec4(1,0,0,0),vec4(0,cos(e.x),sin(e.x).negate(),0),vec4(0,sin(e.x),cos(e.x),0),vec4(0,0,0,1)),c=mat4(vec4(cos(e.y),0,sin(e.y),0),vec4(0,1,0,0),vec4(sin(e.y).negate(),0,cos(e.y),0),vec4(0,0,0,1)),n=mat4(vec4(cos(e.z),sin(e.z).negate(),0,0),vec4(sin(e.z),cos(e.z),0,0),vec4(0,0,1,0),vec4(0,0,0,1));return s.mul(c).mul(n).mul(vec4(o,1)).xyz}}}export default RotateNode;export const rotate=nodeProxy(RotateNode).setParameterLength(2);
//# sourceMappingURL=RotateNode.js.map