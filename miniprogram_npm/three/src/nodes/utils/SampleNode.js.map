{"version":3,"file":"node_modules/three/src/nodes/utils/SampleNode.js","names":["Node","uv","nodeObject","SampleNode","type","constructor","callback","super","this","isSampleNode","setup","sample"],"sources":["node_modules/three/src/nodes/utils/SampleNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport { uv } from '../accessors/UV.js';\nimport { nodeObject } from '../tsl/TSLCore.js';\n\n/**\n * Class representing a node that samples a value using a provided callback function.\n *\n * @extends Node\n */\nclass SampleNode extends Node {\n\n\t/**\n\t * Returns the type of the node.\n\t *\n\t * @type {string}\n\t * @readonly\n\t * @static\n\t */\n\tstatic get type() {\n\n\t\treturn 'SampleNode';\n\n\t}\n\n\t/**\n\t * Creates an instance of SampleNode.\n\t *\n\t * @param {Function} callback - The function to be called when sampling. Should accept a UV node and return a value.\n\t */\n\tconstructor( callback ) {\n\n\t\tsuper();\n\n\t\tthis.callback = callback;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isSampleNode = true;\n\n\t}\n\n\t/**\n\t * Sets up the node by sampling with the default UV accessor.\n\t *\n\t * @returns {Node} The result of the callback function when called with the UV node.\n\t */\n\tsetup() {\n\n\t\treturn this.sample( uv() );\n\n\t}\n\n\t/**\n\t * Calls the callback function with the provided UV node.\n\t *\n\t * @param {Node<vec2>} uv - The UV node or value to be passed to the callback.\n\t * @returns {Node} The result of the callback function.\n\t */\n\tsample( uv ) {\n\n\t\treturn this.callback( uv );\n\n\t}\n\n}\n\nexport default SampleNode;\n\n/**\n * Helper function to create a SampleNode wrapped as a node object.\n *\n * @function\n * @param {Function} callback - The function to be called when sampling. Should accept a UV node and return a value.\n * @returns {SampleNode} The created SampleNode instance wrapped as a node object.\n */\nexport const sample = ( callback ) => nodeObject( new SampleNode( callback ) );\n"],"mappings":"OAAOA,SAAU,yBACRC,OAAU,4BACVC,eAAkB,oBAO3B,MAAMC,mBAAmBH,KASxB,eAAWI,GAEV,MAAO,YAER,CAOA,WAAAC,CAAaC,GAEZC,QAEAC,KAAKF,SAAWA,EAShBE,KAAKC,cAAe,CAErB,CAOA,KAAAC,GAEC,OAAOF,KAAKG,OAAQV,KAErB,CAQA,MAAAU,CAAQV,GAEP,OAAOO,KAAKF,SAAUL,EAEvB,iBAIcE,kBASR,MAAMQ,OAAWL,GAAcJ,WAAY,IAAIC,WAAYG","ignoreList":[]}