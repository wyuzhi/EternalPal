import Node from"../core/Node.js";import{vectorComponents}from"../core/constants.js";const _stringVectorComponents=vectorComponents.join("");class SplitNode extends Node{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(vectorComponents.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const o=this.node,n=e.getTypeLength(o.getNodeType(e));let s=null;if(n>1){let i=null;this.getVectorLength()>=n&&(i=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const p=o.build(e,i);s=this.components.length===n&&this.components===_stringVectorComponents.slice(0,this.components.length)?e.format(p,i,t):e.format(`${p}.${this.components}`,this.getNodeType(e),t)}else s=o.build(e,t);return s}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}export default SplitNode;
//# sourceMappingURL=SplitNode.js.map