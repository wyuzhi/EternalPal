import{nodeProxy}from"../tsl/TSLBase.js";import ArrayElementNode from"./ArrayElementNode.js";class StorageArrayElementNode extends ArrayElementNode{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}getMemberType(e,t){const r=this.storageBufferNode.structTypeNode;return r?r.getMemberType(e,t):"void"}setup(e){return!1===e.isAvailable("storageBuffer")&&!0===this.node.isPBO&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let r;const o=e.context.assign;if(r=!1===e.isAvailable("storageBuffer")?!0!==this.node.isPBO||!0===o||!this.node.value.isInstancedBufferAttribute&&"compute"===e.shaderStage?this.node.build(e):e.generatePBO(this):super.generate(e),!0!==o){const o=this.getNodeType(e);r=e.format(r,o,t)}return r}}export default StorageArrayElementNode;export const storageElement=nodeProxy(StorageArrayElementNode).setParameterLength(2);
//# sourceMappingURL=StorageArrayElementNode.js.map