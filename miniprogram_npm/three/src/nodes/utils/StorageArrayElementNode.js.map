{"version":3,"file":"node_modules/three/src/nodes/utils/StorageArrayElementNode.js","names":["nodeProxy","ArrayElementNode","StorageArrayElementNode","type","constructor","storageBufferNode","indexNode","super","this","isStorageArrayElementNode","value","node","getMemberType","builder","name","structTypeNode","setup","isAvailable","isPBO","setupPBO","generate","output","snippet","isAssignContext","context","assign","isInstancedBufferAttribute","shaderStage","build","generatePBO","getNodeType","format","storageElement","setParameterLength"],"sources":["node_modules/three/src/nodes/utils/StorageArrayElementNode.js"],"sourcesContent":["import { nodeProxy } from '../tsl/TSLBase.js';\nimport ArrayElementNode from './ArrayElementNode.js';\n\n/**\n * This class enables element access on instances of {@link StorageBufferNode}.\n * In most cases, it is indirectly used when accessing elements with the\n * {@link StorageBufferNode#element} method.\n *\n * ```js\n * const position = positionStorage.element( instanceIndex );\n * ```\n *\n * @augments ArrayElementNode\n */\nclass StorageArrayElementNode extends ArrayElementNode {\n\n\tstatic get type() {\n\n\t\treturn 'StorageArrayElementNode';\n\n\t}\n\n\t/**\n\t * Constructs storage buffer element node.\n\t *\n\t * @param {StorageBufferNode} storageBufferNode - The storage buffer node.\n\t * @param {Node} indexNode - The index node that defines the element access.\n\t */\n\tconstructor( storageBufferNode, indexNode ) {\n\n\t\tsuper( storageBufferNode, indexNode );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isStorageArrayElementNode = true;\n\n\t}\n\n\t/**\n\t * The storage buffer node.\n\t *\n\t * @param {Node} value\n\t * @type {StorageBufferNode}\n\t */\n\tset storageBufferNode( value ) {\n\n\t\tthis.node = value;\n\n\t}\n\n\tget storageBufferNode() {\n\n\t\treturn this.node;\n\n\t}\n\n\tgetMemberType( builder, name ) {\n\n\t\tconst structTypeNode = this.storageBufferNode.structTypeNode;\n\n\t\tif ( structTypeNode ) {\n\n\t\t\treturn structTypeNode.getMemberType( builder, name );\n\n\t\t}\n\n\t\treturn 'void';\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tif ( builder.isAvailable( 'storageBuffer' ) === false ) {\n\n\t\t\tif ( this.node.isPBO === true ) {\n\n\t\t\t\tbuilder.setupPBO( this.node );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn super.setup( builder );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tlet snippet;\n\n\t\tconst isAssignContext = builder.context.assign;\n\n\t\t//\n\n\t\tif ( builder.isAvailable( 'storageBuffer' ) === false ) {\n\n\t\t\tif ( this.node.isPBO === true && isAssignContext !== true && ( this.node.value.isInstancedBufferAttribute || builder.shaderStage !== 'compute' ) ) {\n\n\t\t\t\tsnippet = builder.generatePBO( this );\n\n\t\t\t} else {\n\n\t\t\t\tsnippet = this.node.build( builder );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tsnippet = super.generate( builder );\n\n\t\t}\n\n\t\tif ( isAssignContext !== true ) {\n\n\t\t\tconst type = this.getNodeType( builder );\n\n\t\t\tsnippet = builder.format( snippet, type, output );\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n}\n\nexport default StorageArrayElementNode;\n\n/**\n * TSL function for creating a storage element node.\n *\n * @tsl\n * @function\n * @param {StorageBufferNode} storageBufferNode - The storage buffer node.\n * @param {Node} indexNode - The index node that defines the element access.\n * @returns {StorageArrayElementNode}\n */\nexport const storageElement = /*@__PURE__*/ nodeProxy( StorageArrayElementNode ).setParameterLength( 2 );\n"],"mappings":"OAASA,cAAiB,2BACnBC,qBAAsB,wBAa7B,MAAMC,gCAAgCD,iBAErC,eAAWE,GAEV,MAAO,yBAER,CAQA,WAAAC,CAAaC,EAAmBC,GAE/BC,MAAOF,EAAmBC,GAS1BE,KAAKC,2BAA4B,CAElC,CAQA,qBAAIJ,CAAmBK,GAEtBF,KAAKG,KAAOD,CAEb,CAEA,qBAAIL,GAEH,OAAOG,KAAKG,IAEb,CAEA,aAAAC,CAAeC,EAASC,GAEvB,MAAMC,EAAiBP,KAAKH,kBAAkBU,eAE9C,OAAKA,EAEGA,EAAeH,cAAeC,EAASC,GAIxC,MAER,CAEA,KAAAE,CAAOH,GAYN,OAVgD,IAA3CA,EAAQI,YAAa,mBAEA,IAApBT,KAAKG,KAAKO,OAEdL,EAAQM,SAAUX,KAAKG,MAMlBJ,MAAMS,MAAOH,EAErB,CAEA,QAAAO,CAAUP,EAASQ,GAElB,IAAIC,EAEJ,MAAMC,EAAkBV,EAAQW,QAAQC,OAsBxC,GAVEH,GAR8C,IAA3CT,EAAQI,YAAa,kBAEA,IAApBT,KAAKG,KAAKO,QAAsC,IAApBK,IAA8Bf,KAAKG,KAAKD,MAAMgB,4BAAsD,YAAxBb,EAAQc,YAM1GnB,KAAKG,KAAKiB,MAAOf,GAJjBA,EAAQgB,YAAarB,MAUtBD,MAAMa,SAAUP,IAIF,IAApBU,EAA2B,CAE/B,MAAMpB,EAAOK,KAAKsB,YAAajB,GAE/BS,EAAUT,EAAQkB,OAAQT,EAASnB,EAAMkB,EAE1C,CAEA,OAAOC,CAER,iBAIcpB,+BAWR,MAAM8B,eAA+BhC,UAAWE,yBAA0B+B,mBAAoB","ignoreList":[]}