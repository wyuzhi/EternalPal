{"version":3,"file":"node_modules/three/src/nodes/utils/ViewportUtils.js","names":["Fn","screenUV","viewportDepthTexture","linearDepth","viewportSafeUV","uv","depth","sub","lessThan","select"],"sources":["node_modules/three/src/nodes/utils/ViewportUtils.js"],"sourcesContent":["import { Fn } from '../tsl/TSLBase.js';\nimport { screenUV } from '../display/ScreenNode.js';\nimport { viewportDepthTexture } from '../display/ViewportDepthTextureNode.js';\nimport { linearDepth } from '../display/ViewportDepthNode.js';\n\n/**\n * A special version of a screen uv function that involves a depth comparison\n * when computing the final uvs. The function mitigates visual errors when\n * using viewport texture nodes for refraction purposes. Without this function\n * objects in front of a refractive surface might appear on the refractive surface\n * which is incorrect.\n *\n * @tsl\n * @function\n * @param {?Node<vec2>} uv - Optional uv coordinates. By default `screenUV` is used.\n * @return {Node<vec2>} The update uv coordinates.\n */\nexport const viewportSafeUV = /*@__PURE__*/ Fn( ( [ uv = null ] ) => {\n\n\tconst depth = linearDepth();\n\tconst depthDiff = linearDepth( viewportDepthTexture( uv ) ).sub( depth );\n\tconst finalUV = depthDiff.lessThan( 0 ).select( screenUV, uv );\n\n\treturn finalUV;\n\n} );\n"],"mappings":"OAASA,OAAU,2BACVC,aAAgB,kCAChBC,yBAA4B,gDAC5BC,gBAAmB,yCAcrB,MAAMC,eAA+BJ,IAAI,EAAIK,EAAK,SAExD,MAAMC,EAAQH,cAId,OAHkBA,YAAaD,qBAAsBG,IAAOE,IAAKD,GACvCE,SAAU,GAAIC,OAAQR,SAAUI,EAE5C","ignoreList":[]}