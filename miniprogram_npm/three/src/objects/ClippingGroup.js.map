{"version":3,"file":"node_modules/three/src/objects/ClippingGroup.js","names":["Group","ClippingGroup","constructor","super","this","isClippingGroup","clippingPlanes","enabled","clipIntersection","clipShadows"],"sources":["node_modules/three/src/objects/ClippingGroup.js"],"sourcesContent":["import { Group } from './Group.js';\n\n/**\n * In earlier three.js versions, clipping was defined globally\n * on the renderer or on material level. This special version of\n * `THREE.Group` allows to encode the clipping state into the scene\n * graph. Meaning if you create an instance of this group, all\n * descendant 3D objects will be affected by the respective clipping\n * planes.\n *\n * Note: `ClippingGroup` can only be used with `WebGPURenderer`.\n *\n * @augments Group\n */\nclass ClippingGroup extends Group {\n\n\t/**\n\t * Constructs a new clipping group.\n\t */\n\tconstructor() {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isClippingGroup = true;\n\n\t\t/**\n\t\t * An array with clipping planes.\n\t\t *\n\t\t * @type {Array<Plane>}\n\t\t */\n\t\tthis.clippingPlanes = [];\n\n\t\t/**\n\t\t * Whether clipping should be enabled or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enabled = true;\n\n\t\t/**\n\t\t * Whether the intersection of the clipping planes is used to clip objects, rather than their union.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.clipIntersection = false;\n\n\t\t/**\n\t\t * Whether shadows should be clipped or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.clipShadows = false;\n\n\t}\n\n}\n\nexport { ClippingGroup };\n"],"mappings":"OAASA,UAAa,aActB,MAAMC,sBAAsBD,MAK3B,WAAAE,GAECC,QASAC,KAAKC,iBAAkB,EAOvBD,KAAKE,eAAiB,GAQtBF,KAAKG,SAAU,EAQfH,KAAKI,kBAAmB,EAQxBJ,KAAKK,aAAc,CAEpB,SAIQR","ignoreList":[]}