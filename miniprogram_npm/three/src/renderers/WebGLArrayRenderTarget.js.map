{"version":3,"file":"node_modules/three/src/renderers/WebGLArrayRenderTarget.js","names":["WebGLRenderTarget","DataArrayTexture","WebGLArrayRenderTarget","constructor","width","height","depth","options","super","this","isWebGLArrayRenderTarget","texture","_setTextureOptions","isRenderTargetTexture"],"sources":["node_modules/three/src/renderers/WebGLArrayRenderTarget.js"],"sourcesContent":["import { WebGLRenderTarget } from './WebGLRenderTarget.js';\nimport { DataArrayTexture } from '../textures/DataArrayTexture.js';\n\n/**\n * An array render target used in context of {@link WebGLRenderer}.\n *\n * @augments WebGLRenderTarget\n */\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\t/**\n\t * Constructs a new array render target.\n\t *\n\t * @param {number} [width=1] - The width of the render target.\n\t * @param {number} [height=1] - The height of the render target.\n\t * @param {number} [depth=1] - The height of the render target.\n\t * @param {RenderTarget~Options} [options] - The configuration object.\n\t */\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\t/**\n\t\t * Overwritten with a different texture type.\n\t\t *\n\t\t * @type {DataArrayTexture}\n\t\t */\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\t\tthis._setTextureOptions( options );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nexport { WebGLArrayRenderTarget };\n"],"mappings":"OAASA,sBAAyB,gCACzBC,qBAAwB,kCAOjC,MAAMC,+BAA+BF,kBAUpC,WAAAG,CAAaC,EAAQ,EAAGC,EAAS,EAAGC,EAAQ,EAAGC,EAAU,CAAC,GAEzDC,MAAOJ,EAAOC,EAAQE,GAStBE,KAAKC,0BAA2B,EAEhCD,KAAKH,MAAQA,EAObG,KAAKE,QAAU,IAAIV,iBAAkB,KAAMG,EAAOC,EAAQC,GAC1DG,KAAKG,mBAAoBL,GAEzBE,KAAKE,QAAQE,uBAAwB,CAEtC,SAIQX","ignoreList":[]}