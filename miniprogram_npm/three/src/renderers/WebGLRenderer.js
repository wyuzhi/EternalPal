import{REVISION,BackSide,FrontSide,DoubleSide,HalfFloatType,UnsignedByteType,NoToneMapping,LinearMipmapLinearFilter,SRGBColorSpace,LinearSRGBColorSpace,RGBAIntegerFormat,RGIntegerFormat,RedIntegerFormat,UnsignedIntType,UnsignedShortType,UnsignedInt248Type,UnsignedShort4444Type,UnsignedShort5551Type,WebGLCoordinateSystem}from"../constants.js";import{Color}from"../math/Color.js";import{Frustum}from"../math/Frustum.js";import{Matrix4}from"../math/Matrix4.js";import{Vector3}from"../math/Vector3.js";import{Vector4}from"../math/Vector4.js";import{WebGLAnimation}from"./webgl/WebGLAnimation.js";import{WebGLAttributes}from"./webgl/WebGLAttributes.js";import{WebGLBackground}from"./webgl/WebGLBackground.js";import{WebGLBindingStates}from"./webgl/WebGLBindingStates.js";import{WebGLBufferRenderer}from"./webgl/WebGLBufferRenderer.js";import{WebGLCapabilities}from"./webgl/WebGLCapabilities.js";import{WebGLClipping}from"./webgl/WebGLClipping.js";import{WebGLCubeMaps}from"./webgl/WebGLCubeMaps.js";import{WebGLCubeUVMaps}from"./webgl/WebGLCubeUVMaps.js";import{WebGLExtensions}from"./webgl/WebGLExtensions.js";import{WebGLGeometries}from"./webgl/WebGLGeometries.js";import{WebGLIndexedBufferRenderer}from"./webgl/WebGLIndexedBufferRenderer.js";import{WebGLInfo}from"./webgl/WebGLInfo.js";import{WebGLMorphtargets}from"./webgl/WebGLMorphtargets.js";import{WebGLObjects}from"./webgl/WebGLObjects.js";import{WebGLPrograms}from"./webgl/WebGLPrograms.js";import{WebGLProperties}from"./webgl/WebGLProperties.js";import{WebGLRenderLists}from"./webgl/WebGLRenderLists.js";import{WebGLRenderStates}from"./webgl/WebGLRenderStates.js";import{WebGLRenderTarget}from"./WebGLRenderTarget.js";import{WebGLShadowMap}from"./webgl/WebGLShadowMap.js";import{WebGLState}from"./webgl/WebGLState.js";import{WebGLTextures}from"./webgl/WebGLTextures.js";import{WebGLUniforms}from"./webgl/WebGLUniforms.js";import{WebGLUtils}from"./webgl/WebGLUtils.js";import{WebXRManager}from"./webxr/WebXRManager.js";import{WebGLMaterials}from"./webgl/WebGLMaterials.js";import{WebGLUniformsGroups}from"./webgl/WebGLUniformsGroups.js";import{createCanvasElement,probeAsync,warnOnce}from"../utils.js";import{ColorManagement}from"../math/ColorManagement.js";class WebGLRenderer{constructor(e={}){const{canvas:t=createCanvasElement(),context:r=null,depth:n=!0,stencil:i=!1,alpha:s=!1,antialias:o=!1,premultipliedAlpha:a=!0,preserveDrawingBuffer:l=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:d=!1,reversedDepthBuffer:p=!1}=e;let c;if(this.isWebGLRenderer=!0,null!==r){if("undefined"!=typeof WebGLRenderingContext&&r instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");c=r.getContextAttributes().alpha}else c=s;const f=new Uint32Array(4),g=new Int32Array(4);let h=null,m=null;const b=[],T=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=NoToneMapping,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const x=this;let M=!1;this._outputColorSpace=SRGBColorSpace;let R=0,L=0,w=null,S=-1,_=null;const E=new Vector4,C=new Vector4;let A=null;const v=new Color(0);let G=0,W=t.width,F=t.height,y=1,D=null,U=null;const B=new Vector4(0,0,W,F),P=new Vector4(0,0,W,F);let I=!1;const O=new Frustum;let N=!1,j=!1;const V=new Matrix4,H=new Vector3,K=new Vector4,X={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let k=!1;function z(){return null===w?y:1}let q,Y,$,J,Q,Z,ee,te,re,ne,ie,se,oe,ae,le,ue,de,pe,ce,fe,ge,he,me,be,Te=r;function xe(e,r){return t.getContext(e,r)}try{const e={alpha:!0,depth:n,stencil:i,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:d};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${REVISION}`),t.addEventListener("webglcontextlost",Le,!1),t.addEventListener("webglcontextrestored",we,!1),t.addEventListener("webglcontextcreationerror",Se,!1),null===Te){const t="webgl2";if(Te=xe(t,e),null===Te)throw xe(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function Me(){q=new WebGLExtensions(Te),q.init(),he=new WebGLUtils(Te,q),Y=new WebGLCapabilities(Te,q,e,he),$=new WebGLState(Te,q),Y.reversedDepthBuffer&&p&&$.buffers.depth.setReversed(!0),J=new WebGLInfo(Te),Q=new WebGLProperties,Z=new WebGLTextures(Te,q,$,Q,Y,he,J),ee=new WebGLCubeMaps(x),te=new WebGLCubeUVMaps(x),re=new WebGLAttributes(Te),me=new WebGLBindingStates(Te,re),ne=new WebGLGeometries(Te,re,J,me),ie=new WebGLObjects(Te,ne,re,J),ce=new WebGLMorphtargets(Te,Y,Z),ue=new WebGLClipping(Q),se=new WebGLPrograms(x,ee,te,q,Y,me,ue),oe=new WebGLMaterials(x,Q),ae=new WebGLRenderLists,le=new WebGLRenderStates(q),pe=new WebGLBackground(x,ee,te,$,ie,c,a),de=new WebGLShadowMap(x,ie,Y),be=new WebGLUniformsGroups(Te,J,Y,$),fe=new WebGLBufferRenderer(Te,q,J),ge=new WebGLIndexedBufferRenderer(Te,q,J),J.programs=se.programs,x.capabilities=Y,x.extensions=q,x.properties=Q,x.renderLists=ae,x.shadowMap=de,x.state=$,x.info=J}Me();const Re=new WebXRManager(x,Te);function Le(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),M=!0}function we(){console.log("THREE.WebGLRenderer: Context Restored."),M=!1;const e=J.autoReset,t=de.enabled,r=de.autoUpdate,n=de.needsUpdate,i=de.type;Me(),J.autoReset=e,de.enabled=t,de.autoUpdate=r,de.needsUpdate=n,de.type=i}function Se(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function _e(e){const t=e.target;t.removeEventListener("dispose",_e),function(e){(function(e){const t=Q.get(e).programs;void 0!==t&&(t.forEach((function(e){se.releaseProgram(e)})),e.isShaderMaterial&&se.releaseShaderCache(e))})(e),Q.remove(e)}(t)}function Ee(e,t,r){!0===e.transparent&&e.side===DoubleSide&&!1===e.forceSinglePass?(e.side=BackSide,e.needsUpdate=!0,Be(e,t,r),e.side=FrontSide,e.needsUpdate=!0,Be(e,t,r),e.side=DoubleSide):Be(e,t,r)}this.xr=Re,this.getContext=function(){return Te},this.getContextAttributes=function(){return Te.getContextAttributes()},this.forceContextLoss=function(){const e=q.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=q.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return y},this.setPixelRatio=function(e){void 0!==e&&(y=e,this.setSize(W,F,!1))},this.getSize=function(e){return e.set(W,F)},this.setSize=function(e,r,n=!0){Re.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(W=e,F=r,t.width=Math.floor(e*y),t.height=Math.floor(r*y),!0===n&&(t.style.width=e+"px",t.style.height=r+"px"),this.setViewport(0,0,e,r))},this.getDrawingBufferSize=function(e){return e.set(W*y,F*y).floor()},this.setDrawingBufferSize=function(e,r,n){W=e,F=r,y=n,t.width=Math.floor(e*n),t.height=Math.floor(r*n),this.setViewport(0,0,e,r)},this.getCurrentViewport=function(e){return e.copy(E)},this.getViewport=function(e){return e.copy(B)},this.setViewport=function(e,t,r,n){e.isVector4?B.set(e.x,e.y,e.z,e.w):B.set(e,t,r,n),$.viewport(E.copy(B).multiplyScalar(y).round())},this.getScissor=function(e){return e.copy(P)},this.setScissor=function(e,t,r,n){e.isVector4?P.set(e.x,e.y,e.z,e.w):P.set(e,t,r,n),$.scissor(C.copy(P).multiplyScalar(y).round())},this.getScissorTest=function(){return I},this.setScissorTest=function(e){$.setScissorTest(I=e)},this.setOpaqueSort=function(e){D=e},this.setTransparentSort=function(e){U=e},this.getClearColor=function(e){return e.copy(pe.getClearColor())},this.setClearColor=function(){pe.setClearColor(...arguments)},this.getClearAlpha=function(){return pe.getClearAlpha()},this.setClearAlpha=function(){pe.setClearAlpha(...arguments)},this.clear=function(e=!0,t=!0,r=!0){let n=0;if(e){let e=!1;if(null!==w){const t=w.texture.format;e=t===RGBAIntegerFormat||t===RGIntegerFormat||t===RedIntegerFormat}if(e){const e=w.texture.type,t=e===UnsignedByteType||e===UnsignedIntType||e===UnsignedShortType||e===UnsignedInt248Type||e===UnsignedShort4444Type||e===UnsignedShort5551Type,r=pe.getClearColor(),n=pe.getClearAlpha(),i=r.r,s=r.g,o=r.b;t?(f[0]=i,f[1]=s,f[2]=o,f[3]=n,Te.clearBufferuiv(Te.COLOR,0,f)):(g[0]=i,g[1]=s,g[2]=o,g[3]=n,Te.clearBufferiv(Te.COLOR,0,g))}else n|=Te.COLOR_BUFFER_BIT}t&&(n|=Te.DEPTH_BUFFER_BIT),r&&(n|=Te.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),Te.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Le,!1),t.removeEventListener("webglcontextrestored",we,!1),t.removeEventListener("webglcontextcreationerror",Se,!1),pe.dispose(),ae.dispose(),le.dispose(),Q.dispose(),ee.dispose(),te.dispose(),ie.dispose(),me.dispose(),be.dispose(),se.dispose(),Re.dispose(),Re.removeEventListener("sessionstart",Ae),Re.removeEventListener("sessionend",ve),Ge.stop()},this.renderBufferDirect=function(e,t,r,n,i,s){null===t&&(t=X);const o=i.isMesh&&i.matrixWorld.determinant()<0,a=function(e,t,r,n,i){!0!==t.isScene&&(t=X);Z.resetTextureUnits();const s=t.fog,o=n.isMeshStandardMaterial?t.environment:null,a=null===w?x.outputColorSpace:!0===w.isXRRenderTarget?w.texture.colorSpace:LinearSRGBColorSpace,l=(n.isMeshStandardMaterial?te:ee).get(n.envMap||o),u=!0===n.vertexColors&&!!r.attributes.color&&4===r.attributes.color.itemSize,d=!!r.attributes.tangent&&(!!n.normalMap||n.anisotropy>0),p=!!r.morphAttributes.position,c=!!r.morphAttributes.normal,f=!!r.morphAttributes.color;let g=NoToneMapping;n.toneMapped&&(null!==w&&!0!==w.isXRRenderTarget||(g=x.toneMapping));const h=r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color,b=void 0!==h?h.length:0,T=Q.get(n),M=m.state.lights;if(!0===N&&(!0===j||e!==_)){const t=e===_&&n.id===S;ue.setState(n,e,t)}let R=!1;n.version===T.__version?T.needsLights&&T.lightsStateVersion!==M.state.version||T.outputColorSpace!==a||i.isBatchedMesh&&!1===T.batching?R=!0:i.isBatchedMesh||!0!==T.batching?i.isBatchedMesh&&!0===T.batchingColor&&null===i.colorTexture||i.isBatchedMesh&&!1===T.batchingColor&&null!==i.colorTexture||i.isInstancedMesh&&!1===T.instancing?R=!0:i.isInstancedMesh||!0!==T.instancing?i.isSkinnedMesh&&!1===T.skinning?R=!0:i.isSkinnedMesh||!0!==T.skinning?i.isInstancedMesh&&!0===T.instancingColor&&null===i.instanceColor||i.isInstancedMesh&&!1===T.instancingColor&&null!==i.instanceColor||i.isInstancedMesh&&!0===T.instancingMorph&&null===i.morphTexture||i.isInstancedMesh&&!1===T.instancingMorph&&null!==i.morphTexture||T.envMap!==l||!0===n.fog&&T.fog!==s?R=!0:void 0===T.numClippingPlanes||T.numClippingPlanes===ue.numPlanes&&T.numIntersection===ue.numIntersection?(T.vertexAlphas!==u||T.vertexTangents!==d||T.morphTargets!==p||T.morphNormals!==c||T.morphColors!==f||T.toneMapping!==g||T.morphTargetsCount!==b)&&(R=!0):R=!0:R=!0:R=!0:R=!0:(R=!0,T.__version=n.version);let L=T.currentProgram;!0===R&&(L=Be(n,t,i));let E=!1,C=!1,A=!1;const v=L.getUniforms(),G=T.uniforms;$.useProgram(L.program)&&(E=!0,C=!0,A=!0);n.id!==S&&(S=n.id,C=!0);if(E||_!==e){$.buffers.depth.getReversed()&&!0!==e.reversedDepth&&(e._reversedDepth=!0,e.updateProjectionMatrix()),v.setValue(Te,"projectionMatrix",e.projectionMatrix),v.setValue(Te,"viewMatrix",e.matrixWorldInverse);const t=v.map.cameraPosition;void 0!==t&&t.setValue(Te,H.setFromMatrixPosition(e.matrixWorld)),Y.logarithmicDepthBuffer&&v.setValue(Te,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&v.setValue(Te,"isOrthographic",!0===e.isOrthographicCamera),_!==e&&(_=e,C=!0,A=!0)}if(i.isSkinnedMesh){v.setOptional(Te,i,"bindMatrix"),v.setOptional(Te,i,"bindMatrixInverse");const e=i.skeleton;e&&(null===e.boneTexture&&e.computeBoneTexture(),v.setValue(Te,"boneTexture",e.boneTexture,Z))}i.isBatchedMesh&&(v.setOptional(Te,i,"batchingTexture"),v.setValue(Te,"batchingTexture",i._matricesTexture,Z),v.setOptional(Te,i,"batchingIdTexture"),v.setValue(Te,"batchingIdTexture",i._indirectTexture,Z),v.setOptional(Te,i,"batchingColorTexture"),null!==i._colorsTexture&&v.setValue(Te,"batchingColorTexture",i._colorsTexture,Z));const W=r.morphAttributes;void 0===W.position&&void 0===W.normal&&void 0===W.color||ce.update(i,r,L);(C||T.receiveShadow!==i.receiveShadow)&&(T.receiveShadow=i.receiveShadow,v.setValue(Te,"receiveShadow",i.receiveShadow));n.isMeshGouraudMaterial&&null!==n.envMap&&(G.envMap.value=l,G.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1);n.isMeshStandardMaterial&&null===n.envMap&&null!==t.environment&&(G.envMapIntensity.value=t.environmentIntensity);C&&(v.setValue(Te,"toneMappingExposure",x.toneMappingExposure),T.needsLights&&(U=A,(D=G).ambientLightColor.needsUpdate=U,D.lightProbe.needsUpdate=U,D.directionalLights.needsUpdate=U,D.directionalLightShadows.needsUpdate=U,D.pointLights.needsUpdate=U,D.pointLightShadows.needsUpdate=U,D.spotLights.needsUpdate=U,D.spotLightShadows.needsUpdate=U,D.rectAreaLights.needsUpdate=U,D.hemisphereLights.needsUpdate=U),s&&!0===n.fog&&oe.refreshFogUniforms(G,s),oe.refreshMaterialUniforms(G,n,y,F,m.state.transmissionRenderTarget[e.id]),WebGLUniforms.upload(Te,Pe(T),G,Z));var D,U;n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(WebGLUniforms.upload(Te,Pe(T),G,Z),n.uniformsNeedUpdate=!1);n.isSpriteMaterial&&v.setValue(Te,"center",i.center);if(v.setValue(Te,"modelViewMatrix",i.modelViewMatrix),v.setValue(Te,"normalMatrix",i.normalMatrix),v.setValue(Te,"modelMatrix",i.matrixWorld),n.isShaderMaterial||n.isRawShaderMaterial){const e=n.uniformsGroups;for(let t=0,r=e.length;t<r;t++){const r=e[t];be.update(r,L),be.bind(r,L)}}return L}(e,t,r,n,i);$.setMaterial(n,o);let l=r.index,u=1;if(!0===n.wireframe){if(l=ne.getWireframeAttribute(r),void 0===l)return;u=2}const d=r.drawRange,p=r.attributes.position;let c=d.start*u,f=(d.start+d.count)*u;null!==s&&(c=Math.max(c,s.start*u),f=Math.min(f,(s.start+s.count)*u)),null!==l?(c=Math.max(c,0),f=Math.min(f,l.count)):null!=p&&(c=Math.max(c,0),f=Math.min(f,p.count));const g=f-c;if(g<0||g===1/0)return;let h;me.setup(i,n,a,r,l);let b=fe;if(null!==l&&(h=re.get(l),b=ge,b.setIndex(h)),i.isMesh)!0===n.wireframe?($.setLineWidth(n.wireframeLinewidth*z()),b.setMode(Te.LINES)):b.setMode(Te.TRIANGLES);else if(i.isLine){let e=n.linewidth;void 0===e&&(e=1),$.setLineWidth(e*z()),i.isLineSegments?b.setMode(Te.LINES):i.isLineLoop?b.setMode(Te.LINE_LOOP):b.setMode(Te.LINE_STRIP)}else i.isPoints?b.setMode(Te.POINTS):i.isSprite&&b.setMode(Te.TRIANGLES);if(i.isBatchedMesh)if(null!==i._multiDrawInstances)warnOnce("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),b.renderMultiDrawInstances(i._multiDrawStarts,i._multiDrawCounts,i._multiDrawCount,i._multiDrawInstances);else if(q.get("WEBGL_multi_draw"))b.renderMultiDraw(i._multiDrawStarts,i._multiDrawCounts,i._multiDrawCount);else{const e=i._multiDrawStarts,t=i._multiDrawCounts,r=i._multiDrawCount,s=l?re.get(l).bytesPerElement:1,o=Q.get(n).currentProgram.getUniforms();for(let n=0;n<r;n++)o.setValue(Te,"_gl_DrawID",n),b.render(e[n]/s,t[n])}else if(i.isInstancedMesh)b.renderInstances(c,g,i.count);else if(r.isInstancedBufferGeometry){const e=void 0!==r._maxInstanceCount?r._maxInstanceCount:1/0,t=Math.min(r.instanceCount,e);b.renderInstances(c,g,t)}else b.render(c,g)},this.compile=function(e,t,r=null){null===r&&(r=e),m=le.get(r),m.init(t),T.push(m),r.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(m.pushLight(e),e.castShadow&&m.pushShadow(e))})),e!==r&&e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(m.pushLight(e),e.castShadow&&m.pushShadow(e))})),m.setupLights();const n=new Set;return e.traverse((function(e){if(!(e.isMesh||e.isPoints||e.isLine||e.isSprite))return;const t=e.material;if(t)if(Array.isArray(t))for(let i=0;i<t.length;i++){const s=t[i];Ee(s,r,e),n.add(s)}else Ee(t,r,e),n.add(t)})),m=T.pop(),n},this.compileAsync=function(e,t,r=null){const n=this.compile(e,t,r);return new Promise((t=>{function r(){n.forEach((function(e){Q.get(e).currentProgram.isReady()&&n.delete(e)})),0!==n.size?setTimeout(r,10):t(e)}null!==q.get("KHR_parallel_shader_compile")?r():setTimeout(r,10)}))};let Ce=null;function Ae(){Ge.stop()}function ve(){Ge.start()}const Ge=new WebGLAnimation;function We(e,t,r,n){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)r=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)m.pushLight(e),e.castShadow&&m.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||O.intersectsSprite(e)){n&&K.setFromMatrixPosition(e.matrixWorld).applyMatrix4(V);const t=ie.update(e),i=e.material;i.visible&&h.push(e,t,i,r,K.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||O.intersectsObject(e))){const t=ie.update(e),i=e.material;if(n&&(void 0!==e.boundingSphere?(null===e.boundingSphere&&e.computeBoundingSphere(),K.copy(e.boundingSphere.center)):(null===t.boundingSphere&&t.computeBoundingSphere(),K.copy(t.boundingSphere.center)),K.applyMatrix4(e.matrixWorld).applyMatrix4(V)),Array.isArray(i)){const n=t.groups;for(let s=0,o=n.length;s<o;s++){const o=n[s],a=i[o.materialIndex];a&&a.visible&&h.push(e,t,a,r,K.z,o)}}else i.visible&&h.push(e,t,i,r,K.z,null)}const i=e.children;for(let e=0,s=i.length;e<s;e++)We(i[e],t,r,n)}function Fe(e,t,r,n){const i=e.opaque,s=e.transmissive,o=e.transparent;m.setupLightsView(r),!0===N&&ue.setGlobalState(x.clippingPlanes,r),n&&$.viewport(E.copy(n)),i.length>0&&De(i,t,r),s.length>0&&De(s,t,r),o.length>0&&De(o,t,r),$.buffers.depth.setTest(!0),$.buffers.depth.setMask(!0),$.buffers.color.setMask(!0),$.setPolygonOffset(!1)}function ye(e,t,r,n){if(null!==(!0===r.isScene?r.overrideMaterial:null))return;void 0===m.state.transmissionRenderTarget[n.id]&&(m.state.transmissionRenderTarget[n.id]=new WebGLRenderTarget(1,1,{generateMipmaps:!0,type:q.has("EXT_color_buffer_half_float")||q.has("EXT_color_buffer_float")?HalfFloatType:UnsignedByteType,minFilter:LinearMipmapLinearFilter,samples:4,stencilBuffer:i,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:ColorManagement.workingColorSpace}));const s=m.state.transmissionRenderTarget[n.id],o=n.viewport||E;s.setSize(o.z*x.transmissionResolutionScale,o.w*x.transmissionResolutionScale);const a=x.getRenderTarget(),l=x.getActiveCubeFace(),u=x.getActiveMipmapLevel();x.setRenderTarget(s),x.getClearColor(v),G=x.getClearAlpha(),G<1&&x.setClearColor(16777215,.5),x.clear(),k&&pe.render(r);const d=x.toneMapping;x.toneMapping=NoToneMapping;const p=n.viewport;if(void 0!==n.viewport&&(n.viewport=void 0),m.setupLightsView(n),!0===N&&ue.setGlobalState(x.clippingPlanes,n),De(e,r,n),Z.updateMultisampleRenderTarget(s),Z.updateRenderTargetMipmap(s),!1===q.has("WEBGL_multisampled_render_to_texture")){let e=!1;for(let i=0,s=t.length;i<s;i++){const s=t[i],o=s.object,a=s.geometry,l=s.material,u=s.group;if(l.side===DoubleSide&&o.layers.test(n.layers)){const t=l.side;l.side=BackSide,l.needsUpdate=!0,Ue(o,r,n,a,l,u),l.side=t,l.needsUpdate=!0,e=!0}}!0===e&&(Z.updateMultisampleRenderTarget(s),Z.updateRenderTargetMipmap(s))}x.setRenderTarget(a,l,u),x.setClearColor(v,G),void 0!==p&&(n.viewport=p),x.toneMapping=d}function De(e,t,r){const n=!0===t.isScene?t.overrideMaterial:null;for(let i=0,s=e.length;i<s;i++){const s=e[i],o=s.object,a=s.geometry,l=s.group;let u=s.material;!0===u.allowOverride&&null!==n&&(u=n),o.layers.test(r.layers)&&Ue(o,t,r,a,u,l)}}function Ue(e,t,r,n,i,s){e.onBeforeRender(x,t,r,n,i,s),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(x,t,r,n,e,s),!0===i.transparent&&i.side===DoubleSide&&!1===i.forceSinglePass?(i.side=BackSide,i.needsUpdate=!0,x.renderBufferDirect(r,t,n,i,e,s),i.side=FrontSide,i.needsUpdate=!0,x.renderBufferDirect(r,t,n,i,e,s),i.side=DoubleSide):x.renderBufferDirect(r,t,n,i,e,s),e.onAfterRender(x,t,r,n,i,s)}function Be(e,t,r){!0!==t.isScene&&(t=X);const n=Q.get(e),i=m.state.lights,s=m.state.shadowsArray,o=i.state.version,a=se.getParameters(e,i.state,s,t,r),l=se.getProgramCacheKey(a);let u=n.programs;n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=(e.isMeshStandardMaterial?te:ee).get(e.envMap||n.environment),n.envMapRotation=null!==n.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation,void 0===u&&(e.addEventListener("dispose",_e),u=new Map,n.programs=u);let d=u.get(l);if(void 0!==d){if(n.currentProgram===d&&n.lightsStateVersion===o)return Ie(e,a),d}else a.uniforms=se.getUniforms(e),e.onBeforeCompile(a,x),d=se.acquireProgram(a,l),u.set(l,d),n.uniforms=a.uniforms;const p=n.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(p.clippingPlanes=ue.uniform),Ie(e,a),n.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),n.lightsStateVersion=o,n.needsLights&&(p.ambientLightColor.value=i.state.ambient,p.lightProbe.value=i.state.probe,p.directionalLights.value=i.state.directional,p.directionalLightShadows.value=i.state.directionalShadow,p.spotLights.value=i.state.spot,p.spotLightShadows.value=i.state.spotShadow,p.rectAreaLights.value=i.state.rectArea,p.ltc_1.value=i.state.rectAreaLTC1,p.ltc_2.value=i.state.rectAreaLTC2,p.pointLights.value=i.state.point,p.pointLightShadows.value=i.state.pointShadow,p.hemisphereLights.value=i.state.hemi,p.directionalShadowMap.value=i.state.directionalShadowMap,p.directionalShadowMatrix.value=i.state.directionalShadowMatrix,p.spotShadowMap.value=i.state.spotShadowMap,p.spotLightMatrix.value=i.state.spotLightMatrix,p.spotLightMap.value=i.state.spotLightMap,p.pointShadowMap.value=i.state.pointShadowMap,p.pointShadowMatrix.value=i.state.pointShadowMatrix),n.currentProgram=d,n.uniformsList=null,d}function Pe(e){if(null===e.uniformsList){const t=e.currentProgram.getUniforms();e.uniformsList=WebGLUniforms.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function Ie(e,t){const r=Q.get(e);r.outputColorSpace=t.outputColorSpace,r.batching=t.batching,r.batchingColor=t.batchingColor,r.instancing=t.instancing,r.instancingColor=t.instancingColor,r.instancingMorph=t.instancingMorph,r.skinning=t.skinning,r.morphTargets=t.morphTargets,r.morphNormals=t.morphNormals,r.morphColors=t.morphColors,r.morphTargetsCount=t.morphTargetsCount,r.numClippingPlanes=t.numClippingPlanes,r.numIntersection=t.numClipIntersection,r.vertexAlphas=t.vertexAlphas,r.vertexTangents=t.vertexTangents,r.toneMapping=t.toneMapping}Ge.setAnimationLoop((function(e){Ce&&Ce(e)})),"undefined"!=typeof self&&Ge.setContext(self),this.setAnimationLoop=function(e){Ce=e,Re.setAnimationLoop(e),null===e?Ge.stop():Ge.start()},Re.addEventListener("sessionstart",Ae),Re.addEventListener("sessionend",ve),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===M)return;if(!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===Re.enabled&&!0===Re.isPresenting&&(!0===Re.cameraAutoUpdate&&Re.updateCamera(t),t=Re.getCamera()),!0===e.isScene&&e.onBeforeRender(x,e,t,w),m=le.get(e,T.length),m.init(t),T.push(m),V.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),O.setFromProjectionMatrix(V,WebGLCoordinateSystem,t.reversedDepth),j=this.localClippingEnabled,N=ue.init(this.clippingPlanes,j),h=ae.get(e,b.length),h.init(),b.push(h),!0===Re.enabled&&!0===Re.isPresenting){const e=x.xr.getDepthSensingMesh();null!==e&&We(e,t,-1/0,x.sortObjects)}We(e,t,0,x.sortObjects),h.finish(),!0===x.sortObjects&&h.sort(D,U),k=!1===Re.enabled||!1===Re.isPresenting||!1===Re.hasDepthSensing(),k&&pe.addToRenderList(h,e),this.info.render.frame++,!0===N&&ue.beginShadows();const r=m.state.shadowsArray;de.render(r,e,t),!0===N&&ue.endShadows(),!0===this.info.autoReset&&this.info.reset();const n=h.opaque,i=h.transmissive;if(m.setupLights(),t.isArrayCamera){const r=t.cameras;if(i.length>0)for(let t=0,s=r.length;t<s;t++){ye(n,i,e,r[t])}k&&pe.render(e);for(let t=0,n=r.length;t<n;t++){const n=r[t];Fe(h,e,n,n.viewport)}}else i.length>0&&ye(n,i,e,t),k&&pe.render(e),Fe(h,e,t);null!==w&&0===L&&(Z.updateMultisampleRenderTarget(w),Z.updateRenderTargetMipmap(w)),!0===e.isScene&&e.onAfterRender(x,e,t),me.resetDefaultState(),S=-1,_=null,T.pop(),T.length>0?(m=T[T.length-1],!0===N&&ue.setGlobalState(x.clippingPlanes,m.state.camera)):m=null,b.pop(),h=b.length>0?b[b.length-1]:null},this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return L},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(e,t,r){const n=Q.get(e);n.__autoAllocateDepthBuffer=!1===e.resolveDepthBuffer,!1===n.__autoAllocateDepthBuffer&&(n.__useRenderToTexture=!1),Q.get(e.texture).__webglTexture=t,Q.get(e.depthTexture).__webglTexture=n.__autoAllocateDepthBuffer?void 0:r,n.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(e,t){const r=Q.get(e);r.__webglFramebuffer=t,r.__useDefaultFramebuffer=void 0===t};const Oe=Te.createFramebuffer();this.setRenderTarget=function(e,t=0,r=0){w=e,R=t,L=r;let n=!0,i=null,s=!1,o=!1;if(e){const a=Q.get(e);if(void 0!==a.__useDefaultFramebuffer)$.bindFramebuffer(Te.FRAMEBUFFER,null),n=!1;else if(void 0===a.__webglFramebuffer)Z.setupRenderTarget(e);else if(a.__hasExternalTextures)Z.rebindTextures(e,Q.get(e.texture).__webglTexture,Q.get(e.depthTexture).__webglTexture);else if(e.depthBuffer){const t=e.depthTexture;if(a.__boundDepthTexture!==t){if(null!==t&&Q.has(t)&&(e.width!==t.image.width||e.height!==t.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Z.setupDepthRenderbuffer(e)}}const l=e.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(o=!0);const u=Q.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(i=Array.isArray(u[t])?u[t][r]:u[t],s=!0):i=e.samples>0&&!1===Z.useMultisampledRTT(e)?Q.get(e).__webglMultisampledFramebuffer:Array.isArray(u)?u[r]:u,E.copy(e.viewport),C.copy(e.scissor),A=e.scissorTest}else E.copy(B).multiplyScalar(y).floor(),C.copy(P).multiplyScalar(y).floor(),A=I;0!==r&&(i=Oe);if($.bindFramebuffer(Te.FRAMEBUFFER,i)&&n&&$.drawBuffers(e,i),$.viewport(E),$.scissor(C),$.setScissorTest(A),s){const n=Q.get(e.texture);Te.framebufferTexture2D(Te.FRAMEBUFFER,Te.COLOR_ATTACHMENT0,Te.TEXTURE_CUBE_MAP_POSITIVE_X+t,n.__webglTexture,r)}else if(o){const n=t;for(let t=0;t<e.textures.length;t++){const i=Q.get(e.textures[t]);Te.framebufferTextureLayer(Te.FRAMEBUFFER,Te.COLOR_ATTACHMENT0+t,i.__webglTexture,r,n)}}else if(null!==e&&0!==r){const t=Q.get(e.texture);Te.framebufferTexture2D(Te.FRAMEBUFFER,Te.COLOR_ATTACHMENT0,Te.TEXTURE_2D,t.__webglTexture,r)}S=-1},this.readRenderTargetPixels=function(e,t,r,n,i,s,o,a=0){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=Q.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(l=l[o]),l){$.bindFramebuffer(Te.FRAMEBUFFER,l);try{const o=e.textures[a],l=o.format,u=o.type;if(!Y.textureFormatReadable(l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!Y.textureTypeReadable(u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-n&&r>=0&&r<=e.height-i&&(e.textures.length>1&&Te.readBuffer(Te.COLOR_ATTACHMENT0+a),Te.readPixels(t,r,n,i,he.convert(l),he.convert(u),s))}finally{const e=null!==w?Q.get(w).__webglFramebuffer:null;$.bindFramebuffer(Te.FRAMEBUFFER,e)}}},this.readRenderTargetPixelsAsync=async function(e,t,r,n,i,s,o,a=0){if(!e||!e.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=Q.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(l=l[o]),l){if(t>=0&&t<=e.width-n&&r>=0&&r<=e.height-i){$.bindFramebuffer(Te.FRAMEBUFFER,l);const o=e.textures[a],u=o.format,d=o.type;if(!Y.textureFormatReadable(u))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Y.textureTypeReadable(d))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const p=Te.createBuffer();Te.bindBuffer(Te.PIXEL_PACK_BUFFER,p),Te.bufferData(Te.PIXEL_PACK_BUFFER,s.byteLength,Te.STREAM_READ),e.textures.length>1&&Te.readBuffer(Te.COLOR_ATTACHMENT0+a),Te.readPixels(t,r,n,i,he.convert(u),he.convert(d),0);const c=null!==w?Q.get(w).__webglFramebuffer:null;$.bindFramebuffer(Te.FRAMEBUFFER,c);const f=Te.fenceSync(Te.SYNC_GPU_COMMANDS_COMPLETE,0);return Te.flush(),await probeAsync(Te,f,4),Te.bindBuffer(Te.PIXEL_PACK_BUFFER,p),Te.getBufferSubData(Te.PIXEL_PACK_BUFFER,0,s),Te.deleteBuffer(p),Te.deleteSync(f),s}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(e,t=null,r=0){const n=Math.pow(2,-r),i=Math.floor(e.image.width*n),s=Math.floor(e.image.height*n),o=null!==t?t.x:0,a=null!==t?t.y:0;Z.setTexture2D(e,0),Te.copyTexSubImage2D(Te.TEXTURE_2D,r,0,0,o,a,i,s),$.unbindTexture()};const Ne=Te.createFramebuffer(),je=Te.createFramebuffer();this.copyTextureToTexture=function(e,t,r=null,n=null,i=0,s=null){let o,a,l,u,d,p,c,f,g;null===s&&(0!==i?(warnOnce("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),s=i,i=0):s=0);const h=e.isCompressedTexture?e.mipmaps[s]:e.image;if(null!==r)o=r.max.x-r.min.x,a=r.max.y-r.min.y,l=r.isBox3?r.max.z-r.min.z:1,u=r.min.x,d=r.min.y,p=r.isBox3?r.min.z:0;else{const t=Math.pow(2,-i);o=Math.floor(h.width*t),a=Math.floor(h.height*t),l=e.isDataArrayTexture?h.depth:e.isData3DTexture?Math.floor(h.depth*t):1,u=0,d=0,p=0}null!==n?(c=n.x,f=n.y,g=n.z):(c=0,f=0,g=0);const m=he.convert(t.format),b=he.convert(t.type);let T;t.isData3DTexture?(Z.setTexture3D(t,0),T=Te.TEXTURE_3D):t.isDataArrayTexture||t.isCompressedArrayTexture?(Z.setTexture2DArray(t,0),T=Te.TEXTURE_2D_ARRAY):(Z.setTexture2D(t,0),T=Te.TEXTURE_2D),Te.pixelStorei(Te.UNPACK_FLIP_Y_WEBGL,t.flipY),Te.pixelStorei(Te.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),Te.pixelStorei(Te.UNPACK_ALIGNMENT,t.unpackAlignment);const x=Te.getParameter(Te.UNPACK_ROW_LENGTH),M=Te.getParameter(Te.UNPACK_IMAGE_HEIGHT),R=Te.getParameter(Te.UNPACK_SKIP_PIXELS),L=Te.getParameter(Te.UNPACK_SKIP_ROWS),w=Te.getParameter(Te.UNPACK_SKIP_IMAGES);Te.pixelStorei(Te.UNPACK_ROW_LENGTH,h.width),Te.pixelStorei(Te.UNPACK_IMAGE_HEIGHT,h.height),Te.pixelStorei(Te.UNPACK_SKIP_PIXELS,u),Te.pixelStorei(Te.UNPACK_SKIP_ROWS,d),Te.pixelStorei(Te.UNPACK_SKIP_IMAGES,p);const S=e.isDataArrayTexture||e.isData3DTexture,_=t.isDataArrayTexture||t.isData3DTexture;if(e.isDepthTexture){const r=Q.get(e),n=Q.get(t),h=Q.get(r.__renderTarget),m=Q.get(n.__renderTarget);$.bindFramebuffer(Te.READ_FRAMEBUFFER,h.__webglFramebuffer),$.bindFramebuffer(Te.DRAW_FRAMEBUFFER,m.__webglFramebuffer);for(let r=0;r<l;r++)S&&(Te.framebufferTextureLayer(Te.READ_FRAMEBUFFER,Te.COLOR_ATTACHMENT0,Q.get(e).__webglTexture,i,p+r),Te.framebufferTextureLayer(Te.DRAW_FRAMEBUFFER,Te.COLOR_ATTACHMENT0,Q.get(t).__webglTexture,s,g+r)),Te.blitFramebuffer(u,d,o,a,c,f,o,a,Te.DEPTH_BUFFER_BIT,Te.NEAREST);$.bindFramebuffer(Te.READ_FRAMEBUFFER,null),$.bindFramebuffer(Te.DRAW_FRAMEBUFFER,null)}else if(0!==i||e.isRenderTargetTexture||Q.has(e)){const r=Q.get(e),n=Q.get(t);$.bindFramebuffer(Te.READ_FRAMEBUFFER,Ne),$.bindFramebuffer(Te.DRAW_FRAMEBUFFER,je);for(let e=0;e<l;e++)S?Te.framebufferTextureLayer(Te.READ_FRAMEBUFFER,Te.COLOR_ATTACHMENT0,r.__webglTexture,i,p+e):Te.framebufferTexture2D(Te.READ_FRAMEBUFFER,Te.COLOR_ATTACHMENT0,Te.TEXTURE_2D,r.__webglTexture,i),_?Te.framebufferTextureLayer(Te.DRAW_FRAMEBUFFER,Te.COLOR_ATTACHMENT0,n.__webglTexture,s,g+e):Te.framebufferTexture2D(Te.DRAW_FRAMEBUFFER,Te.COLOR_ATTACHMENT0,Te.TEXTURE_2D,n.__webglTexture,s),0!==i?Te.blitFramebuffer(u,d,o,a,c,f,o,a,Te.COLOR_BUFFER_BIT,Te.NEAREST):_?Te.copyTexSubImage3D(T,s,c,f,g+e,u,d,o,a):Te.copyTexSubImage2D(T,s,c,f,u,d,o,a);$.bindFramebuffer(Te.READ_FRAMEBUFFER,null),$.bindFramebuffer(Te.DRAW_FRAMEBUFFER,null)}else _?e.isDataTexture||e.isData3DTexture?Te.texSubImage3D(T,s,c,f,g,o,a,l,m,b,h.data):t.isCompressedArrayTexture?Te.compressedTexSubImage3D(T,s,c,f,g,o,a,l,m,h.data):Te.texSubImage3D(T,s,c,f,g,o,a,l,m,b,h):e.isDataTexture?Te.texSubImage2D(Te.TEXTURE_2D,s,c,f,o,a,m,b,h.data):e.isCompressedTexture?Te.compressedTexSubImage2D(Te.TEXTURE_2D,s,c,f,h.width,h.height,m,h.data):Te.texSubImage2D(Te.TEXTURE_2D,s,c,f,o,a,m,b,h);Te.pixelStorei(Te.UNPACK_ROW_LENGTH,x),Te.pixelStorei(Te.UNPACK_IMAGE_HEIGHT,M),Te.pixelStorei(Te.UNPACK_SKIP_PIXELS,R),Te.pixelStorei(Te.UNPACK_SKIP_ROWS,L),Te.pixelStorei(Te.UNPACK_SKIP_IMAGES,w),0===s&&t.generateMipmaps&&Te.generateMipmap(T),$.unbindTexture()},this.copyTextureToTexture3D=function(e,t,r=null,n=null,i=0){return warnOnce('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(e,t,r,n,i)},this.initRenderTarget=function(e){void 0===Q.get(e).__webglFramebuffer&&Z.setupRenderTarget(e)},this.initTexture=function(e){e.isCubeTexture?Z.setTextureCube(e,0):e.isData3DTexture?Z.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?Z.setTexture2DArray(e,0):Z.setTexture2D(e,0),$.unbindTexture()},this.resetState=function(){R=0,L=0,w=null,$.reset(),me.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return WebGLCoordinateSystem}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=ColorManagement._getDrawingBufferColorSpace(e),t.unpackColorSpace=ColorManagement._getUnpackColorSpace()}}export{WebGLRenderer};
//# sourceMappingURL=WebGLRenderer.js.map