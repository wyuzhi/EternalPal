{"version":3,"file":"node_modules/three/src/renderers/common/Attributes.js","names":["DataMap","AttributeType","DynamicDrawUsage","Attributes","constructor","backend","super","this","attribute","attributeData","delete","destroyAttribute","update","type","data","get","undefined","version","VERTEX","createAttribute","INDEX","createIndexAttribute","STORAGE","createStorageAttribute","INDIRECT","createIndirectStorageAttribute","_getBufferAttribute","bufferAttribute","usage","updateAttribute","isInterleavedBufferAttribute"],"sources":["node_modules/three/src/renderers/common/Attributes.js"],"sourcesContent":["import DataMap from './DataMap.js';\nimport { AttributeType } from './Constants.js';\n\nimport { DynamicDrawUsage } from '../../constants.js';\n\n/**\n * This renderer module manages geometry attributes.\n *\n * @private\n * @augments DataMap\n */\nclass Attributes extends DataMap {\n\n\t/**\n\t * Constructs a new attribute management component.\n\t *\n\t * @param {Backend} backend - The renderer's backend.\n\t */\n\tconstructor( backend ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The renderer's backend.\n\t\t *\n\t\t * @type {Backend}\n\t\t */\n\t\tthis.backend = backend;\n\n\t}\n\n\t/**\n\t * Deletes the data for the given attribute.\n\t *\n\t * @param {BufferAttribute} attribute - The attribute.\n\t * @return {Object|null} The deleted attribute data.\n\t */\n\tdelete( attribute ) {\n\n\t\tconst attributeData = super.delete( attribute );\n\n\t\tif ( attributeData !== null ) {\n\n\t\t\tthis.backend.destroyAttribute( attribute );\n\n\t\t}\n\n\t\treturn attributeData;\n\n\t}\n\n\t/**\n\t * Updates the given attribute. This method creates attribute buffers\n\t * for new attributes and updates data for existing ones.\n\t *\n\t * @param {BufferAttribute} attribute - The attribute to update.\n\t * @param {number} type - The attribute type.\n\t */\n\tupdate( attribute, type ) {\n\n\t\tconst data = this.get( attribute );\n\n\t\tif ( data.version === undefined ) {\n\n\t\t\tif ( type === AttributeType.VERTEX ) {\n\n\t\t\t\tthis.backend.createAttribute( attribute );\n\n\t\t\t} else if ( type === AttributeType.INDEX ) {\n\n\t\t\t\tthis.backend.createIndexAttribute( attribute );\n\n\t\t\t} else if ( type === AttributeType.STORAGE ) {\n\n\t\t\t\tthis.backend.createStorageAttribute( attribute );\n\n\t\t\t} else if ( type === AttributeType.INDIRECT ) {\n\n\t\t\t\tthis.backend.createIndirectStorageAttribute( attribute );\n\n\t\t\t}\n\n\t\t\tdata.version = this._getBufferAttribute( attribute ).version;\n\n\t\t} else {\n\n\t\t\tconst bufferAttribute = this._getBufferAttribute( attribute );\n\n\t\t\tif ( data.version < bufferAttribute.version || bufferAttribute.usage === DynamicDrawUsage ) {\n\n\t\t\t\tthis.backend.updateAttribute( attribute );\n\n\t\t\t\tdata.version = bufferAttribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Utility method for handling interleaved buffer attributes correctly.\n\t * To process them, their `InterleavedBuffer` is returned.\n\t *\n\t * @param {BufferAttribute} attribute - The attribute.\n\t * @return {BufferAttribute|InterleavedBuffer}\n\t */\n\t_getBufferAttribute( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn attribute;\n\n\t}\n\n}\n\nexport default Attributes;\n"],"mappings":"OAAOA,YAAa,sBACXC,kBAAqB,wBAErBC,qBAAwB,qBAQjC,MAAMC,mBAAmBH,QAOxB,WAAAI,CAAaC,GAEZC,QAOAC,KAAKF,QAAUA,CAEhB,CAQA,OAAQG,GAEP,MAAMC,EAAgBH,MAAMI,OAAQF,GAQpC,OANuB,OAAlBC,GAEJF,KAAKF,QAAQM,iBAAkBH,GAIzBC,CAER,CASA,MAAAG,CAAQJ,EAAWK,GAElB,MAAMC,EAAOP,KAAKQ,IAAKP,GAEvB,QAAsBQ,IAAjBF,EAAKG,QAEJJ,IAASZ,cAAciB,OAE3BX,KAAKF,QAAQc,gBAAiBX,GAEnBK,IAASZ,cAAcmB,MAElCb,KAAKF,QAAQgB,qBAAsBb,GAExBK,IAASZ,cAAcqB,QAElCf,KAAKF,QAAQkB,uBAAwBf,GAE1BK,IAASZ,cAAcuB,UAElCjB,KAAKF,QAAQoB,+BAAgCjB,GAI9CM,EAAKG,QAAUV,KAAKmB,oBAAqBlB,GAAYS,YAE/C,CAEN,MAAMU,EAAkBpB,KAAKmB,oBAAqBlB,IAE7CM,EAAKG,QAAUU,EAAgBV,SAAWU,EAAgBC,QAAU1B,oBAExEK,KAAKF,QAAQwB,gBAAiBrB,GAE9BM,EAAKG,QAAUU,EAAgBV,QAIjC,CAED,CASA,mBAAAS,CAAqBlB,GAIpB,OAFKA,EAAUsB,+BAA+BtB,EAAYA,EAAUM,MAE7DN,CAER,iBAIcL","ignoreList":[]}