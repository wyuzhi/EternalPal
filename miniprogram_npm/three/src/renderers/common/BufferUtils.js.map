{"version":3,"file":"node_modules/three/src/renderers/common/BufferUtils.js","names":["GPU_CHUNK_BYTES","getFloatLength","floatLength","getVectorLength","count","vectorLength","getStrideLength"],"sources":["node_modules/three/src/renderers/common/BufferUtils.js"],"sourcesContent":["import { GPU_CHUNK_BYTES } from './Constants.js';\n\n/**\n * This function is usually called with the length in bytes of an array buffer.\n * It returns an padded value which ensure chunk size alignment according to STD140 layout.\n *\n * @function\n * @param {number} floatLength - The buffer length.\n * @return {number} The padded length.\n */\nfunction getFloatLength( floatLength ) {\n\n\t// ensure chunk size alignment (STD140 layout)\n\n\treturn floatLength + ( ( GPU_CHUNK_BYTES - ( floatLength % GPU_CHUNK_BYTES ) ) % GPU_CHUNK_BYTES );\n\n}\n\n/**\n * Given the count of vectors and their vector length, this function computes\n * a total length in bytes with buffer alignment according to STD140 layout.\n *\n * @function\n * @param {number} count - The number of vectors.\n * @param {number} [vectorLength=4] - The vector length.\n * @return {number} The padded length.\n */\nfunction getVectorLength( count, vectorLength = 4 ) {\n\n\tconst strideLength = getStrideLength( vectorLength );\n\n\tconst floatLength = strideLength * count;\n\n\treturn getFloatLength( floatLength );\n\n}\n\n/**\n * This function is called with a vector length and ensure the computed length\n * matches a predefined stride (in this case `4`).\n *\n * @function\n * @param {number} vectorLength - The vector length.\n * @return {number} The padded length.\n */\nfunction getStrideLength( vectorLength ) {\n\n\tconst strideLength = 4;\n\n\treturn vectorLength + ( ( strideLength - ( vectorLength % strideLength ) ) % strideLength );\n\n}\n\nexport {\n\tgetFloatLength,\n\tgetVectorLength,\n\tgetStrideLength\n};\n"],"mappings":"OAASA,oBAAuB,iBAUhC,SAASC,eAAgBC,GAIxB,OAAOA,GAAkBF,gBAAoBE,EAAcF,iBAAsBA,eAElF,CAWA,SAASG,gBAAiBC,EAAOC,EAAe,GAM/C,OAAOJ,eAJcK,gBAAiBD,GAEHD,EAIpC,CAUA,SAASE,gBAAiBD,GAIzB,OAAOA,GAFc,EAEsBA,EAFtB,IAItB,QAGCJ,eACAE,gBACAG","ignoreList":[]}