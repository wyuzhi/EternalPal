{"version":3,"file":"node_modules/three/src/renderers/common/ClippingContext.js","names":["Matrix3","Plane","Vector4","_plane","ClippingContext","constructor","parentContext","this","version","clipIntersection","cacheKey","shadowPass","viewNormalMatrix","clippingGroupContexts","WeakMap","intersectionPlanes","unionPlanes","parentVersion","viewMatrix","projectPlanes","source","destination","offset","l","length","i","copy","applyMatrix4","v","normal","x","y","z","w","constant","updateGlobal","scene","camera","overrideMaterial","isShadowPassMaterial","matrixWorldInverse","getNormalMatrix","update","clippingGroup","Array","from","srcClippingPlanes","clippingPlanes","dstClippingPlanes","getGroupContext","clipShadows","context","get","undefined","set","unionClippingCount"],"sources":["node_modules/three/src/renderers/common/ClippingContext.js"],"sourcesContent":["import { Matrix3 } from '../../math/Matrix3.js';\nimport { Plane } from '../../math/Plane.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\nconst _plane = /*@__PURE__*/ new Plane();\n\n/**\n * Represents the state that is used to perform clipping via clipping planes.\n * There is a default clipping context for each render context. When the\n * scene holds instances of `ClippingGroup`, there will be a context for each\n * group.\n *\n * @private\n */\nclass ClippingContext {\n\n\t/**\n\t * Constructs a new clipping context.\n\t *\n\t * @param {?ClippingContext} [parentContext=null] - A reference to the parent clipping context.\n\t */\n\tconstructor( parentContext = null ) {\n\n\t\t/**\n\t\t * The clipping context's version.\n\t\t *\n\t\t * @type {number}\n\t\t * @readonly\n\t\t */\n\t\tthis.version = 0;\n\n\t\t/**\n\t\t * Whether the intersection of the clipping planes is used to clip objects, rather than their union.\n\t\t *\n\t\t * @type {?boolean}\n\t\t * @default null\n\t\t */\n\t\tthis.clipIntersection = null;\n\n\t\t/**\n\t\t * The clipping context's cache key.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tthis.cacheKey = '';\n\n\t\t/**\n\t\t * Whether the shadow pass is active or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.shadowPass = false;\n\n\t\t/**\n\t\t * The view normal matrix.\n\t\t *\n\t\t * @type {Matrix3}\n\t\t */\n\t\tthis.viewNormalMatrix = new Matrix3();\n\n\t\t/**\n\t\t * Internal cache for maintaining clipping contexts.\n\t\t *\n\t\t * @type {WeakMap<ClippingGroup,ClippingContext>}\n\t\t */\n\t\tthis.clippingGroupContexts = new WeakMap();\n\n\t\t/**\n\t\t * The intersection planes.\n\t\t *\n\t\t * @type {Array<Vector4>}\n\t\t */\n\t\tthis.intersectionPlanes = [];\n\n\t\t/**\n\t\t * The intersection planes.\n\t\t *\n\t\t * @type {Array<Vector4>}\n\t\t */\n\t\tthis.unionPlanes = [];\n\n\t\t/**\n\t\t * The version of the clipping context's parent context.\n\t\t *\n\t\t * @type {?number}\n\t\t * @readonly\n\t\t */\n\t\tthis.parentVersion = null;\n\n\t\tif ( parentContext !== null ) {\n\n\t\t\tthis.viewNormalMatrix = parentContext.viewNormalMatrix;\n\t\t\tthis.clippingGroupContexts = parentContext.clippingGroupContexts;\n\n\t\t\tthis.shadowPass = parentContext.shadowPass;\n\t\t\tthis.viewMatrix = parentContext.viewMatrix;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Projects the given source clipping planes and writes the result into the\n\t * destination array.\n\t *\n\t * @param {Array<Plane>} source - The source clipping planes.\n\t * @param {Array<Vector4>} destination - The destination.\n\t * @param {number} offset - The offset.\n\t */\n\tprojectPlanes( source, destination, offset ) {\n\n\t\tconst l = source.length;\n\n\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t_plane.copy( source[ i ] ).applyMatrix4( this.viewMatrix, this.viewNormalMatrix );\n\n\t\t\tconst v = destination[ offset + i ];\n\t\t\tconst normal = _plane.normal;\n\n\t\t\tv.x = - normal.x;\n\t\t\tv.y = - normal.y;\n\t\t\tv.z = - normal.z;\n\t\t\tv.w = _plane.constant;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the root clipping context of a scene.\n\t *\n\t * @param {Scene} scene - The scene.\n\t * @param {Camera} camera - The camera that is used to render the scene.\n\t */\n\tupdateGlobal( scene, camera ) {\n\n\t\tthis.shadowPass = ( scene.overrideMaterial !== null && scene.overrideMaterial.isShadowPassMaterial );\n\t\tthis.viewMatrix = camera.matrixWorldInverse;\n\n\t\tthis.viewNormalMatrix.getNormalMatrix( this.viewMatrix );\n\n\t}\n\n\t/**\n\t * Updates the clipping context.\n\t *\n\t * @param {ClippingContext} parentContext - The parent context.\n\t * @param {ClippingGroup} clippingGroup - The clipping group this context belongs to.\n\t */\n\tupdate( parentContext, clippingGroup ) {\n\n\t\tlet update = false;\n\n\t\tif ( parentContext.version !== this.parentVersion ) {\n\n\t\t\tthis.intersectionPlanes = Array.from( parentContext.intersectionPlanes );\n\t\t\tthis.unionPlanes = Array.from( parentContext.unionPlanes );\n\t\t\tthis.parentVersion = parentContext.version;\n\n\t\t}\n\n\t\tif ( this.clipIntersection !== clippingGroup.clipIntersection ) {\n\n\t\t\tthis.clipIntersection = clippingGroup.clipIntersection;\n\n\t\t\tif ( this.clipIntersection ) {\n\n\t\t\t\tthis.unionPlanes.length = parentContext.unionPlanes.length;\n\n\t\t\t} else {\n\n\t\t\t\tthis.intersectionPlanes.length = parentContext.intersectionPlanes.length;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst srcClippingPlanes = clippingGroup.clippingPlanes;\n\t\tconst l = srcClippingPlanes.length;\n\n\t\tlet dstClippingPlanes;\n\t\tlet offset;\n\n\t\tif ( this.clipIntersection ) {\n\n\t\t\tdstClippingPlanes = this.intersectionPlanes;\n\t\t\toffset = parentContext.intersectionPlanes.length;\n\n\t\t} else {\n\n\t\t\tdstClippingPlanes = this.unionPlanes;\n\t\t\toffset = parentContext.unionPlanes.length;\n\n\t\t}\n\n\t\tif ( dstClippingPlanes.length !== offset + l ) {\n\n\t\t\tdstClippingPlanes.length = offset + l;\n\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\tdstClippingPlanes[ offset + i ] = new Vector4();\n\n\t\t\t}\n\n\t\t\tupdate = true;\n\n\t\t}\n\n\t\tthis.projectPlanes( srcClippingPlanes, dstClippingPlanes, offset );\n\n\t\tif ( update ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.cacheKey = `${ this.intersectionPlanes.length }:${ this.unionPlanes.length }`;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a clipping context for the given clipping group.\n\t *\n\t * @param {ClippingGroup} clippingGroup - The clipping group.\n\t * @return {ClippingContext} The clipping context.\n\t */\n\tgetGroupContext( clippingGroup ) {\n\n\t\tif ( this.shadowPass && ! clippingGroup.clipShadows ) return this;\n\n\t\tlet context = this.clippingGroupContexts.get( clippingGroup );\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ClippingContext( this );\n\t\t\tthis.clippingGroupContexts.set( clippingGroup, context );\n\n\t\t}\n\n\t\tcontext.update( this, clippingGroup );\n\n\t\treturn context;\n\n\t}\n\n\t/**\n\t * The count of union clipping planes.\n\t *\n\t * @type {number}\n\t * @readonly\n\t */\n\tget unionClippingCount() {\n\n\t\treturn this.unionPlanes.length;\n\n\t}\n\n}\n\nexport default ClippingContext;\n"],"mappings":"OAASA,YAAe,+BACfC,UAAa,6BACbC,YAAe,wBAExB,MAAMC,OAAuB,IAAIF,MAUjC,MAAMG,gBAOL,WAAAC,CAAaC,EAAgB,MAQ5BC,KAAKC,QAAU,EAQfD,KAAKE,iBAAmB,KAOxBF,KAAKG,SAAW,GAQhBH,KAAKI,YAAa,EAOlBJ,KAAKK,iBAAmB,IAAIZ,QAO5BO,KAAKM,sBAAwB,IAAIC,QAOjCP,KAAKQ,mBAAqB,GAO1BR,KAAKS,YAAc,GAQnBT,KAAKU,cAAgB,KAEE,OAAlBX,IAEJC,KAAKK,iBAAmBN,EAAcM,iBACtCL,KAAKM,sBAAwBP,EAAcO,sBAE3CN,KAAKI,WAAaL,EAAcK,WAChCJ,KAAKW,WAAaZ,EAAcY,WAIlC,CAUA,aAAAC,CAAeC,EAAQC,EAAaC,GAEnC,MAAMC,EAAIH,EAAOI,OAEjB,IAAM,IAAIC,EAAI,EAAGA,EAAIF,EAAGE,IAAO,CAE9BtB,OAAOuB,KAAMN,EAAQK,IAAME,aAAcpB,KAAKW,WAAYX,KAAKK,kBAE/D,MAAMgB,EAAIP,EAAaC,EAASG,GAC1BI,EAAS1B,OAAO0B,OAEtBD,EAAEE,GAAMD,EAAOC,EACfF,EAAEG,GAAMF,EAAOE,EACfH,EAAEI,GAAMH,EAAOG,EACfJ,EAAEK,EAAI9B,OAAO+B,QAEd,CAED,CAQA,YAAAC,CAAcC,EAAOC,GAEpB9B,KAAKI,WAA0C,OAA3ByB,EAAME,kBAA6BF,EAAME,iBAAiBC,qBAC9EhC,KAAKW,WAAamB,EAAOG,mBAEzBjC,KAAKK,iBAAiB6B,gBAAiBlC,KAAKW,WAE7C,CAQA,MAAAwB,CAAQpC,EAAeqC,GAEtB,IAAID,GAAS,EAERpC,EAAcE,UAAYD,KAAKU,gBAEnCV,KAAKQ,mBAAqB6B,MAAMC,KAAMvC,EAAcS,oBACpDR,KAAKS,YAAc4B,MAAMC,KAAMvC,EAAcU,aAC7CT,KAAKU,cAAgBX,EAAcE,SAI/BD,KAAKE,mBAAqBkC,EAAclC,mBAE5CF,KAAKE,iBAAmBkC,EAAclC,iBAEjCF,KAAKE,iBAETF,KAAKS,YAAYQ,OAASlB,EAAcU,YAAYQ,OAIpDjB,KAAKQ,mBAAmBS,OAASlB,EAAcS,mBAAmBS,QAMpE,MAAMsB,EAAoBH,EAAcI,eAClCxB,EAAIuB,EAAkBtB,OAE5B,IAAIwB,EACA1B,EAcJ,GAZKf,KAAKE,kBAETuC,EAAoBzC,KAAKQ,mBACzBO,EAAShB,EAAcS,mBAAmBS,SAI1CwB,EAAoBzC,KAAKS,YACzBM,EAAShB,EAAcU,YAAYQ,QAI/BwB,EAAkBxB,SAAWF,EAASC,EAAI,CAE9CyB,EAAkBxB,OAASF,EAASC,EAEpC,IAAM,IAAIE,EAAI,EAAGA,EAAIF,EAAGE,IAEvBuB,EAAmB1B,EAASG,GAAM,IAAIvB,QAIvCwC,GAAS,CAEV,CAEAnC,KAAKY,cAAe2B,EAAmBE,EAAmB1B,GAErDoB,IAEJnC,KAAKC,UACLD,KAAKG,SAAW,GAAIH,KAAKQ,mBAAmBS,UAAYjB,KAAKS,YAAYQ,SAI3E,CAQA,eAAAyB,CAAiBN,GAEhB,GAAKpC,KAAKI,aAAgBgC,EAAcO,YAAc,OAAO3C,KAE7D,IAAI4C,EAAU5C,KAAKM,sBAAsBuC,IAAKT,GAW9C,YATiBU,IAAZF,IAEJA,EAAU,IAAI/C,gBAAiBG,MAC/BA,KAAKM,sBAAsByC,IAAKX,EAAeQ,IAIhDA,EAAQT,OAAQnC,KAAMoC,GAEfQ,CAER,CAQA,sBAAII,GAEH,OAAOhD,KAAKS,YAAYQ,MAEzB,iBAIcpB","ignoreList":[]}