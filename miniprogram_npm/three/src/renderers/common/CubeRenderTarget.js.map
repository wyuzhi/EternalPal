{"version":3,"file":"node_modules/three/src/renderers/common/CubeRenderTarget.js","names":["equirectUV","TSL_Texture","positionWorldDirection","NodeMaterial","WebGLCubeRenderTarget","Scene","CubeCamera","BoxGeometry","Mesh","BackSide","NoBlending","LinearFilter","LinearMipmapLinearFilter","CubeRenderTarget","constructor","size","options","super","this","isCubeRenderTarget","fromEquirectangularTexture","renderer","texture","currentMinFilter","minFilter","currentGenerateMipmaps","generateMipmaps","type","colorSpace","magFilter","geometry","uvNode","material","colorNode","side","blending","mesh","scene","add","camera","currentMRT","getMRT","setMRT","update","dispose"],"sources":["node_modules/three/src/renderers/common/CubeRenderTarget.js"],"sourcesContent":["import { equirectUV } from '../../nodes/utils/EquirectUV.js';\nimport { texture as TSL_Texture } from '../../nodes/accessors/TextureNode.js';\nimport { positionWorldDirection } from '../../nodes/accessors/Position.js';\nimport NodeMaterial from '../../materials/nodes/NodeMaterial.js';\n\nimport { WebGLCubeRenderTarget } from '../../renderers/WebGLCubeRenderTarget.js';\nimport { Scene } from '../../scenes/Scene.js';\nimport { CubeCamera } from '../../cameras/CubeCamera.js';\nimport { BoxGeometry } from '../../geometries/BoxGeometry.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { BackSide, NoBlending, LinearFilter, LinearMipmapLinearFilter } from '../../constants.js';\n\n// @TODO: Consider rename WebGLCubeRenderTarget to just CubeRenderTarget\n\n/**\n * This class represents a cube render target. It is a special version\n * of `WebGLCubeRenderTarget` which is compatible with `WebGPURenderer`.\n *\n * @augments WebGLCubeRenderTarget\n */\nclass CubeRenderTarget extends WebGLCubeRenderTarget {\n\n\t/**\n\t * Constructs a new cube render target.\n\t *\n\t * @param {number} [size=1] - The size of the render target.\n\t * @param {RenderTarget~Options} [options] - The configuration object.\n\t */\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, options );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isCubeRenderTarget = true;\n\n\t}\n\n\t/**\n\t * Converts the given equirectangular texture to a cube map.\n\t *\n\t * @param {Renderer} renderer - The renderer.\n\t * @param {Texture} texture - The equirectangular texture.\n\t * @return {CubeRenderTarget} A reference to this cube render target.\n\t */\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tconst currentMinFilter = texture.minFilter;\n\t\tconst currentGenerateMipmaps = texture.generateMipmaps;\n\n\t\ttexture.generateMipmaps = true;\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst uvNode = equirectUV( positionWorldDirection );\n\n\t\tconst material = new NodeMaterial();\n\t\tmaterial.colorNode = TSL_Texture( texture, uvNode, 0 );\n\t\tmaterial.side = BackSide;\n\t\tmaterial.blending = NoBlending;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst scene = new Scene();\n\t\tscene.add( mesh );\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\n\t\tconst currentMRT = renderer.getMRT();\n\t\trenderer.setMRT( null );\n\n\t\tcamera.update( renderer, scene );\n\n\t\trenderer.setMRT( currentMRT );\n\n\t\ttexture.minFilter = currentMinFilter;\n\t\ttexture.currentGenerateMipmaps = currentGenerateMipmaps;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default CubeRenderTarget;\n"],"mappings":"OAASA,eAAkB,oDACPC,gBAAmB,8CAC9BC,2BAA8B,2CAChCC,iBAAkB,+CAEhBC,0BAA6B,kDAC7BC,UAAa,+BACbC,eAAkB,qCAClBC,gBAAmB,yCACnBC,SAAY,+BACZC,SAAUC,WAAYC,aAAcC,6BAAgC,qBAU7E,MAAMC,yBAAyBT,sBAQ9B,WAAAU,CAAaC,EAAO,EAAGC,EAAU,CAAC,GAEjCC,MAAOF,EAAMC,GASbE,KAAKC,oBAAqB,CAE3B,CASA,0BAAAC,CAA4BC,EAAUC,GAErC,MAAMC,EAAmBD,EAAQE,UAC3BC,EAAyBH,EAAQI,gBAEvCJ,EAAQI,iBAAkB,EAE1BR,KAAKI,QAAQK,KAAOL,EAAQK,KAC5BT,KAAKI,QAAQM,WAAaN,EAAQM,WAElCV,KAAKI,QAAQI,gBAAkBJ,EAAQI,gBACvCR,KAAKI,QAAQE,UAAYF,EAAQE,UACjCN,KAAKI,QAAQO,UAAYP,EAAQO,UAEjC,MAAMC,EAAW,IAAIvB,YAAa,EAAG,EAAG,GAElCwB,EAAS/B,WAAYE,wBAErB8B,EAAW,IAAI7B,aACrB6B,EAASC,UAAYhC,YAAaqB,EAASS,EAAQ,GACnDC,EAASE,KAAOzB,SAChBuB,EAASG,SAAWzB,WAEpB,MAAM0B,EAAO,IAAI5B,KAAMsB,EAAUE,GAE3BK,EAAQ,IAAIhC,MAClBgC,EAAMC,IAAKF,GAGNd,EAAQE,YAAcZ,2BAA2BU,EAAQE,UAAYb,cAE1E,MAAM4B,EAAS,IAAIjC,WAAY,EAAG,GAAIY,MAEhCsB,EAAanB,EAASoB,SAa5B,OAZApB,EAASqB,OAAQ,MAEjBH,EAAOI,OAAQtB,EAAUgB,GAEzBhB,EAASqB,OAAQF,GAEjBlB,EAAQE,UAAYD,EACpBD,EAAQG,uBAAyBA,EAEjCW,EAAKN,SAASc,UACdR,EAAKJ,SAASY,UAEP1B,IAER,iBAIcL","ignoreList":[]}