{"version":3,"file":"node_modules/three/src/renderers/common/RenderContexts.js","names":["ChainMap","RenderContext","Scene","Camera","_chainKeys","_defaultScene","_defaultCamera","RenderContexts","constructor","this","chainMaps","get","scene","camera","renderTarget","attachmentState","format","texture","textures","length","samples","depthBuffer","stencilBuffer","chainMap","_getChainMap","renderState","undefined","set","sampleCount","getForClear","dispose"],"sources":["node_modules/three/src/renderers/common/RenderContexts.js"],"sourcesContent":["import ChainMap from './ChainMap.js';\nimport RenderContext from './RenderContext.js';\nimport { Scene } from '../../scenes/Scene.js';\nimport { Camera } from '../../cameras/Camera.js';\n\nconst _chainKeys = [];\nconst _defaultScene = /*@__PURE__*/ new Scene();\nconst _defaultCamera = /*@__PURE__*/ new Camera();\n\n/**\n * This module manages the render contexts of the renderer.\n *\n * @private\n */\nclass RenderContexts {\n\n\t/**\n\t * Constructs a new render context management component.\n\t */\n\tconstructor() {\n\n\t\t/**\n\t\t * A dictionary that manages render contexts in chain maps\n\t\t * for each attachment state.\n\t\t *\n\t\t * @type {Object<string,ChainMap>}\n\t\t */\n\t\tthis.chainMaps = {};\n\n\t}\n\n\t/**\n\t * Returns a render context for the given scene, camera and render target.\n\t *\n\t * @param {Scene} scene - The scene.\n\t * @param {Camera} camera - The camera that is used to render the scene.\n\t * @param {?RenderTarget} [renderTarget=null] - The active render target.\n\t * @return {RenderContext} The render context.\n\t */\n\tget( scene, camera, renderTarget = null ) {\n\n\t\t_chainKeys[ 0 ] = scene;\n\t\t_chainKeys[ 1 ] = camera;\n\n\t\tlet attachmentState;\n\n\t\tif ( renderTarget === null ) {\n\n\t\t\tattachmentState = 'default';\n\n\t\t} else {\n\n\t\t\tconst format = renderTarget.texture.format;\n\t\t\tconst count = renderTarget.textures.length;\n\n\t\t\tattachmentState = `${ count }:${ format }:${ renderTarget.samples }:${ renderTarget.depthBuffer }:${ renderTarget.stencilBuffer }`;\n\n\t\t}\n\n\t\tconst chainMap = this._getChainMap( attachmentState );\n\n\t\tlet renderState = chainMap.get( _chainKeys );\n\n\t\tif ( renderState === undefined ) {\n\n\t\t\trenderState = new RenderContext();\n\n\t\t\tchainMap.set( _chainKeys, renderState );\n\n\t\t}\n\n\t\t_chainKeys.length = 0;\n\n\t\tif ( renderTarget !== null ) renderState.sampleCount = renderTarget.samples === 0 ? 1 : renderTarget.samples;\n\n\t\treturn renderState;\n\n\t}\n\n\t/**\n\t * Returns a render context intended for clear operations.\n\t *\n\t * @param {?RenderTarget} [renderTarget=null] - The active render target.\n\t * @return {RenderContext} The render context.\n\t */\n\tgetForClear( renderTarget = null ) {\n\n\t\treturn this.get( _defaultScene, _defaultCamera, renderTarget );\n\n\t}\n\n\t/**\n\t * Returns a chain map for the given attachment state.\n\t *\n\t * @private\n\t * @param {string} attachmentState - The attachment state.\n\t * @return {ChainMap} The chain map.\n\t */\n\t_getChainMap( attachmentState ) {\n\n\t\treturn this.chainMaps[ attachmentState ] || ( this.chainMaps[ attachmentState ] = new ChainMap() );\n\n\t}\n\n\t/**\n\t * Frees internal resources.\n\t */\n\tdispose() {\n\n\t\tthis.chainMaps = {};\n\n\t}\n\n}\n\nexport default RenderContexts;\n"],"mappings":"OAAOA,aAAc,uBACdC,kBAAmB,4BACjBC,UAAa,+BACbC,WAAc,0BAEvB,MAAMC,WAAa,GACbC,cAA8B,IAAIH,MAClCI,eAA+B,IAAIH,OAOzC,MAAMI,eAKL,WAAAC,GAQCC,KAAKC,UAAY,CAAC,CAEnB,CAUA,GAAAC,CAAKC,EAAOC,EAAQC,EAAe,MAKlC,IAAIC,EAEJ,GALAX,WAAY,GAAMQ,EAClBR,WAAY,GAAMS,EAII,OAAjBC,EAEJC,EAAkB,cAEZ,CAEN,MAAMC,EAASF,EAAaG,QAAQD,OAGpCD,EAAkB,GAFJD,EAAaI,SAASC,UAEHH,KAAYF,EAAaM,WAAaN,EAAaO,eAAiBP,EAAaQ,eAEnH,CAEA,MAAMC,EAAWd,KAAKe,aAAcT,GAEpC,IAAIU,EAAcF,EAASZ,IAAKP,YAchC,YAZqBsB,IAAhBD,IAEJA,EAAc,IAAIxB,cAElBsB,EAASI,IAAKvB,WAAYqB,IAI3BrB,WAAWe,OAAS,EAEE,OAAjBL,IAAwBW,EAAYG,YAAuC,IAAzBd,EAAaM,QAAgB,EAAIN,EAAaM,SAE9FK,CAER,CAQA,WAAAI,CAAaf,EAAe,MAE3B,OAAOL,KAAKE,IAAKN,cAAeC,eAAgBQ,EAEjD,CASA,YAAAU,CAAcT,GAEb,OAAON,KAAKC,UAAWK,KAAuBN,KAAKC,UAAWK,GAAoB,IAAIf,SAEvF,CAKA,OAAA8B,GAECrB,KAAKC,UAAY,CAAC,CAEnB,iBAIcH","ignoreList":[]}