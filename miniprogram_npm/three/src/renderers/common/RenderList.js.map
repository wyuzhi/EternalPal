{"version":3,"file":"node_modules/three/src/renderers/common/RenderList.js","names":["DoubleSide","painterSortStable","a","b","groupOrder","renderOrder","z","id","reversePainterSortStable","needsDoublePass","material","transmission","transmissionNode","side","forceSinglePass","RenderList","constructor","lighting","scene","camera","this","renderItems","renderItemsIndex","opaque","transparentDoublePass","transparent","bundles","lightsNode","getNode","lightsArray","occlusionQueryCount","begin","length","getNextRenderItem","object","geometry","group","clippingContext","renderItem","undefined","push","occlusionTest","unshift","pushBundle","pushLight","light","sort","customOpaqueSort","customTransparentSort","finish","setLights","i","il"],"sources":["node_modules/three/src/renderers/common/RenderList.js"],"sourcesContent":["import { DoubleSide } from '../../constants.js';\n\n/**\n * Default sorting function for opaque render items.\n *\n * @private\n * @function\n * @param {Object} a - The first render item.\n * @param {Object} b - The second render item.\n * @return {number} A numeric value which defines the sort order.\n */\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n/**\n * Default sorting function for transparent render items.\n *\n * @private\n * @function\n * @param {Object} a - The first render item.\n * @param {Object} b - The second render item.\n * @return {number} A numeric value which defines the sort order.\n */\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n/**\n * Returns `true` if the given transparent material requires a double pass.\n *\n * @private\n * @function\n * @param {Material} material - The transparent material.\n * @return {boolean} Whether the given material requires a double pass or not.\n */\nfunction needsDoublePass( material ) {\n\n\tconst hasTransmission = material.transmission > 0 || material.transmissionNode;\n\n\treturn hasTransmission && material.side === DoubleSide && material.forceSinglePass === false;\n\n}\n\n/**\n * When the renderer analyzes the scene at the beginning of a render call,\n * it stores 3D object for further processing in render lists. Depending on the\n * properties of a 3D objects (like their transformation or material state), the\n * objects are maintained in ordered lists for the actual rendering.\n *\n * Render lists are unique per scene and camera combination.\n *\n * @private\n * @augments Pipeline\n */\nclass RenderList {\n\n\t/**\n\t * Constructs a render list.\n\t *\n\t * @param {Lighting} lighting - The lighting management component.\n\t * @param {Scene} scene - The scene.\n\t * @param {Camera} camera - The camera the scene is rendered with.\n\t */\n\tconstructor( lighting, scene, camera ) {\n\n\t\t/**\n\t\t * 3D objects are transformed into render items and stored in this array.\n\t\t *\n\t\t * @type {Array<Object>}\n\t\t */\n\t\tthis.renderItems = [];\n\n\t\t/**\n\t\t * The current render items index.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.renderItemsIndex = 0;\n\n\t\t/**\n\t\t * A list with opaque render items.\n\t\t *\n\t\t * @type {Array<Object>}\n\t\t */\n\t\tthis.opaque = [];\n\n\t\t/**\n\t\t * A list with transparent render items which require\n\t\t * double pass rendering (e.g. transmissive objects).\n\t\t *\n\t\t * @type {Array<Object>}\n\t\t */\n\t\tthis.transparentDoublePass = [];\n\n\t\t/**\n\t\t * A list with transparent render items.\n\t\t *\n\t\t * @type {Array<Object>}\n\t\t */\n\t\tthis.transparent = [];\n\n\t\t/**\n\t\t * A list with transparent render bundle data.\n\t\t *\n\t\t * @type {Array<Object>}\n\t\t */\n\t\tthis.bundles = [];\n\n\t\t/**\n\t\t * The render list's lights node. This node is later\n\t\t * relevant for the actual analytical light nodes which\n\t\t * compute the scene's lighting in the shader.\n\t\t *\n\t\t * @type {LightsNode}\n\t\t */\n\t\tthis.lightsNode = lighting.getNode( scene, camera );\n\n\t\t/**\n\t\t * The scene's lights stored in an array. This array\n\t\t * is used to setup the lights node.\n\t\t *\n\t\t * @type {Array<Light>}\n\t\t */\n\t\tthis.lightsArray = [];\n\n\t\t/**\n\t\t * The scene.\n\t\t *\n\t\t * @type {Scene}\n\t\t */\n\t\tthis.scene = scene;\n\n\t\t/**\n\t\t * The camera the scene is rendered with.\n\t\t *\n\t\t * @type {Camera}\n\t\t */\n\t\tthis.camera = camera;\n\n\t\t/**\n\t\t * How many objects perform occlusion query tests.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.occlusionQueryCount = 0;\n\n\t}\n\n\t/**\n\t * This method is called right at the beginning of a render call\n\t * before the scene is analyzed. It prepares the internal data\n\t * structures for the upcoming render lists generation.\n\t *\n\t * @return {RenderList} A reference to this render list.\n\t */\n\tbegin() {\n\n\t\tthis.renderItemsIndex = 0;\n\n\t\tthis.opaque.length = 0;\n\t\tthis.transparentDoublePass.length = 0;\n\t\tthis.transparent.length = 0;\n\t\tthis.bundles.length = 0;\n\n\t\tthis.lightsArray.length = 0;\n\n\t\tthis.occlusionQueryCount = 0;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns a render item for the giving render item state. The state is defined\n\t * by a series of object-related parameters.\n\t *\n\t * The method avoids object creation by holding render items and reusing them in\n\t * subsequent render calls (just with different property values).\n\t *\n\t * @param {Object3D} object - The 3D object.\n\t * @param {BufferGeometry} geometry - The 3D object's geometry.\n\t * @param {Material} material - The 3D object's material.\n\t * @param {number} groupOrder - The current group order.\n\t * @param {number} z - Th 3D object's depth value (z value in clip space).\n\t * @param {?number} group - {?Object} group - Only relevant for objects using multiple materials. This represents a group entry from the respective `BufferGeometry`.\n\t * @param {ClippingContext} clippingContext - The current clipping context.\n\t * @return {Object} The render item.\n\t */\n\tgetNextRenderItem( object, geometry, material, groupOrder, z, group, clippingContext ) {\n\n\t\tlet renderItem = this.renderItems[ this.renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group,\n\t\t\t\tclippingContext: clippingContext\n\t\t\t};\n\n\t\t\tthis.renderItems[ this.renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\t\t\trenderItem.clippingContext = clippingContext;\n\n\t\t}\n\n\t\tthis.renderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\t/**\n\t * Pushes the given object as a render item to the internal render lists.\n\t * The selected lists depend on the object properties.\n\t *\n\t * @param {Object3D} object - The 3D object.\n\t * @param {BufferGeometry} geometry - The 3D object's geometry.\n\t * @param {Material} material - The 3D object's material.\n\t * @param {number} groupOrder - The current group order.\n\t * @param {number} z - Th 3D object's depth value (z value in clip space).\n\t * @param {?number} group - {?Object} group - Only relevant for objects using multiple materials. This represents a group entry from the respective `BufferGeometry`.\n\t * @param {ClippingContext} clippingContext - The current clipping context.\n\t */\n\tpush( object, geometry, material, groupOrder, z, group, clippingContext ) {\n\n\t\tconst renderItem = this.getNextRenderItem( object, geometry, material, groupOrder, z, group, clippingContext );\n\n\t\tif ( object.occlusionTest === true ) this.occlusionQueryCount ++;\n\n\t\tif ( material.transparent === true || material.transmission > 0 ) {\n\n\t\t\tif ( needsDoublePass( material ) ) this.transparentDoublePass.push( renderItem );\n\n\t\t\tthis.transparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\tthis.opaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Inserts the given object as a render item at the start of the internal render lists.\n\t * The selected lists depend on the object properties.\n\t *\n\t * @param {Object3D} object - The 3D object.\n\t * @param {BufferGeometry} geometry - The 3D object's geometry.\n\t * @param {Material} material - The 3D object's material.\n\t * @param {number} groupOrder - The current group order.\n\t * @param {number} z - Th 3D object's depth value (z value in clip space).\n\t * @param {?number} group - {?Object} group - Only relevant for objects using multiple materials. This represents a group entry from the respective `BufferGeometry`.\n\t * @param {ClippingContext} clippingContext - The current clipping context.\n\t */\n\tunshift( object, geometry, material, groupOrder, z, group, clippingContext ) {\n\n\t\tconst renderItem = this.getNextRenderItem( object, geometry, material, groupOrder, z, group, clippingContext );\n\n\t\tif ( material.transparent === true || material.transmission > 0 ) {\n\n\t\t\tif ( needsDoublePass( material ) ) this.transparentDoublePass.unshift( renderItem );\n\n\t\t\tthis.transparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\tthis.opaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pushes render bundle group data into the render list.\n\t *\n\t * @param {Object} group - Bundle group data.\n\t */\n\tpushBundle( group ) {\n\n\t\tthis.bundles.push( group );\n\n\t}\n\n\t/**\n\t * Pushes a light into the render list.\n\t *\n\t * @param {Light} light - The light.\n\t */\n\tpushLight( light ) {\n\n\t\tthis.lightsArray.push( light );\n\n\t}\n\n\t/**\n\t * Sorts the internal render lists.\n\t *\n\t * @param {?function(any, any): number} customOpaqueSort - A custom sort function for opaque objects.\n\t * @param {?function(any, any): number} customTransparentSort -  A custom sort function for transparent objects.\n\t */\n\tsort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( this.opaque.length > 1 ) this.opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( this.transparentDoublePass.length > 1 ) this.transparentDoublePass.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( this.transparent.length > 1 ) this.transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\t/**\n\t * This method performs finalizing tasks right after the render lists\n\t * have been generated.\n\t */\n\tfinish() {\n\n\t\t// update lights\n\n\t\tthis.lightsNode.setLights( this.lightsArray );\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = this.renderItemsIndex, il = this.renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = this.renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.groupOrder = null;\n\t\t\trenderItem.renderOrder = null;\n\t\t\trenderItem.z = null;\n\t\t\trenderItem.group = null;\n\t\t\trenderItem.clippingContext = null;\n\n\t\t}\n\n\t}\n\n}\n\nexport default RenderList;\n"],"mappings":"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","ignoreList":[]}