{"version":3,"file":"node_modules/three/src/renderers/common/SampledTexture.js","names":["Sampler","_id","SampledTexture","constructor","name","texture","super","this","id","store","isSampledTexture","SampledArrayTexture","isSampledArrayTexture","Sampled3DTexture","isSampled3DTexture","SampledCubeTexture","isSampledCubeTexture"],"sources":["node_modules/three/src/renderers/common/SampledTexture.js"],"sourcesContent":["import Sampler from './Sampler.js';\n\nlet _id = 0;\n\n/**\n * Represents a sampled texture binding type.\n *\n * @private\n * @augments Binding\n */\nclass SampledTexture extends Sampler {\n\n\t/**\n\t * Constructs a new sampled texture.\n\t *\n\t * @param {string} name - The sampled texture's name.\n\t * @param {?Texture} texture - The texture this binding is referring to.\n\t */\n\tconstructor( name, texture ) {\n\n\t\tsuper( name, texture );\n\n\t\t/**\n\t\t * This identifier.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.id = _id ++;\n\n\t\t/**\n\t\t * Whether the texture is a storage texture or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.store = false;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isSampledTexture = true;\n\n\t}\n\n}\n\n/**\n * Represents a sampled array texture binding type.\n *\n * @private\n * @augments SampledTexture\n */\nclass SampledArrayTexture extends SampledTexture {\n\n\t/**\n\t * Constructs a new sampled array texture.\n\t *\n\t * @param {string} name - The sampled array texture's name.\n\t * @param {?(DataArrayTexture|CompressedArrayTexture)} texture - The texture this binding is referring to.\n\t */\n\tconstructor( name, texture ) {\n\n\t\tsuper( name, texture );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isSampledArrayTexture = true;\n\n\t}\n\n}\n\n/**\n * Represents a sampled 3D texture binding type.\n *\n * @private\n * @augments SampledTexture\n */\nclass Sampled3DTexture extends SampledTexture {\n\n\t/**\n\t * Constructs a new sampled 3D texture.\n\t *\n\t * @param {string} name - The sampled 3D texture's name.\n\t * @param {?Data3DTexture} texture - The texture this binding is referring to.\n\t */\n\tconstructor( name, texture ) {\n\n\t\tsuper( name, texture );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isSampled3DTexture = true;\n\n\t}\n\n}\n\n/**\n * Represents a sampled cube texture binding type.\n *\n * @private\n * @augments SampledTexture\n */\nclass SampledCubeTexture extends SampledTexture {\n\n\t/**\n\t * Constructs a new sampled cube texture.\n\t *\n\t * @param {string} name - The sampled cube texture's name.\n\t * @param {?(CubeTexture|CompressedCubeTexture)} texture - The texture this binding is referring to.\n\t */\n\tconstructor( name, texture ) {\n\n\t\tsuper( name, texture );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isSampledCubeTexture = true;\n\n\t}\n\n}\n\nexport { SampledTexture, SampledArrayTexture, Sampled3DTexture, SampledCubeTexture };\n"],"mappings":"OAAOA,YAAa,eAEpB,IAAIC,IAAM,EAQV,MAAMC,uBAAuBF,QAQ5B,WAAAG,CAAaC,EAAMC,GAElBC,MAAOF,EAAMC,GAObE,KAAKC,GAAKP,MAQVM,KAAKE,OAAQ,EASbF,KAAKG,kBAAmB,CAEzB,EAUD,MAAMC,4BAA4BT,eAQjC,WAAAC,CAAaC,EAAMC,GAElBC,MAAOF,EAAMC,GASbE,KAAKK,uBAAwB,CAE9B,EAUD,MAAMC,yBAAyBX,eAQ9B,WAAAC,CAAaC,EAAMC,GAElBC,MAAOF,EAAMC,GASbE,KAAKO,oBAAqB,CAE3B,EAUD,MAAMC,2BAA2Bb,eAQhC,WAAAC,CAAaC,EAAMC,GAElBC,MAAOF,EAAMC,GASbE,KAAKS,sBAAuB,CAE7B,SAIQd,eAAgBS,oBAAqBE,iBAAkBE","ignoreList":[]}