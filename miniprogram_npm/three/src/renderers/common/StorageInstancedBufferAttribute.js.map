{"version":3,"file":"node_modules/three/src/renderers/common/StorageInstancedBufferAttribute.js","names":["InstancedBufferAttribute","StorageInstancedBufferAttribute","constructor","count","itemSize","typeClass","Float32Array","super","ArrayBuffer","isView","this","isStorageInstancedBufferAttribute"],"sources":["node_modules/three/src/renderers/common/StorageInstancedBufferAttribute.js"],"sourcesContent":["import { InstancedBufferAttribute } from '../../core/InstancedBufferAttribute.js';\n\n/**\n * This special type of instanced buffer attribute is intended for compute shaders.\n * In earlier three.js versions it was only possible to update attribute data\n * on the CPU via JavaScript and then upload the data to the GPU. With the\n * new material system and renderer it is now possible to use compute shaders\n * to compute the data for an attribute more efficiently on the GPU.\n *\n * The idea is to create an instance of this class and provide it as an input\n * to {@link StorageBufferNode}.\n *\n * Note: This type of buffer attribute can only be used with `WebGPURenderer`.\n *\n * @augments InstancedBufferAttribute\n */\nclass StorageInstancedBufferAttribute extends InstancedBufferAttribute {\n\n\t/**\n\t * Constructs a new storage instanced buffer attribute.\n\t *\n\t * @param {number|TypedArray} count - The item count. It is also valid to pass a typed array as an argument.\n\t * The subsequent parameters are then obsolete.\n\t * @param {number} itemSize - The item size.\n\t * @param {TypedArray.constructor} [typeClass=Float32Array] - A typed array constructor.\n\t */\n\tconstructor( count, itemSize, typeClass = Float32Array ) {\n\n\t\tconst array = ArrayBuffer.isView( count ) ? count : new typeClass( count * itemSize );\n\n\t\tsuper( array, itemSize );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isStorageInstancedBufferAttribute = true;\n\n\t}\n\n}\n\nexport default StorageInstancedBufferAttribute;\n"],"mappings":"OAASA,6BAAgC,yCAgBzC,MAAMC,wCAAwCD,yBAU7C,WAAAE,CAAaC,EAAOC,EAAUC,EAAYC,cAIzCC,MAFcC,YAAYC,OAAQN,GAAUA,EAAQ,IAAIE,EAAWF,EAAQC,GAE7DA,GASdM,KAAKC,mCAAoC,CAE1C,iBAIcV","ignoreList":[]}