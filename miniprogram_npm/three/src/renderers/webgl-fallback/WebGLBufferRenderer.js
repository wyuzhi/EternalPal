class WebGLBufferRenderer{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:n,mode:s,object:r,type:i,info:l,index:d}=this;0!==d?n.drawElements(s,t,i,e):n.drawArrays(s,e,t),l.update(r,t,1)}renderInstances(e,t,n){const{gl:s,mode:r,type:i,index:l,object:d,info:o}=this;0!==n&&(0!==l?s.drawElementsInstanced(r,t,i,e,n):s.drawArraysInstanced(r,e,t,n),o.update(d,t,n))}renderMultiDraw(e,t,n){const{extensions:s,mode:r,object:i,info:l}=this;if(0===n)return;const d=s.get("WEBGL_multi_draw");if(null===d)for(let s=0;s<n;s++)this.render(e[s],t[s]);else{0!==this.index?d.multiDrawElementsWEBGL(r,t,0,this.type,e,0,n):d.multiDrawArraysWEBGL(r,e,0,t,0,n);let s=0;for(let e=0;e<n;e++)s+=t[e];l.update(i,s,1)}}renderMultiDrawInstances(e,t,n,s){const{extensions:r,mode:i,object:l,info:d}=this;if(0===n)return;const o=r.get("WEBGL_multi_draw");if(null===o)for(let r=0;r<n;r++)this.renderInstances(e[r],t[r],s[r]);else{0!==this.index?o.multiDrawElementsInstancedWEBGL(i,t,0,this.type,e,0,s,0,n):o.multiDrawArraysInstancedWEBGL(i,e,0,t,0,s,0,n);let r=0;for(let e=0;e<n;e++)r+=t[e]*s[e];d.update(l,r,1)}}}export{WebGLBufferRenderer};
//# sourceMappingURL=WebGLBufferRenderer.js.map