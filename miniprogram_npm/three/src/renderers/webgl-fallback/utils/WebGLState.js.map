{"version":3,"file":"node_modules/three/src/renderers/webgl-fallback/utils/WebGLState.js","names":["CullFaceNone","CullFaceBack","CullFaceFront","DoubleSide","BackSide","NormalBlending","NoBlending","CustomBlending","AddEquation","AdditiveBlending","SubtractiveBlending","MultiplyBlending","SubtractEquation","ReverseSubtractEquation","ZeroFactor","OneFactor","SrcColorFactor","SrcAlphaFactor","SrcAlphaSaturateFactor","DstColorFactor","DstAlphaFactor","OneMinusSrcColorFactor","OneMinusSrcAlphaFactor","OneMinusDstColorFactor","OneMinusDstAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","Vector4","equationToGL","factorToGL","WebGLState","constructor","backend","this","gl","enabled","currentFlipSided","currentCullFace","currentProgram","currentBlendingEnabled","currentBlending","currentBlendSrc","currentBlendDst","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentColorMask","currentDepthFunc","currentDepthMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilMask","currentLineWidth","currentClippingPlanes","currentVAO","currentIndex","currentBoundFramebuffers","currentDrawbuffers","WeakMap","maxTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","currentTextureSlot","currentBoundTextures","currentBoundBufferBases","_init","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","fromArray","currentViewport","_tempVec4","enable","id","disable","setFlipSided","flipSided","frontFace","CW","CCW","setCullFace","cullFace","CULL_FACE","BACK","FRONT","FRONT_AND_BACK","setLineWidth","width","lineWidth","setBlending","blending","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","BLEND","currentBlendEquation","currentBlendEquationAlpha","blendEquationSeparate","blendFuncSeparate","blendFunc","console","error","setColorMask","colorMask","setDepthTest","depthTest","DEPTH_TEST","setDepthMask","depthMask","setDepthFunc","depthFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","scissor","x","y","height","set","equals","z","w","copy","viewport","setScissorTest","boolean","SCISSOR_TEST","setStencilTest","stencilTest","STENCIL_TEST","setStencilMask","stencilMask","setStencilFunc","stencilFunc","stencilRef","setStencilOp","stencilFail","stencilZFail","stencilZPass","stencilOp","setMaterial","material","frontFaceCW","hardwareClippingPlanes","side","transparent","depthWrite","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","setPolygonOffset","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","alphaToCoverage","renderer","samples","SAMPLE_ALPHA_TO_COVERAGE","CLIP_DISTANCE0_WEBGL","i","factor","units","POLYGON_OFFSET_FILL","useProgram","program","setVertexState","vao","indexBuffer","bindVertexArray","bindBuffer","ELEMENT_ARRAY_BUFFER","resetVertexState","bindFramebuffer","target","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","renderContext","needsUpdate","textures","get","undefined","length","COLOR_ATTACHMENT0","il","activeTexture","webglSlot","TEXTURE0","bindTexture","webglType","webglTexture","boundTexture","type","texture","bindBufferBase","index","buffer","key","unbindTexture"],"sources":["node_modules/three/src/renderers/webgl-fallback/utils/WebGLState.js"],"sourcesContent":["import {\n\tCullFaceNone, CullFaceBack, CullFaceFront, DoubleSide, BackSide,\n\tNormalBlending, NoBlending, CustomBlending, AddEquation,\n\tAdditiveBlending, SubtractiveBlending, MultiplyBlending, SubtractEquation, ReverseSubtractEquation,\n\tZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor,\n\tOneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor,\n\tNeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth\n} from '../../../constants.js';\nimport { Vector4 } from '../../../math/Vector4.js';\n\nlet equationToGL, factorToGL;\n\n/**\n * A WebGL 2 backend utility module for managing the WebGL state.\n *\n * The major goal of this module is to reduce the number of state changes\n * by caching the WEbGL state with a series of variables. In this way, the\n * renderer only executes state change commands when necessary which\n * improves the overall performance.\n *\n * @private\n */\nclass WebGLState {\n\n\t/**\n\t * Constructs a new utility object.\n\t *\n\t * @param {WebGLBackend} backend - The WebGL 2 backend.\n\t */\n\tconstructor( backend ) {\n\n\t\t/**\n\t\t * A reference to the WebGL 2 backend.\n\t\t *\n\t\t * @type {WebGLBackend}\n\t\t */\n\t\tthis.backend = backend;\n\n\t\t/**\n\t\t * A reference to the rendering context.\n\t\t *\n\t\t * @type {WebGL2RenderingContext}\n\t\t */\n\t\tthis.gl = this.backend.gl;\n\n\t\t// Below properties are intended to cache\n\t\t// the WebGL state and are not explicitly\n\t\t// documented for convenience reasons.\n\n\t\tthis.enabled = {};\n\t\tthis.currentFlipSided = null;\n\t\tthis.currentCullFace = null;\n\t\tthis.currentProgram = null;\n\t\tthis.currentBlendingEnabled = false;\n\t\tthis.currentBlending = null;\n\t\tthis.currentBlendSrc = null;\n\t\tthis.currentBlendDst = null;\n\t\tthis.currentBlendSrcAlpha = null;\n\t\tthis.currentBlendDstAlpha = null;\n\t\tthis.currentPremultipledAlpha = null;\n\t\tthis.currentPolygonOffsetFactor = null;\n\t\tthis.currentPolygonOffsetUnits = null;\n\t\tthis.currentColorMask = null;\n\t\tthis.currentDepthFunc = null;\n\t\tthis.currentDepthMask = null;\n\t\tthis.currentStencilFunc = null;\n\t\tthis.currentStencilRef = null;\n\t\tthis.currentStencilFuncMask = null;\n\t\tthis.currentStencilFail = null;\n\t\tthis.currentStencilZFail = null;\n\t\tthis.currentStencilZPass = null;\n\t\tthis.currentStencilMask = null;\n\t\tthis.currentLineWidth = null;\n\t\tthis.currentClippingPlanes = 0;\n\n\t\tthis.currentVAO = null;\n\t\tthis.currentIndex = null;\n\n\t\tthis.currentBoundFramebuffers = {};\n\t\tthis.currentDrawbuffers = new WeakMap();\n\n\t\tthis.maxTextures = this.gl.getParameter( this.gl.MAX_TEXTURE_IMAGE_UNITS );\n\t\tthis.currentTextureSlot = null;\n\t\tthis.currentBoundTextures = {};\n\t\tthis.currentBoundBufferBases = {};\n\n\n\t\tthis._init();\n\n\t}\n\n\t/**\n\t * Inits the state of the utility.\n\t *\n\t * @private\n\t */\n\t_init() {\n\n\t\tconst gl = this.gl;\n\n\t\t// Store only WebGL constants here.\n\n\t\tequationToGL = {\n\t\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t\t};\n\n\t\tfactorToGL = {\n\t\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t\t[ OneFactor ]: gl.ONE,\n\t\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t\t};\n\n\t\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\t\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\t\tthis.currentScissor = new Vector4().fromArray( scissorParam );\n\t\tthis.currentViewport = new Vector4().fromArray( viewportParam );\n\n\t\tthis._tempVec4 = new Vector4();\n\n\t}\n\n\t/**\n\t * Enables the given WebGL capability.\n\t *\n\t * This method caches the capability state so\n\t * `gl.enable()` is only called when necessary.\n\t *\n\t * @param {GLenum} id - The capability to enable.\n\t */\n\tenable( id ) {\n\n\t\tconst { enabled } = this;\n\n\t\tif ( enabled[ id ] !== true ) {\n\n\t\t\tthis.gl.enable( id );\n\t\t\tenabled[ id ] = true;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disables the given WebGL capability.\n\t *\n\t * This method caches the capability state so\n\t * `gl.disable()` is only called when necessary.\n\t *\n\t * @param {GLenum} id - The capability to enable.\n\t */\n\tdisable( id ) {\n\n\t\tconst { enabled } = this;\n\n\t\tif ( enabled[ id ] !== false ) {\n\n\t\t\tthis.gl.disable( id );\n\t\t\tenabled[ id ] = false;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies whether polygons are front- or back-facing\n\t * by setting the winding orientation.\n\t *\n\t * This method caches the state so `gl.frontFace()` is only\n\t * called when necessary.\n\t *\n\t * @param {boolean} flipSided - Whether triangles flipped their sides or not.\n\t */\n\tsetFlipSided( flipSided ) {\n\n\t\tif ( this.currentFlipSided !== flipSided ) {\n\n\t\t\tconst { gl } = this;\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tthis.currentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies whether or not front- and/or back-facing\n\t * polygons can be culled.\n\t *\n\t * This method caches the state so `gl.cullFace()` is only\n\t * called when necessary.\n\t *\n\t * @param {number} cullFace - Defines which polygons are candidates for culling.\n\t */\n\tsetCullFace( cullFace ) {\n\n\t\tconst { gl } = this;\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tthis.enable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== this.currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.disable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tthis.currentCullFace = cullFace;\n\n\t}\n\n\t/**\n\t * Specifies the width of line primitives.\n\t *\n\t * This method caches the state so `gl.lineWidth()` is only\n\t * called when necessary.\n\t *\n\t * @param {number} width - The line width.\n\t */\n\tsetLineWidth( width ) {\n\n\t\tconst { currentLineWidth, gl } = this;\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tgl.lineWidth( width );\n\n\t\t\tthis.currentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Defines the blending.\n\t *\n\t * This method caches the state so `gl.blendEquation()`, `gl.blendEquationSeparate()`,\n\t * `gl.blendFunc()` and  `gl.blendFuncSeparate()` are only called when necessary.\n\t *\n\t * @param {number} blending - The blending type.\n\t * @param {number} blendEquation - The blending equation.\n\t * @param {number} blendSrc - Only relevant for custom blending. The RGB source blending factor.\n\t * @param {number} blendDst - Only relevant for custom blending. The RGB destination blending factor.\n\t * @param {number} blendEquationAlpha - Only relevant for custom blending. The blending equation for alpha.\n\t * @param {number} blendSrcAlpha - Only relevant for custom blending. The alpha source blending factor.\n\t * @param {number} blendDstAlpha - Only relevant for custom blending. The alpha destination blending factor.\n\t * @param {boolean} premultipliedAlpha - Whether premultiplied alpha is enabled or not.\n\t */\n\tsetBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tconst { gl } = this;\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( this.currentBlendingEnabled === true ) {\n\n\t\t\t\tthis.disable( gl.BLEND );\n\t\t\t\tthis.currentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.currentBlendingEnabled === false ) {\n\n\t\t\tthis.enable( gl.BLEND );\n\t\t\tthis.currentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== this.currentBlending || premultipliedAlpha !== this.currentPremultipledAlpha ) {\n\n\t\t\t\tif ( this.currentBlendEquation !== AddEquation || this.currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tthis.currentBlendEquation = AddEquation;\n\t\t\t\t\tthis.currentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.currentBlendSrc = null;\n\t\t\t\tthis.currentBlendDst = null;\n\t\t\t\tthis.currentBlendSrcAlpha = null;\n\t\t\t\tthis.currentBlendDstAlpha = null;\n\n\t\t\t\tthis.currentBlending = blending;\n\t\t\t\tthis.currentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== this.currentBlendEquation || blendEquationAlpha !== this.currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tthis.currentBlendEquation = blendEquation;\n\t\t\tthis.currentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== this.currentBlendSrc || blendDst !== this.currentBlendDst || blendSrcAlpha !== this.currentBlendSrcAlpha || blendDstAlpha !== this.currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tthis.currentBlendSrc = blendSrc;\n\t\t\tthis.currentBlendDst = blendDst;\n\t\t\tthis.currentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tthis.currentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tthis.currentBlending = blending;\n\t\tthis.currentPremultipledAlpha = false;\n\n\t}\n\n\t/**\n\t * Specifies whether colors can be written when rendering\n\t * into a framebuffer or not.\n\t *\n\t * This method caches the state so `gl.colorMask()` is only\n\t * called when necessary.\n\t *\n\t * @param {boolean} colorMask - The color mask.\n\t */\n\tsetColorMask( colorMask ) {\n\n\t\tif ( this.currentColorMask !== colorMask ) {\n\n\t\t\tthis.gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\tthis.currentColorMask = colorMask;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies whether the depth test is enabled or not.\n\t *\n\t * @param {boolean} depthTest - Whether the depth test is enabled or not.\n\t */\n\tsetDepthTest( depthTest ) {\n\n\t\tconst { gl } = this;\n\n\t\tif ( depthTest ) {\n\n\t\t\tthis.enable( gl.DEPTH_TEST );\n\n\t\t} else {\n\n\t\t\tthis.disable( gl.DEPTH_TEST );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies whether depth values can be written when rendering\n\t * into a framebuffer or not.\n\t *\n\t * This method caches the state so `gl.depthMask()` is only\n\t * called when necessary.\n\t *\n\t * @param {boolean} depthMask - The depth mask.\n\t */\n\tsetDepthMask( depthMask ) {\n\n\t\tif ( this.currentDepthMask !== depthMask ) {\n\n\t\t\tthis.gl.depthMask( depthMask );\n\t\t\tthis.currentDepthMask = depthMask;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies the depth compare function.\n\t *\n\t * This method caches the state so `gl.depthFunc()` is only\n\t * called when necessary.\n\t *\n\t * @param {number} depthFunc - The depth compare function.\n\t */\n\tsetDepthFunc( depthFunc ) {\n\n\t\tif ( this.currentDepthFunc !== depthFunc ) {\n\n\t\t\tconst { gl } = this;\n\n\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LessDepth:\n\n\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t}\n\n\t\t\tthis.currentDepthFunc = depthFunc;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies the scissor box.\n\t *\n\t * @param {number} x - The x-coordinate of the lower left corner of the viewport.\n\t * @param {number} y - The y-coordinate of the lower left corner of the viewport.\n\t * @param {number} width - The width of the viewport.\n\t * @param {number} height - The height of the viewport.\n\t *\n\t */\n\tscissor( x, y, width, height ) {\n\n\t\tconst scissor = this._tempVec4.set( x, y, width, height );\n\n\t\tif ( this.currentScissor.equals( scissor ) === false ) {\n\n\t\t\tconst { gl } = this;\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tthis.currentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies the viewport.\n\t *\n\t * @param {number} x - The x-coordinate of the lower left corner of the viewport.\n\t * @param {number} y - The y-coordinate of the lower left corner of the viewport.\n\t * @param {number} width - The width of the viewport.\n\t * @param {number} height - The height of the viewport.\n\t *\n\t */\n\tviewport( x, y, width, height ) {\n\n\t\tconst viewport = this._tempVec4.set( x, y, width, height );\n\n\t\tif ( this.currentViewport.equals( viewport ) === false ) {\n\n\t\t\tconst { gl } = this;\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tthis.currentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Defines the scissor test.\n\t *\n\t * @param {boolean} boolean - Whether the scissor test should be enabled or not.\n\t */\n\tsetScissorTest( boolean ) {\n\n\t\tconst gl = this.gl;\n\n\t\tif ( boolean ) {\n\n\t\t\tgl.enable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tgl.disable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies whether the stencil test is enabled or not.\n\t *\n\t * @param {boolean} stencilTest - Whether the stencil test is enabled or not.\n\t */\n\tsetStencilTest( stencilTest ) {\n\n\t\tconst { gl } = this;\n\n\t\tif ( stencilTest ) {\n\n\t\t\tthis.enable( gl.STENCIL_TEST );\n\n\t\t} else {\n\n\t\t\tthis.disable( gl.STENCIL_TEST );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies whether stencil values can be written when rendering\n\t * into a framebuffer or not.\n\t *\n\t * This method caches the state so `gl.stencilMask()` is only\n\t * called when necessary.\n\t *\n\t * @param {boolean} stencilMask - The stencil mask.\n\t */\n\tsetStencilMask( stencilMask ) {\n\n\t\tif ( this.currentStencilMask !== stencilMask ) {\n\n\t\t\tthis.gl.stencilMask( stencilMask );\n\t\t\tthis.currentStencilMask = stencilMask;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies whether the stencil test functions.\n\t *\n\t * This method caches the state so `gl.stencilFunc()` is only\n\t * called when necessary.\n\t *\n\t * @param {number} stencilFunc - The stencil compare function.\n\t * @param {number} stencilRef - The reference value for the stencil test.\n\t * @param {number} stencilMask - A bit-wise mask that is used to AND the reference value and the stored stencil value when the test is done.\n\t */\n\tsetStencilFunc( stencilFunc, stencilRef, stencilMask ) {\n\n\t\tif ( this.currentStencilFunc !== stencilFunc ||\n\t\t\t this.currentStencilRef !== stencilRef ||\n\t\t\t this.currentStencilFuncMask !== stencilMask ) {\n\n\t\t\tthis.gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\tthis.currentStencilFunc = stencilFunc;\n\t\t\tthis.currentStencilRef = stencilRef;\n\t\t\tthis.currentStencilFuncMask = stencilMask;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies whether the stencil test operation.\n\t *\n\t * This method caches the state so `gl.stencilOp()` is only\n\t * called when necessary.\n\t *\n\t * @param {number} stencilFail - The function to use when the stencil test fails.\n\t * @param {number} stencilZFail - The function to use when the stencil test passes, but the depth test fail.\n\t * @param {number} stencilZPass - The function to use when both the stencil test and the depth test pass,\n\t * or when the stencil test passes and there is no depth buffer or depth testing is disabled.\n\t */\n\tsetStencilOp( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\tif ( this.currentStencilFail !== stencilFail ||\n\t\t\t this.currentStencilZFail !== stencilZFail ||\n\t\t\t this.currentStencilZPass !== stencilZPass ) {\n\n\t\t\tthis.gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\tthis.currentStencilFail = stencilFail;\n\t\t\tthis.currentStencilZFail = stencilZFail;\n\t\t\tthis.currentStencilZPass = stencilZPass;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Configures the WebGL state for the given material.\n\t *\n\t * @param {Material} material - The material to configure the state for.\n\t * @param {number} frontFaceCW - Whether the front faces are counter-clockwise or not.\n\t * @param {number} hardwareClippingPlanes - The number of hardware clipping planes.\n\t */\n\tsetMaterial( material, frontFaceCW, hardwareClippingPlanes ) {\n\n\t\tconst { gl } = this;\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? this.disable( gl.CULL_FACE )\n\t\t\t: this.enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tthis.setFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? this.setBlending( NoBlending )\n\t\t\t: this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tthis.setDepthFunc( material.depthFunc );\n\t\tthis.setDepthTest( material.depthTest );\n\t\tthis.setDepthMask( material.depthWrite );\n\t\tthis.setColorMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tthis.setStencilTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tthis.setStencilMask( material.stencilWriteMask );\n\t\t\tthis.setStencilFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tthis.setStencilOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tthis.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true && this.backend.renderer.samples > 1\n\t\t\t? this.enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: this.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tif ( hardwareClippingPlanes > 0 ) {\n\n\t\t\tif ( this.currentClippingPlanes !== hardwareClippingPlanes ) {\n\n\t\t\t\tconst CLIP_DISTANCE0_WEBGL = 0x3000;\n\n\t\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\t\tif ( i < hardwareClippingPlanes ) {\n\n\t\t\t\t\t\tthis.enable( CLIP_DISTANCE0_WEBGL + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.disable( CLIP_DISTANCE0_WEBGL + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specifies the polygon offset.\n\t *\n\t * This method caches the state so `gl.polygonOffset()` is only\n\t * called when necessary.\n\t *\n\t * @param {boolean} polygonOffset - Whether polygon offset is enabled or not.\n\t * @param {number} factor - The scale factor for the variable depth offset for each polygon.\n\t * @param {number} units - The multiplier by which an implementation-specific value is multiplied with to create a constant depth offset.\n\t */\n\tsetPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tconst { gl } = this;\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( this.currentPolygonOffsetFactor !== factor || this.currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tthis.currentPolygonOffsetFactor = factor;\n\t\t\t\tthis.currentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Defines the usage of the given WebGL program.\n\t *\n\t * This method caches the state so `gl.useProgram()` is only\n\t * called when necessary.\n\t *\n\t * @param {WebGLProgram} program - The WebGL program to use.\n\t * @return {boolean} Whether a program change has been executed or not.\n\t */\n\tuseProgram( program ) {\n\n\t\tif ( this.currentProgram !== program ) {\n\n\t\t\tthis.gl.useProgram( program );\n\n\t\t\tthis.currentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Sets the vertex state by binding the given VAO and element buffer.\n\t *\n\t * @param {WebGLVertexArrayObject} vao - The VAO.\n\t * @param {WebGLBuffer} indexBuffer - The index buffer.\n\t * @return {boolean} Whether a vertex state has been changed or not.\n\t */\n\tsetVertexState( vao, indexBuffer = null ) {\n\n\t\tconst gl = this.gl;\n\n\t\tif ( this.currentVAO !== vao || this.currentIndex !== indexBuffer ) {\n\n\t\t\tgl.bindVertexArray( vao );\n\n\t\t\tif ( indexBuffer !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, indexBuffer );\n\n\t\t\t}\n\n\t\t\tthis.currentVAO = vao;\n\t\t\tthis.currentIndex = indexBuffer;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Resets the vertex array state by resetting the VAO and element buffer.\n\t */\n\tresetVertexState() {\n\n\t\tconst gl = this.gl;\n\n\t\tgl.bindVertexArray( null );\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, null );\n\n\t\tthis.currentVAO = null;\n\t\tthis.currentIndex = null;\n\n\t}\n\n\t// framebuffer\n\n\n\t/**\n\t * Binds the given framebuffer.\n\t *\n\t * This method caches the state so `gl.bindFramebuffer()` is only\n\t * called when necessary.\n\t *\n\t * @param {number} target - The binding point (target).\n\t * @param {WebGLFramebuffer} framebuffer - The WebGL framebuffer to bind.\n\t * @return {boolean} Whether a bind has been executed or not.\n\t */\n\tbindFramebuffer( target, framebuffer ) {\n\n\t\tconst { gl, currentBoundFramebuffers } = this;\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Defines draw buffers to which fragment colors are written into.\n\t * Configures the MRT setup of custom framebuffers.\n\t *\n\t * This method caches the state so `gl.drawBuffers()` is only\n\t * called when necessary.\n\t *\n\t * @param {RenderContext} renderContext - The render context.\n\t * @param {WebGLFramebuffer} framebuffer - The WebGL framebuffer.\n\t */\n\tdrawBuffers( renderContext, framebuffer ) {\n\n\t\tconst { gl } = this;\n\n\t\tlet drawBuffers = [];\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderContext.textures !== null ) {\n\n\t\t\tdrawBuffers = this.currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tthis.currentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\n\t\t\tconst textures = renderContext.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\n\t// texture\n\n\t/**\n\t * Makes the given texture unit active.\n\t *\n\t * This method caches the state so `gl.activeTexture()` is only\n\t * called when necessary.\n\t *\n\t * @param {number} webglSlot - The texture unit to make active.\n\t */\n\tactiveTexture( webglSlot ) {\n\n\t\tconst { gl, currentTextureSlot, maxTextures } = this;\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tthis.currentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Binds the given WebGL texture to a target.\n\t *\n\t * This method caches the state so `gl.bindTexture()` is only\n\t * called when necessary.\n\t *\n\t * @param {number} webglType - The binding point (target).\n\t * @param {WebGLTexture} webglTexture - The WebGL texture to bind.\n\t * @param {number} webglSlot - The texture.\n\t */\n\tbindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tconst { gl, currentTextureSlot, currentBoundTextures, maxTextures } = this;\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tthis.currentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Binds a given WebGL buffer to a given binding point (target) at a given index.\n\t *\n\t * This method caches the state so `gl.bindBufferBase()` is only\n\t * called when necessary.\n\t *\n\t * @param {number} target - The target for the bind operation.\n\t * @param {number} index - The index of the target.\n\t * @param {WebGLBuffer} buffer - The WebGL buffer.\n\t * @return {boolean} Whether a bind has been executed or not.\n\t */\n\tbindBufferBase( target, index, buffer ) {\n\n\t\tconst { gl } = this;\n\n\t\tconst key = `${target}-${index}`;\n\n\t\tif ( this.currentBoundBufferBases[ key ] !== buffer ) {\n\n\t\t\tgl.bindBufferBase( target, index, buffer );\n\t\t\tthis.currentBoundBufferBases[ key ] = buffer;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\n\t/**\n\t * Unbinds the current bound texture.\n\t *\n\t * This method caches the state so `gl.bindTexture()` is only\n\t * called when necessary.\n\t */\n\tunbindTexture() {\n\n\t\tconst { gl, currentTextureSlot, currentBoundTextures } = this;\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n}\n\nexport default WebGLState;\n"],"mappings":"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","ignoreList":[]}