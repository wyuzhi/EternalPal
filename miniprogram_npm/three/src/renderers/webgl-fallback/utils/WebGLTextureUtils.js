import{LinearFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,NearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,FloatType,MirroredRepeatWrapping,ClampToEdgeWrapping,RepeatWrapping,NeverCompare,AlwaysCompare,LessCompare,LessEqualCompare,EqualCompare,GreaterEqualCompare,GreaterCompare,NotEqualCompare,NoColorSpace,LinearTransfer,SRGBTransfer}from"../../../constants.js";import{ColorManagement}from"../../../math/ColorManagement.js";let wrappingToGL,filterToGL,compareToGL,initialized=!1;class WebGLTextureUtils{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},!1===initialized&&(this._init(),initialized=!0)}_init(){const e=this.gl;wrappingToGL={[RepeatWrapping]:e.REPEAT,[ClampToEdgeWrapping]:e.CLAMP_TO_EDGE,[MirroredRepeatWrapping]:e.MIRRORED_REPEAT},filterToGL={[NearestFilter]:e.NEAREST,[NearestMipmapNearestFilter]:e.NEAREST_MIPMAP_NEAREST,[NearestMipmapLinearFilter]:e.NEAREST_MIPMAP_LINEAR,[LinearFilter]:e.LINEAR,[LinearMipmapNearestFilter]:e.LINEAR_MIPMAP_NEAREST,[LinearMipmapLinearFilter]:e.LINEAR_MIPMAP_LINEAR},compareToGL={[NeverCompare]:e.NEVER,[AlwaysCompare]:e.ALWAYS,[LessCompare]:e.LESS,[LessEqualCompare]:e.LEQUAL,[EqualCompare]:e.EQUAL,[GreaterEqualCompare]:e.GEQUAL,[GreaterCompare]:e.GREATER,[NotEqualCompare]:e.NOTEQUAL}}getGLTextureType(e){const{gl:r}=this;let t;return t=!0===e.isCubeTexture?r.TEXTURE_CUBE_MAP:!0===e.isArrayTexture||!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:!0===e.isData3DTexture?r.TEXTURE_3D:r.TEXTURE_2D,t}getInternalFormat(e,r,t,a,i=!1){const{gl:T,extensions:E}=this;if(null!==e){if(void 0!==T[e])return T[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let n=r;if(r===T.RED&&(t===T.FLOAT&&(n=T.R32F),t===T.HALF_FLOAT&&(n=T.R16F),t===T.UNSIGNED_BYTE&&(n=T.R8),t===T.UNSIGNED_SHORT&&(n=T.R16),t===T.UNSIGNED_INT&&(n=T.R32UI),t===T.BYTE&&(n=T.R8I),t===T.SHORT&&(n=T.R16I),t===T.INT&&(n=T.R32I)),r===T.RED_INTEGER&&(t===T.UNSIGNED_BYTE&&(n=T.R8UI),t===T.UNSIGNED_SHORT&&(n=T.R16UI),t===T.UNSIGNED_INT&&(n=T.R32UI),t===T.BYTE&&(n=T.R8I),t===T.SHORT&&(n=T.R16I),t===T.INT&&(n=T.R32I)),r===T.RG&&(t===T.FLOAT&&(n=T.RG32F),t===T.HALF_FLOAT&&(n=T.RG16F),t===T.UNSIGNED_BYTE&&(n=T.RG8),t===T.UNSIGNED_SHORT&&(n=T.RG16),t===T.UNSIGNED_INT&&(n=T.RG32UI),t===T.BYTE&&(n=T.RG8I),t===T.SHORT&&(n=T.RG16I),t===T.INT&&(n=T.RG32I)),r===T.RG_INTEGER&&(t===T.UNSIGNED_BYTE&&(n=T.RG8UI),t===T.UNSIGNED_SHORT&&(n=T.RG16UI),t===T.UNSIGNED_INT&&(n=T.RG32UI),t===T.BYTE&&(n=T.RG8I),t===T.SHORT&&(n=T.RG16I),t===T.INT&&(n=T.RG32I)),r===T.RGB){const e=i?LinearTransfer:ColorManagement.getTransfer(a);t===T.FLOAT&&(n=T.RGB32F),t===T.HALF_FLOAT&&(n=T.RGB16F),t===T.UNSIGNED_BYTE&&(n=T.RGB8),t===T.UNSIGNED_SHORT&&(n=T.RGB16),t===T.UNSIGNED_INT&&(n=T.RGB32UI),t===T.BYTE&&(n=T.RGB8I),t===T.SHORT&&(n=T.RGB16I),t===T.INT&&(n=T.RGB32I),t===T.UNSIGNED_BYTE&&(n=e===SRGBTransfer?T.SRGB8:T.RGB8),t===T.UNSIGNED_SHORT_5_6_5&&(n=T.RGB565),t===T.UNSIGNED_SHORT_5_5_5_1&&(n=T.RGB5_A1),t===T.UNSIGNED_SHORT_4_4_4_4&&(n=T.RGB4),t===T.UNSIGNED_INT_5_9_9_9_REV&&(n=T.RGB9_E5)}if(r===T.RGB_INTEGER&&(t===T.UNSIGNED_BYTE&&(n=T.RGB8UI),t===T.UNSIGNED_SHORT&&(n=T.RGB16UI),t===T.UNSIGNED_INT&&(n=T.RGB32UI),t===T.BYTE&&(n=T.RGB8I),t===T.SHORT&&(n=T.RGB16I),t===T.INT&&(n=T.RGB32I)),r===T.RGBA){const e=i?LinearTransfer:ColorManagement.getTransfer(a);t===T.FLOAT&&(n=T.RGBA32F),t===T.HALF_FLOAT&&(n=T.RGBA16F),t===T.UNSIGNED_BYTE&&(n=T.RGBA8),t===T.UNSIGNED_SHORT&&(n=T.RGBA16),t===T.UNSIGNED_INT&&(n=T.RGBA32UI),t===T.BYTE&&(n=T.RGBA8I),t===T.SHORT&&(n=T.RGBA16I),t===T.INT&&(n=T.RGBA32I),t===T.UNSIGNED_BYTE&&(n=e===SRGBTransfer?T.SRGB8_ALPHA8:T.RGBA8),t===T.UNSIGNED_SHORT_4_4_4_4&&(n=T.RGBA4),t===T.UNSIGNED_SHORT_5_5_5_1&&(n=T.RGB5_A1)}return r===T.RGBA_INTEGER&&(t===T.UNSIGNED_BYTE&&(n=T.RGBA8UI),t===T.UNSIGNED_SHORT&&(n=T.RGBA16UI),t===T.UNSIGNED_INT&&(n=T.RGBA32UI),t===T.BYTE&&(n=T.RGBA8I),t===T.SHORT&&(n=T.RGBA16I),t===T.INT&&(n=T.RGBA32I)),r===T.DEPTH_COMPONENT&&(t===T.UNSIGNED_SHORT&&(n=T.DEPTH_COMPONENT16),t===T.UNSIGNED_INT&&(n=T.DEPTH_COMPONENT24),t===T.FLOAT&&(n=T.DEPTH_COMPONENT32F)),r===T.DEPTH_STENCIL&&t===T.UNSIGNED_INT_24_8&&(n=T.DEPTH24_STENCIL8),n!==T.R16F&&n!==T.R32F&&n!==T.RG16F&&n!==T.RG32F&&n!==T.RGBA16F&&n!==T.RGBA32F||E.get("EXT_color_buffer_float"),n}setTextureParameters(e,r){const{gl:t,extensions:a,backend:i}=this,T=ColorManagement.getPrimaries(ColorManagement.workingColorSpace),E=r.colorSpace===NoColorSpace?null:ColorManagement.getPrimaries(r.colorSpace),n=r.colorSpace===NoColorSpace||T===E?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,r.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,r.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,n),t.texParameteri(e,t.TEXTURE_WRAP_S,wrappingToGL[r.wrapS]),t.texParameteri(e,t.TEXTURE_WRAP_T,wrappingToGL[r.wrapT]),e!==t.TEXTURE_3D&&e!==t.TEXTURE_2D_ARRAY||r.isArrayTexture||t.texParameteri(e,t.TEXTURE_WRAP_R,wrappingToGL[r.wrapR]),t.texParameteri(e,t.TEXTURE_MAG_FILTER,filterToGL[r.magFilter]);const R=void 0!==r.mipmaps&&r.mipmaps.length>0,s=r.minFilter===LinearFilter&&R?LinearMipmapLinearFilter:r.minFilter;if(t.texParameteri(e,t.TEXTURE_MIN_FILTER,filterToGL[s]),r.compareFunction&&(t.texParameteri(e,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(e,t.TEXTURE_COMPARE_FUNC,compareToGL[r.compareFunction])),!0===a.has("EXT_texture_filter_anisotropic")){if(r.magFilter===NearestFilter)return;if(r.minFilter!==NearestMipmapLinearFilter&&r.minFilter!==LinearMipmapLinearFilter)return;if(r.type===FloatType&&!1===a.has("OES_texture_float_linear"))return;if(r.anisotropy>1){const T=a.get("EXT_texture_filter_anisotropic");t.texParameterf(e,T.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,i.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:r,backend:t,defaultTextures:a}=this,i=this.getGLTextureType(e);let T=a[i];void 0===T&&(T=r.createTexture(),t.state.bindTexture(i,T),r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST),a[i]=T),t.set(e,{textureGPU:T,glTextureType:i,isDefault:!0})}createTexture(e,r){const{gl:t,backend:a}=this,{levels:i,width:T,height:E,depth:n}=r,R=a.utils.convert(e.format,e.colorSpace),s=a.utils.convert(e.type),_=this.getInternalFormat(e.internalFormat,R,s,e.colorSpace,e.isVideoTexture),u=t.createTexture(),o=this.getGLTextureType(e);a.state.bindTexture(o,u),this.setTextureParameters(o,e),e.isArrayTexture||e.isDataArrayTexture||e.isCompressedArrayTexture?t.texStorage3D(t.TEXTURE_2D_ARRAY,i,_,T,E,n):e.isData3DTexture?t.texStorage3D(t.TEXTURE_3D,i,_,T,E,n):e.isVideoTexture||t.texStorage2D(o,i,_,T,E),a.set(e,{textureGPU:u,glTextureType:o,glFormat:R,glType:s,glInternalFormat:_})}copyBufferToTexture(e,r){const{gl:t,backend:a}=this,{textureGPU:i,glTextureType:T,glFormat:E,glType:n}=a.get(r),{width:R,height:s}=r.source.data;t.bindBuffer(t.PIXEL_UNPACK_BUFFER,e),a.state.bindTexture(T,i),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),t.texSubImage2D(T,0,0,0,R,s,E,n,0),t.bindBuffer(t.PIXEL_UNPACK_BUFFER,null),a.state.unbindTexture()}updateTexture(e,r){const{gl:t}=this,{width:a,height:i}=r,{textureGPU:T,glTextureType:E,glFormat:n,glType:R,glInternalFormat:s}=this.backend.get(e);if(!e.isRenderTargetTexture&&void 0!==T)if(this.backend.state.bindTexture(E,T),this.setTextureParameters(E,e),e.isCompressedTexture){const a=e.mipmaps,i=r.image;for(let r=0;r<a.length;r++){const T=a[r];e.isCompressedArrayTexture?e.format!==t.RGBA?null!==n?t.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,r,0,0,0,T.width,T.height,i.depth,n,T.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):t.texSubImage3D(t.TEXTURE_2D_ARRAY,r,0,0,0,T.width,T.height,i.depth,n,R,T.data):null!==n?t.compressedTexSubImage2D(t.TEXTURE_2D,r,0,0,T.width,T.height,n,T.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const e=r.images;for(let r=0;r<6;r++){const T=getImage(e[r]);t.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,0,0,a,i,n,R,T)}}else if(e.isDataArrayTexture||e.isArrayTexture){const e=r.image;t.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,n,R,e.data)}else if(e.isData3DTexture){const e=r.image;t.texSubImage3D(t.TEXTURE_3D,0,0,0,0,e.width,e.height,e.depth,n,R,e.data)}else if(e.isVideoTexture)e.update(),t.texImage2D(E,0,s,n,R,r.image);else{const e=getImage(r.image);t.texSubImage2D(E,0,0,0,a,i,n,R,e)}}generateMipmaps(e){const{gl:r,backend:t}=this,{textureGPU:a,glTextureType:i}=t.get(e);t.state.bindTexture(i,a),r.generateMipmap(i)}deallocateRenderBuffers(e){const{gl:r,backend:t}=this;if(e){const a=t.get(e);if(a.renderBufferStorageSetup=void 0,a.framebuffers){for(const e in a.framebuffers)r.deleteFramebuffer(a.framebuffers[e]);delete a.framebuffers}if(a.depthRenderbuffer&&(r.deleteRenderbuffer(a.depthRenderbuffer),delete a.depthRenderbuffer),a.stencilRenderbuffer&&(r.deleteRenderbuffer(a.stencilRenderbuffer),delete a.stencilRenderbuffer),a.msaaFrameBuffer&&(r.deleteFramebuffer(a.msaaFrameBuffer),delete a.msaaFrameBuffer),a.msaaRenderbuffers){for(let e=0;e<a.msaaRenderbuffers.length;e++)r.deleteRenderbuffer(a.msaaRenderbuffers[e]);delete a.msaaRenderbuffers}}}destroyTexture(e){const{gl:r,backend:t}=this,{textureGPU:a,renderTarget:i}=t.get(e);this.deallocateRenderBuffers(i),r.deleteTexture(a),t.delete(e)}copyTextureToTexture(e,r,t=null,a=null,i=0,T=0){const{gl:E,backend:n}=this,{state:R}=this.backend,{textureGPU:s,glTextureType:_,glType:u,glFormat:o}=n.get(r);let l,f,N,p,A,m,I,d,F;R.bindTexture(_,s);const U=e.isCompressedTexture?e.mipmaps[T]:e.image;if(null!==t)l=t.max.x-t.min.x,f=t.max.y-t.min.y,N=t.isBox3?t.max.z-t.min.z:1,p=t.min.x,A=t.min.y,m=t.isBox3?t.min.z:0;else{const r=Math.pow(2,-i);l=Math.floor(U.width*r),f=Math.floor(U.height*r),N=e.isDataArrayTexture||e.isArrayTexture?U.depth:e.isData3DTexture?Math.floor(U.depth*r):1,p=0,A=0,m=0}null!==a?(I=a.x,d=a.y,F=a.z):(I=0,d=0,F=0),E.pixelStorei(E.UNPACK_FLIP_Y_WEBGL,r.flipY),E.pixelStorei(E.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),E.pixelStorei(E.UNPACK_ALIGNMENT,r.unpackAlignment);const S=E.getParameter(E.UNPACK_ROW_LENGTH),G=E.getParameter(E.UNPACK_IMAGE_HEIGHT),g=E.getParameter(E.UNPACK_SKIP_PIXELS),x=E.getParameter(E.UNPACK_SKIP_ROWS),D=E.getParameter(E.UNPACK_SKIP_IMAGES);E.pixelStorei(E.UNPACK_ROW_LENGTH,U.width),E.pixelStorei(E.UNPACK_IMAGE_HEIGHT,U.height),E.pixelStorei(E.UNPACK_SKIP_PIXELS,p),E.pixelStorei(E.UNPACK_SKIP_ROWS,A),E.pixelStorei(E.UNPACK_SKIP_IMAGES,m);const B=r.isDataArrayTexture||r.isData3DTexture||r.isArrayTexture;if(e.isRenderTargetTexture||e.isDepthTexture){const t=n.get(e),a=n.get(r),i=n.get(t.renderTarget),T=n.get(a.renderTarget),s=i.framebuffers[t.cacheKey],_=T.framebuffers[a.cacheKey];R.bindFramebuffer(E.READ_FRAMEBUFFER,s),R.bindFramebuffer(E.DRAW_FRAMEBUFFER,_);let u=E.COLOR_BUFFER_BIT;e.isDepthTexture&&(u=E.DEPTH_BUFFER_BIT),E.blitFramebuffer(p,A,l,f,I,d,l,f,u,E.NEAREST),R.bindFramebuffer(E.READ_FRAMEBUFFER,null),R.bindFramebuffer(E.DRAW_FRAMEBUFFER,null)}else B?e.isDataTexture||e.isData3DTexture?E.texSubImage3D(_,T,I,d,F,l,f,N,o,u,U.data):r.isCompressedArrayTexture?E.compressedTexSubImage3D(_,T,I,d,F,l,f,N,o,U.data):E.texSubImage3D(_,T,I,d,F,l,f,N,o,u,U):e.isDataTexture?E.texSubImage2D(_,T,I,d,l,f,o,u,U.data):e.isCompressedTexture?E.compressedTexSubImage2D(_,T,I,d,U.width,U.height,o,U.data):E.texSubImage2D(_,T,I,d,l,f,o,u,U);E.pixelStorei(E.UNPACK_ROW_LENGTH,S),E.pixelStorei(E.UNPACK_IMAGE_HEIGHT,G),E.pixelStorei(E.UNPACK_SKIP_PIXELS,g),E.pixelStorei(E.UNPACK_SKIP_ROWS,x),E.pixelStorei(E.UNPACK_SKIP_IMAGES,D),0===T&&r.generateMipmaps&&E.generateMipmap(_),R.unbindTexture()}copyFramebufferToTexture(e,r,t){const{gl:a}=this,{state:i}=this.backend,{textureGPU:T}=this.backend.get(e),{x:E,y:n,z:R,w:s}=t,_=!0===e.isDepthTexture||r.renderTarget&&r.renderTarget.samples>0,u=r.renderTarget?r.renderTarget.height:this.backend.getDrawingBufferSize().y;if(_){const t=0!==E||0!==n;let _,o;if(!0===e.isDepthTexture?(_=a.DEPTH_BUFFER_BIT,o=a.DEPTH_ATTACHMENT,r.stencil&&(_|=a.STENCIL_BUFFER_BIT)):(_=a.COLOR_BUFFER_BIT,o=a.COLOR_ATTACHMENT0),t){const e=this.backend.get(r.renderTarget),t=e.framebuffers[r.getCacheKey()],o=e.msaaFrameBuffer;i.bindFramebuffer(a.DRAW_FRAMEBUFFER,t),i.bindFramebuffer(a.READ_FRAMEBUFFER,o);const l=u-n-s;a.blitFramebuffer(E,l,E+R,l+s,E,l,E+R,l+s,_,a.NEAREST),i.bindFramebuffer(a.READ_FRAMEBUFFER,t),i.bindTexture(a.TEXTURE_2D,T),a.copyTexSubImage2D(a.TEXTURE_2D,0,0,0,E,l,R,s),i.unbindTexture()}else{const e=a.createFramebuffer();i.bindFramebuffer(a.DRAW_FRAMEBUFFER,e),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,o,a.TEXTURE_2D,T,0),a.blitFramebuffer(0,0,R,s,0,0,R,s,_,a.NEAREST),a.deleteFramebuffer(e)}}else i.bindTexture(a.TEXTURE_2D,T),a.copyTexSubImage2D(a.TEXTURE_2D,0,0,0,E,u-s-n,R,s),i.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(r)}setupRenderBufferStorage(e,r,t,a=!1){const{gl:i}=this,T=r.renderTarget,{depthTexture:E,depthBuffer:n,stencilBuffer:R,width:s,height:_}=T;if(i.bindRenderbuffer(i.RENDERBUFFER,e),n&&!R){let r=i.DEPTH_COMPONENT24;if(!0===a){this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(i.RENDERBUFFER,T.samples,r,s,_)}else t>0?(E&&E.isDepthTexture&&E.type===i.FLOAT&&(r=i.DEPTH_COMPONENT32F),i.renderbufferStorageMultisample(i.RENDERBUFFER,t,r,s,_)):i.renderbufferStorage(i.RENDERBUFFER,r,s,_);i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,e)}else n&&R&&(t>0?i.renderbufferStorageMultisample(i.RENDERBUFFER,t,i.DEPTH24_STENCIL8,s,_):i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_STENCIL,s,_),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,e));i.bindRenderbuffer(i.RENDERBUFFER,null)}async copyTextureToBuffer(e,r,t,a,i,T){const{backend:E,gl:n}=this,{textureGPU:R,glFormat:s,glType:_}=this.backend.get(e),u=n.createFramebuffer();n.bindFramebuffer(n.READ_FRAMEBUFFER,u);const o=e.isCubeTexture?n.TEXTURE_CUBE_MAP_POSITIVE_X+T:n.TEXTURE_2D;n.framebufferTexture2D(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,o,R,0);const l=this._getTypedArrayType(_),f=a*i*this._getBytesPerTexel(_,s),N=n.createBuffer();n.bindBuffer(n.PIXEL_PACK_BUFFER,N),n.bufferData(n.PIXEL_PACK_BUFFER,f,n.STREAM_READ),n.readPixels(r,t,a,i,s,_,0),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),await E.utils._clientWaitAsync();const p=new l(f/l.BYTES_PER_ELEMENT);return n.bindBuffer(n.PIXEL_PACK_BUFFER,N),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,p),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),n.deleteFramebuffer(u),p}_getTypedArrayType(e){const{gl:r}=this;if(e===r.UNSIGNED_BYTE)return Uint8Array;if(e===r.UNSIGNED_SHORT_4_4_4_4)return Uint16Array;if(e===r.UNSIGNED_SHORT_5_5_5_1)return Uint16Array;if(e===r.UNSIGNED_SHORT_5_6_5)return Uint16Array;if(e===r.UNSIGNED_SHORT)return Uint16Array;if(e===r.UNSIGNED_INT)return Uint32Array;if(e===r.HALF_FLOAT)return Uint16Array;if(e===r.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,r){const{gl:t}=this;let a=0;return e===t.UNSIGNED_BYTE&&(a=1),e!==t.UNSIGNED_SHORT_4_4_4_4&&e!==t.UNSIGNED_SHORT_5_5_5_1&&e!==t.UNSIGNED_SHORT_5_6_5&&e!==t.UNSIGNED_SHORT&&e!==t.HALF_FLOAT||(a=2),e!==t.UNSIGNED_INT&&e!==t.FLOAT||(a=4),r===t.RGBA?4*a:r===t.RGB?3*a:r===t.ALPHA?a:void 0}}function getImage(e){return e.isDataTexture?e.image.data:"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas?e:e.data}export default WebGLTextureUtils;
//# sourceMappingURL=WebGLTextureUtils.js.map