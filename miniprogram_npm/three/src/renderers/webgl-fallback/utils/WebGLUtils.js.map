{"version":3,"file":"node_modules/three/src/renderers/webgl-fallback/utils/WebGLUtils.js","names":["RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT5_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT1_Format","RGB_S3TC_DXT1_Format","DepthFormat","DepthStencilFormat","RedFormat","RGBFormat","RGBAFormat","AlphaFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","HalfFloatType","FloatType","UnsignedIntType","IntType","UnsignedShortType","ShortType","ByteType","UnsignedInt248Type","UnsignedInt5999Type","UnsignedShort5551Type","UnsignedShort4444Type","UnsignedByteType","RGBA_BPTC_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","SRGBTransfer","NoColorSpace","ColorManagement","WebGLUtils","constructor","backend","this","gl","extensions","convert","p","colorSpace","extension","transfer","getTransfer","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_INT_5_9_9_9_REV","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","ALPHA","RGB","RGBA","DEPTH_COMPONENT","DEPTH_STENCIL","RED","RED_INTEGER","RG","RG_INTEGER","RGBA_INTEGER","get","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","undefined","_clientWaitAsync","sync","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","Promise","resolve","reject","test","res","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","deleteSync","TIMEOUT_EXPIRED","requestAnimationFrame"],"sources":["node_modules/three/src/renderers/webgl-fallback/utils/WebGLUtils.js"],"sourcesContent":["import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, RedFormat, RGBFormat, RGBAFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, RGBA_BPTC_Format, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, SRGBTransfer, NoColorSpace } from '../../../constants.js';\nimport { ColorManagement } from '../../../math/ColorManagement.js';\n\n/**\n * A WebGL 2 backend utility module with common helpers.\n *\n * @private\n */\nclass WebGLUtils {\n\n\t/**\n\t * Constructs a new utility object.\n\t *\n\t * @param {WebGLBackend} backend - The WebGL 2 backend.\n\t */\n\tconstructor( backend ) {\n\n\t\t/**\n\t\t * A reference to the WebGL 2 backend.\n\t\t *\n\t\t * @type {WebGLBackend}\n\t\t */\n\t\tthis.backend = backend;\n\n\t\t/**\n\t\t * A reference to the rendering context.\n\t\t *\n\t\t * @type {WebGL2RenderingContext}\n\t\t */\n\t\tthis.gl = this.backend.gl;\n\n\t\t/**\n\t\t * A reference to a backend module holding extension-related\n\t\t * utility functions.\n\t\t *\n\t\t * @type {WebGLExtensions}\n\t\t */\n\t\tthis.extensions = backend.extensions;\n\n\t}\n\n\t/**\n\t * Converts the given three.js constant into a WebGL constant.\n\t * The method currently supports the conversion of texture formats\n\t * and types.\n\t *\n\t * @param {number} p - The three.js constant.\n\t * @param {string} [colorSpace=NoColorSpace] - The color space.\n\t * @return {?number} The corresponding WebGL constant.\n\t */\n\tconvert( p, colorSpace = NoColorSpace ) {\n\n\t\tconst { gl, extensions } = this;\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\treturn gl.HALF_FLOAT;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\treturn gl.UNSIGNED_INT_24_8;\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\t/**\n\t * This method can be used to synchronize the CPU with the GPU by waiting until\n\t * ongoing GPU commands have been completed.\n\t *\n\t * @private\n\t * @return {Promise} A promise that resolves when all ongoing GPU commands have been completed.\n\t */\n\t_clientWaitAsync() {\n\n\t\tconst { gl } = this;\n\n\t\tconst sync = gl.fenceSync( gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\n\t\tgl.flush();\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tfunction test() {\n\n\t\t\t\tconst res = gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 );\n\n\t\t\t\tif ( res === gl.WAIT_FAILED ) {\n\n\t\t\t\t\tgl.deleteSync( sync );\n\n\t\t\t\t\treject();\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( res === gl.TIMEOUT_EXPIRED ) {\n\n\t\t\t\t\trequestAnimationFrame( test );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tgl.deleteSync( sync );\n\n\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t\ttest();\n\n\t\t} );\n\n\t}\n\n}\n\nexport default WebGLUtils;\n"],"mappings":"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","ignoreList":[]}