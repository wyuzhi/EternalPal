function WebGLAttributes(e){const t=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),t.get(e)},remove:function(r){r.isInterleavedBufferAttribute&&(r=r.data);const n=t.get(r);n&&(e.deleteBuffer(n.buffer),t.delete(r))},update:function(r,n){if(r.isInterleavedBufferAttribute&&(r=r.data),r.isGLBufferAttribute){const e=t.get(r);return void((!e||e.version<r.version)&&t.set(r,{buffer:r.buffer,type:r.type,bytesPerElement:r.elementSize,version:r.version}))}const a=t.get(r);if(void 0===a)t.set(r,function(t,r){const n=t.array,a=t.usage,f=n.byteLength,i=e.createBuffer();let s;if(e.bindBuffer(r,i),e.bufferData(r,n,a),t.onUploadCallback(),n instanceof Float32Array)s=e.FLOAT;else if("undefined"!=typeof Float16Array&&n instanceof Float16Array)s=e.HALF_FLOAT;else if(n instanceof Uint16Array)s=t.isFloat16BufferAttribute?e.HALF_FLOAT:e.UNSIGNED_SHORT;else if(n instanceof Int16Array)s=e.SHORT;else if(n instanceof Uint32Array)s=e.UNSIGNED_INT;else if(n instanceof Int32Array)s=e.INT;else if(n instanceof Int8Array)s=e.BYTE;else if(n instanceof Uint8Array)s=e.UNSIGNED_BYTE;else{if(!(n instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+n);s=e.UNSIGNED_BYTE}return{buffer:i,type:s,bytesPerElement:n.BYTES_PER_ELEMENT,version:t.version,size:f}}(r,n));else if(a.version<r.version){if(a.size!==r.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(t,r,n){const a=r.array,f=r.updateRanges;if(e.bindBuffer(n,t),0===f.length)e.bufferSubData(n,0,a);else{f.sort(((e,t)=>e.start-t.start));let t=0;for(let e=1;e<f.length;e++){const r=f[t],n=f[e];n.start<=r.start+r.count+1?r.count=Math.max(r.count,n.start+n.count-r.start):(++t,f[t]=n)}f.length=t+1;for(let t=0,r=f.length;t<r;t++){const r=f[t];e.bufferSubData(n,r.start*a.BYTES_PER_ELEMENT,a,r.start,r.count)}r.clearUpdateRanges()}r.onUploadCallback()}(a.buffer,r,n),a.version=r.version}}}}export{WebGLAttributes};
//# sourceMappingURL=WebGLAttributes.js.map