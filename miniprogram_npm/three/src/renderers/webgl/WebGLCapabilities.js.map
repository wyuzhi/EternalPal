{"version":3,"file":"node_modules/three/src/renderers/webgl/WebGLCapabilities.js","names":["FloatType","HalfFloatType","RGBAFormat","UnsignedByteType","WebGLCapabilities","gl","extensions","parameters","utils","maxAnisotropy","getMaxPrecision","precision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","undefined","maxPrecision","console","warn","logarithmicDepthBuffer","reversedDepthBuffer","has","maxTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","isWebGL2","getMaxAnisotropy","extension","get","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","convert","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES"],"sources":["node_modules/three/src/renderers/webgl/WebGLCapabilities.js"],"sourcesContent":["import { FloatType, HalfFloatType, RGBAFormat, UnsignedByteType } from '../../constants.js';\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\tconst reversedDepthBuffer = parameters.reversedDepthBuffer === true && extensions.has( 'EXT_clip_control' );\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\treversedDepthBuffer: reversedDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n\nexport { WebGLCapabilities };\n"],"mappings":"OAASA,UAAWC,cAAeC,WAAYC,qBAAwB,qBAEvE,SAASC,kBAAmBC,EAAIC,EAAYC,EAAYC,GAEvD,IAAIC,EAiDJ,SAASC,EAAiBC,GAEzB,GAAmB,UAAdA,EAAwB,CAE5B,GAAKN,EAAGO,yBAA0BP,EAAGQ,cAAeR,EAAGS,YAAaH,UAAY,GAC/EN,EAAGO,yBAA0BP,EAAGU,gBAAiBV,EAAGS,YAAaH,UAAY,EAE7E,MAAO,QAIRA,EAAY,SAEb,CAEA,MAAmB,YAAdA,GAECN,EAAGO,yBAA0BP,EAAGQ,cAAeR,EAAGW,cAAeL,UAAY,GACjFN,EAAGO,yBAA0BP,EAAGU,gBAAiBV,EAAGW,cAAeL,UAAY,EAExE,UAMF,MAER,CAEA,IAAIA,OAAqCM,IAAzBV,EAAWI,UAA0BJ,EAAWI,UAAY,QAC5E,MAAMO,EAAeR,EAAiBC,GAEjCO,IAAiBP,IAErBQ,QAAQC,KAAM,uBAAwBT,EAAW,uBAAwBO,EAAc,YACvFP,EAAYO,GAIb,MAAMG,GAA+D,IAAtCd,EAAWc,uBACpCC,GAAyD,IAAnCf,EAAWe,qBAAgChB,EAAWiB,IAAK,oBAEjFC,EAAcnB,EAAGoB,aAAcpB,EAAGqB,yBAClCC,EAAoBtB,EAAGoB,aAAcpB,EAAGuB,gCAa9C,MAAO,CAENC,UAAU,EAEVC,iBA5GD,WAEC,QAAuBb,IAAlBR,EAA8B,OAAOA,EAE1C,IAA4D,IAAvDH,EAAWiB,IAAK,kCAA8C,CAElE,MAAMQ,EAAYzB,EAAW0B,IAAK,kCAElCvB,EAAgBJ,EAAGoB,aAAcM,EAAUE,+BAE5C,MAECxB,EAAgB,EAIjB,OAAOA,CAER,EA2FCC,gBAAiBA,EAEjBwB,sBA3FD,SAAgCC,GAE/B,OAAKA,IAAkBjC,YAAcM,EAAM4B,QAASD,KAAoB9B,EAAGoB,aAAcpB,EAAGgC,iCAQ7F,EAkFCC,oBAhFD,SAA8BC,GAE7B,MAAMC,EAA4BD,IAAgBtC,gBAAqBK,EAAWiB,IAAK,gCAAmCjB,EAAWiB,IAAK,2BAE1I,QAAKgB,IAAgBpC,kBAAoBK,EAAM4B,QAASG,KAAkBlC,EAAGoB,aAAcpB,EAAGoC,iCAC7FF,IAAgBvC,YAAewC,EAQjC,EAqEC7B,UAAWA,EACXU,uBAAwBA,EACxBC,oBAAqBA,EAErBE,YAAaA,EACbG,kBAAmBA,EACnBe,eA5BsBrC,EAAGoB,aAAcpB,EAAGsC,kBA6B1CC,eA5BsBvC,EAAGoB,aAAcpB,EAAGwC,2BA8B1CC,cA5BqBzC,EAAGoB,aAAcpB,EAAG0C,oBA6BzCC,kBA5ByB3C,EAAGoB,aAAcpB,EAAG4C,4BA6B7CC,YA5BmB7C,EAAGoB,aAAcpB,EAAG8C,qBA6BvCC,oBA5B2B/C,EAAGoB,aAAcpB,EAAGgD,8BA8B/CC,eA5BsB3B,EAAoB,EA8B1C4B,WA5BkBlD,EAAGoB,aAAcpB,EAAGmD,aAgCxC,QAGSpD","ignoreList":[]}