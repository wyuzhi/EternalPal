import{Matrix3}from"../../math/Matrix3.js";import{Plane}from"../../math/Plane.js";function WebGLClipping(n){const t=this;let e=null,l=0,i=!1,s=!1;const a=new Plane,o=new Matrix3,u={value:null,needsUpdate:!1};function r(n,e,l,i){const s=null!==n?n.length:0;let r=null;if(0!==s){if(r=u.value,!0!==i||null===r){const t=l+4*s,i=e.matrixWorldInverse;o.getNormalMatrix(i),(null===r||r.length<t)&&(r=new Float32Array(t));for(let t=0,e=l;t!==s;++t,e+=4)a.copy(n[t]).applyMatrix4(i,o),a.normal.toArray(r,e),r[e+3]=a.constant}u.value=r,u.needsUpdate=!0}return t.numPlanes=s,t.numIntersection=0,r}this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(n,t){const e=0!==n.length||t||0!==l||i;return i=t,l=n.length,e},this.beginShadows=function(){s=!0,r(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(n,t){e=r(n,t,0)},this.setState=function(a,o,c){const h=a.clippingPlanes,p=a.clipIntersection,m=a.clipShadows,f=n.get(a);if(!i||null===h||0===h.length||s&&!m)s?r(null):function(){u.value!==e&&(u.value=e,u.needsUpdate=l>0);t.numPlanes=l,t.numIntersection=0}();else{const n=s?0:l,t=4*n;let i=f.clippingState||null;u.value=i,i=r(h,o,t,c);for(let n=0;n!==t;++n)i[n]=e[n];f.clippingState=i,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=n}}}export{WebGLClipping};
//# sourceMappingURL=WebGLClipping.js.map