import{CubeReflectionMapping,CubeRefractionMapping,EquirectangularReflectionMapping,EquirectangularRefractionMapping}from"../../constants.js";import{PMREMGenerator}from"../../extras/PMREMGenerator.js";function WebGLCubeUVMaps(e){let r=new WeakMap,t=null;function n(e){const t=e.target;t.removeEventListener("dispose",n);const i=r.get(t);void 0!==i&&(r.delete(t),i.dispose())}return{get:function(i){if(i&&i.isTexture){const o=i.mapping,u=o===EquirectangularReflectionMapping||o===EquirectangularRefractionMapping,a=o===CubeReflectionMapping||o===CubeRefractionMapping;if(u||a){let o=r.get(i);const p=void 0!==o?o.texture.pmremVersion:0;if(i.isRenderTargetTexture&&i.pmremVersion!==p)return null===t&&(t=new PMREMGenerator(e)),o=u?t.fromEquirectangular(i,o):t.fromCubemap(i,o),o.texture.pmremVersion=i.pmremVersion,r.set(i,o),o.texture;if(void 0!==o)return o.texture;{const p=i.image;return u&&p&&p.height>0||a&&p&&function(e){let r=0;const t=6;for(let n=0;n<t;n++)void 0!==e[n]&&r++;return r===t}(p)?(null===t&&(t=new PMREMGenerator(e)),o=u?t.fromEquirectangular(i):t.fromCubemap(i),o.texture.pmremVersion=i.pmremVersion,r.set(i,o),i.addEventListener("dispose",n),o.texture):null}}}return i},dispose:function(){r=new WeakMap,null!==t&&(t.dispose(),t=null)}}}export{WebGLCubeUVMaps};
//# sourceMappingURL=WebGLCubeUVMaps.js.map