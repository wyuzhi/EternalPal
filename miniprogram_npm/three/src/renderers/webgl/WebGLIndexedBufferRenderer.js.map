{"version":3,"file":"node_modules/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js","names":["WebGLIndexedBufferRenderer","gl","extensions","info","mode","type","bytesPerElement","renderInstances","start","count","primcount","drawElementsInstanced","update","this","setMode","value","setIndex","render","drawElements","renderMultiDraw","starts","counts","drawCount","get","multiDrawElementsWEBGL","elementCount","i","renderMultiDrawInstances","extension","length","multiDrawElementsInstancedWEBGL"],"sources":["node_modules/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js"],"sourcesContent":["function WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\n\nexport { WebGLIndexedBufferRenderer };\n"],"mappings":"AAAA,SAASA,2BAA4BC,EAAIC,EAAYC,GAEpD,IAAIC,EAQAC,EAAMC,EAiBV,SAASC,EAAiBC,EAAOC,EAAOC,GAEpB,IAAdA,IAELT,EAAGU,sBAAuBP,EAAMK,EAAOJ,EAAMG,EAAQF,EAAiBI,GAEtEP,EAAKS,OAAQH,EAAOL,EAAMM,GAE3B,CAsDAG,KAAKC,QArFL,SAAkBC,GAEjBX,EAAOW,CAER,EAkFAF,KAAKG,SA9EL,SAAmBD,GAElBV,EAAOU,EAAMV,KACbC,EAAkBS,EAAMT,eAEzB,EA0EAO,KAAKI,OAxEL,SAAiBT,EAAOC,GAEvBR,EAAGiB,aAAcd,EAAMK,EAAOJ,EAAMG,EAAQF,GAE5CH,EAAKS,OAAQH,EAAOL,EAAM,EAE3B,EAmEAS,KAAKN,gBAAkBA,EACvBM,KAAKM,gBAxDL,SAA0BC,EAAQC,EAAQC,GAEzC,GAAmB,IAAdA,EAAkB,OAELpB,EAAWqB,IAAK,oBACxBC,uBAAwBpB,EAAMiB,EAAQ,EAAGhB,EAAMe,EAAQ,EAAGE,GAEpE,IAAIG,EAAe,EACnB,IAAM,IAAIC,EAAI,EAAGA,EAAIJ,EAAWI,IAE/BD,GAAgBJ,EAAQK,GAIzBvB,EAAKS,OAAQa,EAAcrB,EAAM,EAGlC,EAwCAS,KAAKc,yBAtCL,SAAmCP,EAAQC,EAAQC,EAAWZ,GAE7D,GAAmB,IAAdY,EAAkB,OAEvB,MAAMM,EAAY1B,EAAWqB,IAAK,oBAElC,GAAmB,OAAdK,EAEJ,IAAM,IAAIF,EAAI,EAAGA,EAAIN,EAAOS,OAAQH,IAEnCnB,EAAiBa,EAAQM,GAAMpB,EAAiBe,EAAQK,GAAKhB,EAAWgB,QAInE,CAENE,EAAUE,gCAAiC1B,EAAMiB,EAAQ,EAAGhB,EAAMe,EAAQ,EAAGV,EAAW,EAAGY,GAE3F,IAAIG,EAAe,EACnB,IAAM,IAAIC,EAAI,EAAGA,EAAIJ,EAAWI,IAE/BD,GAAgBJ,EAAQK,GAAMhB,EAAWgB,GAI1CvB,EAAKS,OAAQa,EAAcrB,EAAM,EAElC,CAED,CAWD,QAGSJ","ignoreList":[]}