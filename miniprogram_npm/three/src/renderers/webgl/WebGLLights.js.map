{"version":3,"file":"node_modules/three/src/renderers/webgl/WebGLLights.js","names":["Color","Matrix4","Vector2","Vector3","UniformsLib","UniformsCache","lights","get","light","undefined","id","uniforms","type","direction","color","position","distance","coneCos","penumbraCos","decay","skyColor","groundColor","halfWidth","halfHeight","ShadowUniformsCache","shadowIntensity","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","shadowCameraNear","shadowCameraFar","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","castShadow","map","WebGLLights","extensions","cache","shadowCache","state","version","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","numLightProbes","ambient","probe","directional","directionalShadow","directionalShadowMap","directionalShadowMatrix","spot","spotLightMap","spotShadow","spotShadowMap","spotLightMatrix","rectArea","rectAreaLTC1","rectAreaLTC2","point","pointShadow","pointShadowMap","pointShadowMatrix","hemi","numSpotLightShadowsWithMaps","i","push","vector3","matrix4","matrix42","setup","r","g","b","set","numSpotShadowsWithMaps","sort","l","length","intensity","shadowMap","shadow","texture","isAmbientLight","isLightProbe","j","addScaledVector","sh","coefficients","isDirectionalLight","copy","multiplyScalar","shadowUniforms","bias","normalBias","radius","mapSize","matrix","isSpotLight","setFromMatrixPosition","matrixWorld","Math","cos","angle","penumbra","updateMatrices","isRectAreaLight","width","height","isPointLight","camera","near","far","isHemisphereLight","has","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","viewMatrix","matrixWorldInverse","target","sub","transformDirection","applyMatrix4","identity","premultiply","extractRotation"],"sources":["node_modules/three/src/renderers/webgl/WebGLLights.js"],"sourcesContent":["import { Color } from '../../math/Color.js';\nimport { Matrix4 } from '../../math/Matrix4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from '../shaders/UniformsLib.js';\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\n\nexport { WebGLLights };\n"],"mappings":"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","ignoreList":[]}