import{BackSide}from"../../constants.js";import{getUnlitUniformColorSpace}from"../shaders/UniformsUtils.js";import{Euler}from"../../math/Euler.js";import{Matrix4}from"../../math/Matrix4.js";const _e1=new Euler,_m1=new Matrix4;function WebGLMaterials(a,e){function s(a,e){!0===a.matrixAutoUpdate&&a.updateMatrix(),e.value.copy(a.matrix)}function i(a,i){a.opacity.value=i.opacity,i.color&&a.diffuse.value.copy(i.color),i.emissive&&a.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(a.map.value=i.map,s(i.map,a.mapTransform)),i.alphaMap&&(a.alphaMap.value=i.alphaMap,s(i.alphaMap,a.alphaMapTransform)),i.bumpMap&&(a.bumpMap.value=i.bumpMap,s(i.bumpMap,a.bumpMapTransform),a.bumpScale.value=i.bumpScale,i.side===BackSide&&(a.bumpScale.value*=-1)),i.normalMap&&(a.normalMap.value=i.normalMap,s(i.normalMap,a.normalMapTransform),a.normalScale.value.copy(i.normalScale),i.side===BackSide&&a.normalScale.value.negate()),i.displacementMap&&(a.displacementMap.value=i.displacementMap,s(i.displacementMap,a.displacementMapTransform),a.displacementScale.value=i.displacementScale,a.displacementBias.value=i.displacementBias),i.emissiveMap&&(a.emissiveMap.value=i.emissiveMap,s(i.emissiveMap,a.emissiveMapTransform)),i.specularMap&&(a.specularMap.value=i.specularMap,s(i.specularMap,a.specularMapTransform)),i.alphaTest>0&&(a.alphaTest.value=i.alphaTest);const r=e.get(i),o=r.envMap,n=r.envMapRotation;o&&(a.envMap.value=o,_e1.copy(n),_e1.x*=-1,_e1.y*=-1,_e1.z*=-1,o.isCubeTexture&&!1===o.isRenderTargetTexture&&(_e1.y*=-1,_e1.z*=-1),a.envMapRotation.value.setFromMatrix4(_m1.makeRotationFromEuler(_e1)),a.flipEnvMap.value=o.isCubeTexture&&!1===o.isRenderTargetTexture?-1:1,a.reflectivity.value=i.reflectivity,a.ior.value=i.ior,a.refractionRatio.value=i.refractionRatio),i.lightMap&&(a.lightMap.value=i.lightMap,a.lightMapIntensity.value=i.lightMapIntensity,s(i.lightMap,a.lightMapTransform)),i.aoMap&&(a.aoMap.value=i.aoMap,a.aoMapIntensity.value=i.aoMapIntensity,s(i.aoMap,a.aoMapTransform))}return{refreshFogUniforms:function(e,s){s.color.getRGB(e.fogColor.value,getUnlitUniformColorSpace(a)),s.isFog?(e.fogNear.value=s.near,e.fogFar.value=s.far):s.isFogExp2&&(e.fogDensity.value=s.density)},refreshMaterialUniforms:function(a,r,o,n,l){r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(a,r):r.isMeshToonMaterial?(i(a,r),function(a,e){e.gradientMap&&(a.gradientMap.value=e.gradientMap)}(a,r)):r.isMeshPhongMaterial?(i(a,r),function(a,e){a.specular.value.copy(e.specular),a.shininess.value=Math.max(e.shininess,1e-4)}(a,r)):r.isMeshStandardMaterial?(i(a,r),function(a,e){a.metalness.value=e.metalness,e.metalnessMap&&(a.metalnessMap.value=e.metalnessMap,s(e.metalnessMap,a.metalnessMapTransform));a.roughness.value=e.roughness,e.roughnessMap&&(a.roughnessMap.value=e.roughnessMap,s(e.roughnessMap,a.roughnessMapTransform));e.envMap&&(a.envMapIntensity.value=e.envMapIntensity)}(a,r),r.isMeshPhysicalMaterial&&function(a,e,i){a.ior.value=e.ior,e.sheen>0&&(a.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),a.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(a.sheenColorMap.value=e.sheenColorMap,s(e.sheenColorMap,a.sheenColorMapTransform)),e.sheenRoughnessMap&&(a.sheenRoughnessMap.value=e.sheenRoughnessMap,s(e.sheenRoughnessMap,a.sheenRoughnessMapTransform)));e.clearcoat>0&&(a.clearcoat.value=e.clearcoat,a.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(a.clearcoatMap.value=e.clearcoatMap,s(e.clearcoatMap,a.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(a.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,s(e.clearcoatRoughnessMap,a.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(a.clearcoatNormalMap.value=e.clearcoatNormalMap,s(e.clearcoatNormalMap,a.clearcoatNormalMapTransform),a.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),e.side===BackSide&&a.clearcoatNormalScale.value.negate()));e.dispersion>0&&(a.dispersion.value=e.dispersion);e.iridescence>0&&(a.iridescence.value=e.iridescence,a.iridescenceIOR.value=e.iridescenceIOR,a.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],a.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(a.iridescenceMap.value=e.iridescenceMap,s(e.iridescenceMap,a.iridescenceMapTransform)),e.iridescenceThicknessMap&&(a.iridescenceThicknessMap.value=e.iridescenceThicknessMap,s(e.iridescenceThicknessMap,a.iridescenceThicknessMapTransform)));e.transmission>0&&(a.transmission.value=e.transmission,a.transmissionSamplerMap.value=i.texture,a.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(a.transmissionMap.value=e.transmissionMap,s(e.transmissionMap,a.transmissionMapTransform)),a.thickness.value=e.thickness,e.thicknessMap&&(a.thicknessMap.value=e.thicknessMap,s(e.thicknessMap,a.thicknessMapTransform)),a.attenuationDistance.value=e.attenuationDistance,a.attenuationColor.value.copy(e.attenuationColor));e.anisotropy>0&&(a.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(a.anisotropyMap.value=e.anisotropyMap,s(e.anisotropyMap,a.anisotropyMapTransform)));a.specularIntensity.value=e.specularIntensity,a.specularColor.value.copy(e.specularColor),e.specularColorMap&&(a.specularColorMap.value=e.specularColorMap,s(e.specularColorMap,a.specularColorMapTransform));e.specularIntensityMap&&(a.specularIntensityMap.value=e.specularIntensityMap,s(e.specularIntensityMap,a.specularIntensityMapTransform))}(a,r,l)):r.isMeshMatcapMaterial?(i(a,r),function(a,e){e.matcap&&(a.matcap.value=e.matcap)}(a,r)):r.isMeshDepthMaterial?i(a,r):r.isMeshDistanceMaterial?(i(a,r),function(a,s){const i=e.get(s).light;a.referencePosition.value.setFromMatrixPosition(i.matrixWorld),a.nearDistance.value=i.shadow.camera.near,a.farDistance.value=i.shadow.camera.far}(a,r)):r.isMeshNormalMaterial?i(a,r):r.isLineBasicMaterial?(function(a,e){a.diffuse.value.copy(e.color),a.opacity.value=e.opacity,e.map&&(a.map.value=e.map,s(e.map,a.mapTransform))}(a,r),r.isLineDashedMaterial&&function(a,e){a.dashSize.value=e.dashSize,a.totalSize.value=e.dashSize+e.gapSize,a.scale.value=e.scale}(a,r)):r.isPointsMaterial?function(a,e,i,r){a.diffuse.value.copy(e.color),a.opacity.value=e.opacity,a.size.value=e.size*i,a.scale.value=.5*r,e.map&&(a.map.value=e.map,s(e.map,a.uvTransform));e.alphaMap&&(a.alphaMap.value=e.alphaMap,s(e.alphaMap,a.alphaMapTransform));e.alphaTest>0&&(a.alphaTest.value=e.alphaTest)}(a,r,o,n):r.isSpriteMaterial?function(a,e){a.diffuse.value.copy(e.color),a.opacity.value=e.opacity,a.rotation.value=e.rotation,e.map&&(a.map.value=e.map,s(e.map,a.mapTransform));e.alphaMap&&(a.alphaMap.value=e.alphaMap,s(e.alphaMap,a.alphaMapTransform));e.alphaTest>0&&(a.alphaTest.value=e.alphaTest)}(a,r):r.isShadowMaterial?(a.color.value.copy(r.color),a.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}export{WebGLMaterials};
//# sourceMappingURL=WebGLMaterials.js.map