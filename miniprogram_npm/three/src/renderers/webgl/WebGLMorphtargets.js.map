{"version":3,"file":"node_modules/three/src/renderers/webgl/WebGLMorphtargets.js","names":["FloatType","DataArrayTexture","Vector4","Vector2","WebGLMorphtargets","gl","capabilities","textures","morphTextures","WeakMap","morph","update","object","geometry","program","objectInfluences","morphTargetInfluences","morphAttribute","morphAttributes","position","normal","color","morphTargetsCount","undefined","length","entry","get","count","texture","dispose","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","width","attributes","height","maxTextureSize","Math","ceil","buffer","Float32Array","type","needsUpdate","vertexDataStride","i","morphTarget","morphNormal","morphColor","offset","j","stride","fromBufferAttribute","x","y","z","itemSize","w","size","set","addEventListener","disposeTexture","delete","removeEventListener","isInstancedMesh","morphTexture","getUniforms","setValue","morphInfluencesSum","morphBaseInfluence","morphTargetsRelative"],"sources":["node_modules/three/src/renderers/webgl/WebGLMorphtargets.js"],"sourcesContent":["import { FloatType } from '../../constants.js';\nimport { DataArrayTexture } from '../../textures/DataArrayTexture.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { Vector2 } from '../../math/Vector2.js';\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLMorphtargets };\n"],"mappings":"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","ignoreList":[]}