{"version":3,"file":"node_modules/three/src/renderers/webgl/WebGLProgram.js","names":["WebGLUniforms","WebGLShader","ShaderChunk","NoToneMapping","AddOperation","MixOperation","MultiplyOperation","CubeRefractionMapping","CubeUVReflectionMapping","CubeReflectionMapping","PCFSoftShadowMap","PCFShadowMap","VSMShadowMap","AgXToneMapping","ACESFilmicToneMapping","NeutralToneMapping","CineonToneMapping","CustomToneMapping","ReinhardToneMapping","LinearToneMapping","GLSL3","LinearTransfer","SRGBTransfer","ColorManagement","Vector3","Matrix3","COMPLETION_STATUS_KHR","programIdCount","handleSource","string","errorLine","lines","split","lines2","from","Math","max","to","min","length","i","line","push","join","_m0","getEncodingComponents","colorSpace","_getMatrix","workingColorSpace","encodingMatrix","elements","map","v","toFixed","getTransfer","console","warn","getShaderErrors","gl","shader","type","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","exec","parseInt","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","components","getToneMappingFunction","toneMapping","toneMappingName","_v0","getLuminanceFunction","getLuminanceCoefficients","x","y","z","generateVertexExtensions","parameters","extensionClipCullDistance","extensionMultiDraw","filter","filterEmptyLine","generateDefines","defines","chunks","name","value","fetchAttributeLocations","program","attributes","n","getProgramParameter","ACTIVE_ATTRIBUTES","info","getActiveAttrib","locationSize","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","location","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","match","include","undefined","newInclude","get","Error","unrollLoopPattern","unrollLoops","loopReplacer","start","end","snippet","generatePrecision","precisionstring","precision","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMap","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","combine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","log2","texelHeight","texelWidth","pow","WebGLProgram","renderer","cacheKey","bindingStates","getContext","vertexShader","fragmentShader","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","glslVersion","isRawShaderMaterial","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fog","fogExp2","lightMap","aoMap","bumpMap","normalMap","normalMapObjectSpace","normalMapTangentSpace","displacementMap","emissiveMap","anisotropy","anisotropyMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","iridescenceMap","iridescenceThicknessMap","specularMap","specularColorMap","specularIntensityMap","roughnessMap","metalnessMap","alphaMap","alphaHash","transmission","transmissionMap","thicknessMap","sheenColorMap","sheenRoughnessMap","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","flatShading","vertexColors","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTargets","morphNormals","morphTargetsCount","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","sizeAttenuation","numLightProbes","logarithmicDepthBuffer","reversedDepthBuffer","alphaToCoverage","matcap","clearcoat","dispersion","iridescence","alphaTest","sheen","gradientMap","premultipliedAlpha","decodeVideoTexture","decodeVideoTextureEmissive","dithering","opaque","outputColorSpace","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","VERTEX_SHADER","glFragmentShader","FRAGMENT_SHADER","onFirstUse","self","debug","checkShaderErrors","programInfoLog","getProgramInfoLog","vertexShaderInfoLog","fragmentShaderInfoLog","programLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","error","getError","VALIDATE_STATUS","diagnostics","log","prefix","deleteShader","cachedUniforms","cachedAttributes","attachShader","index0AttributeName","bindAttribLocation","linkProgram","this","getUniforms","getAttributes","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","releaseStatesOfProgram","deleteProgram","id","usedTimes"],"sources":["node_modules/three/src/renderers/webgl/WebGLProgram.js"],"sourcesContent":["import { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, AgXToneMapping, ACESFilmicToneMapping, NeutralToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, GLSL3, LinearTransfer, SRGBTransfer } from '../../constants.js';\nimport { ColorManagement } from '../../math/ColorManagement.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nconst _m0 = /*@__PURE__*/ new Matrix3();\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tColorManagement._getMatrix( _m0, ColorManagement.workingColorSpace, colorSpace );\n\n\tconst encodingMatrix = `mat3( ${ _m0.elements.map( ( v ) => v.toFixed( 4 ) ) } )`;\n\n\tswitch ( ColorManagement.getTransfer( colorSpace ) ) {\n\n\t\tcase LinearTransfer:\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t\tcase SRGBTransfer:\n\t\t\treturn [ encodingMatrix, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space: ', colorSpace );\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\n\tconst shaderInfoLog = gl.getShaderInfoLog( shader ) || '';\n\tconst errors = shaderInfoLog.trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\n\treturn [\n\n\t\t`vec4 ${functionName}( vec4 value ) {`,\n\n\t\t`\treturn ${components[ 1 ]}( vec4( value.rgb * ${components[ 0 ]}, value.a ) );`,\n\n\t\t'}',\n\n\t].join( '\\n' );\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'Cineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\n\nfunction getLuminanceFunction() {\n\n\tColorManagement.getLuminanceCoefficients( _v0 );\n\n\tconst r = _v0.x.toFixed( 4 );\n\tconst g = _v0.y.toFixed( 4 );\n\tconst b = _v0.z.toFixed( 4 );\n\n\treturn [\n\n\t\t'float luminance( const in vec3 rgb ) {',\n\n\t\t`\tconst vec3 weights = vec3( ${ r }, ${ g }, ${ b } );`,\n\n\t\t'\treturn dot( weights, rgb );',\n\n\t\t'}'\n\n\t].join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reversedDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\t\t\tparameters.decodeVideoTextureEmissive ? '#define DECODE_VIDEO_TEXTURE_EMISSIVE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reversedDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\t\t\tgetLuminanceFunction(),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programInfoLog = gl.getProgramInfoLog( program ) || '';\n\t\t\tconst vertexShaderInfoLog = gl.getShaderInfoLog( glVertexShader ) || '';\n\t\t\tconst fragmentShaderInfoLog = gl.getShaderInfoLog( glFragmentShader ) || '';\n\n\t\t\tconst programLog = programInfoLog.trim();\n\t\t\tconst vertexLog = vertexShaderInfoLog.trim();\n\t\t\tconst fragmentLog = fragmentShaderInfoLog.trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nexport { WebGLProgram };\n"],"mappings":"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","ignoreList":[]}