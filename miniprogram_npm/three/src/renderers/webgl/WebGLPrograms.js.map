{"version":3,"file":"node_modules/three/src/renderers/webgl/WebGLPrograms.js","names":["BackSide","DoubleSide","CubeUVReflectionMapping","ObjectSpaceNormalMap","TangentSpaceNormalMap","NoToneMapping","NormalBlending","LinearSRGBColorSpace","SRGBTransfer","Layers","WebGLProgram","WebGLShaderCache","ShaderLib","UniformsUtils","ColorManagement","WebGLPrograms","renderer","cubemaps","cubeuvmaps","extensions","capabilities","bindingStates","clipping","_programLayers","_customShaders","_activeChannels","Set","programs","logarithmicDepthBuffer","SUPPORTS_VERTEX_TEXTURES","vertexTextures","precision","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","value","add","getParameters","material","lights","shadows","scene","object","fog","geometry","environment","isMeshStandardMaterial","envMap","get","envMapCubeUVHeight","mapping","image","height","shaderID","type","getMaxPrecision","console","warn","morphAttribute","morphAttributes","position","normal","color","morphTargetsCount","undefined","length","vertexShader","fragmentShader","customVertexShaderID","customFragmentShaderID","morphTextureStride","shader","update","getVertexShaderID","getFragmentShaderID","currentRenderTarget","getRenderTarget","reversedDepthBuffer","state","buffers","depth","getReversed","IS_INSTANCEDMESH","isInstancedMesh","IS_BATCHEDMESH","isBatchedMesh","HAS_MAP","map","HAS_MATCAP","matcap","HAS_ENVMAP","HAS_AOMAP","aoMap","HAS_LIGHTMAP","lightMap","HAS_BUMPMAP","bumpMap","HAS_NORMALMAP","normalMap","HAS_DISPLACEMENTMAP","displacementMap","HAS_EMISSIVEMAP","emissiveMap","HAS_METALNESSMAP","metalnessMap","HAS_ROUGHNESSMAP","roughnessMap","HAS_ANISOTROPY","anisotropy","HAS_CLEARCOAT","clearcoat","HAS_DISPERSION","dispersion","HAS_IRIDESCENCE","iridescence","HAS_SHEEN","sheen","HAS_TRANSMISSION","transmission","HAS_ANISOTROPYMAP","anisotropyMap","HAS_CLEARCOATMAP","clearcoatMap","HAS_CLEARCOAT_NORMALMAP","clearcoatNormalMap","HAS_CLEARCOAT_ROUGHNESSMAP","clearcoatRoughnessMap","HAS_IRIDESCENCEMAP","iridescenceMap","HAS_IRIDESCENCE_THICKNESSMAP","iridescenceThicknessMap","HAS_SHEEN_COLORMAP","sheenColorMap","HAS_SHEEN_ROUGHNESSMAP","sheenRoughnessMap","HAS_SPECULARMAP","specularMap","HAS_SPECULAR_COLORMAP","specularColorMap","HAS_SPECULAR_INTENSITYMAP","specularIntensityMap","HAS_TRANSMISSIONMAP","transmissionMap","HAS_THICKNESSMAP","thicknessMap","HAS_GRADIENTMAP","gradientMap","HAS_ALPHAMAP","alphaMap","HAS_ALPHATEST","alphaTest","HAS_ALPHAHASH","alphaHash","HAS_EXTENSIONS","toneMapping","toneMapped","isXRRenderTarget","parameters","shaderType","shaderName","name","defines","isRawShaderMaterial","glslVersion","batching","batchingColor","_colorsTexture","instancing","instancingColor","instanceColor","instancingMorph","morphTexture","supportsVertexTextures","outputColorSpace","texture","colorSpace","alphaToCoverage","envMapMode","normalMapObjectSpace","normalMapType","normalMapTangentSpace","opaque","transparent","blending","combine","mapUv","channel","aoMapUv","lightMapUv","bumpMapUv","normalMapUv","displacementMapUv","emissiveMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","alphaMapUv","vertexTangents","attributes","tangent","vertexColors","vertexAlphas","itemSize","pointsUvs","isPoints","uv","useFog","fogExp2","isFogExp2","flatShading","wireframe","sizeAttenuation","skinning","isSkinnedMesh","morphTargets","morphNormals","morphColors","numDirLights","directional","numPointLights","point","numSpotLights","spot","numSpotLightMaps","spotLightMap","numRectAreaLights","rectArea","numHemiLights","hemi","numDirLightShadows","directionalShadowMap","numPointLightShadows","pointShadowMap","numSpotLightShadows","spotShadowMap","numSpotLightShadowsWithMaps","numLightProbes","numClippingPlanes","numPlanes","numClipIntersection","numIntersection","dithering","shadowMapEnabled","shadowMap","enabled","shadowMapType","decodeVideoTexture","isVideoTexture","getTransfer","decodeVideoTextureEmissive","premultipliedAlpha","doubleSided","side","flipSided","useDepthPacking","depthPacking","index0AttributeName","extensionClipCullDistance","clipCullDistance","has","extensionMultiDraw","multiDraw","rendererExtensionParallelShaderCompile","customProgramCacheKey","vertexUv1s","vertexUv2s","vertexUv3s","clear","getProgramCacheKey","array","push","morphAttributeCount","getProgramCacheKeyParameters","disableAll","enable","mask","getProgramCacheKeyBooleans","join","getUniforms","uniforms","clone","acquireProgram","cacheKey","program","p","pl","preexistingProgram","usedTimes","releaseProgram","i","indexOf","pop","destroy","releaseShaderCache","remove","dispose"],"sources":["node_modules/three/src/renderers/webgl/WebGLPrograms.js"],"sourcesContent":["import { BackSide, DoubleSide, CubeUVReflectionMapping, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping, NormalBlending, LinearSRGBColorSpace, SRGBTransfer } from '../../constants.js';\nimport { Layers } from '../../core/Layers.js';\nimport { WebGLProgram } from './WebGLProgram.js';\nimport { WebGLShaderCache } from './WebGLShaderCache.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { UniformsUtils } from '../shaders/UniformsUtils.js';\nimport { ColorManagement } from '../../math/ColorManagement.js';\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst reversedDepthBuffer = renderer.state.buffers.depth.getReversed();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: ( material.flatShading === true && material.wireframe === false ),\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\treversedDepthBuffer: reversedDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\t\t\tdecodeVideoTextureEmissive: HAS_EMISSIVEMAP && ( material.emissiveMap.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.emissiveMap.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: ( HAS_EXTENSIONS && material.extensions.multiDraw === true || IS_BATCHEDMESH ) && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 22 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.reversedDepthBuffer )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.decodeVideoTextureEmissive )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nexport { WebGLPrograms };\n"],"mappings":"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","ignoreList":[]}