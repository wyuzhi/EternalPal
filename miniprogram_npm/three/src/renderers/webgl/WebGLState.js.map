{"version":3,"file":"node_modules/three/src/renderers/webgl/WebGLState.js","names":["NotEqualDepth","GreaterDepth","GreaterEqualDepth","EqualDepth","LessEqualDepth","LessDepth","AlwaysDepth","NeverDepth","CullFaceFront","CullFaceBack","CullFaceNone","DoubleSide","BackSide","CustomBlending","MultiplyBlending","SubtractiveBlending","AdditiveBlending","NoBlending","NormalBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","SrcAlphaFactor","SrcAlphaSaturateFactor","DstColorFactor","DstAlphaFactor","OneMinusSrcColorFactor","OneMinusSrcAlphaFactor","OneMinusDstColorFactor","OneMinusDstAlphaFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","Color","Vector4","reversedFuncs","WebGLState","gl","extensions","colorBuffer","locked","color","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","setClear","r","g","b","a","premultipliedAlpha","set","equals","clearColor","copy","reset","depthBuffer","currentReversed","currentDepthMask","currentDepthFunc","currentDepthClear","setReversed","reversed","ext","get","clipControlEXT","LOWER_LEFT_EXT","ZERO_TO_ONE_EXT","NEGATIVE_ONE_TO_ONE_EXT","oldDepth","this","getReversed","setTest","depthTest","enable","DEPTH_TEST","disable","depthMask","setFunc","depthFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","depth","clearDepth","stencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","uboBindings","WeakMap","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","maxTextures","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","version","glVersion","VERSION","indexOf","parseFloat","exec","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","fromArray","currentViewport","createTexture","type","target","count","dimensions","data","Uint8Array","texture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","i","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","UNSIGNED_BYTE","texImage2D","emptyTextures","id","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","setBlending","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","blending","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","blendColor","blendAlpha","BLEND","blendEquationSeparate","blendFuncSeparate","blendFunc","console","error","flipSided","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","polygonOffset","factor","units","POLYGON_OFFSET_FILL","buffers","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","renderTarget","needsUpdate","undefined","textures","length","COLOR_ATTACHMENT0","il","useProgram","program","setMaterial","material","frontFaceCW","side","transparent","depthWrite","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","polygonOffsetFactor","polygonOffsetUnits","alphaToCoverage","SAMPLE_ALPHA_TO_COVERAGE","setLineWidth","width","lineWidth","setScissorTest","scissorTest","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","arguments","compressedTexImage3D","updateUBOMapping","uniformsGroup","mapping","blockIndex","getUniformBlockIndex","name","uniformBlockBinding","__bindingPointIndex","texStorage2D","texStorage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","scissor","x","y","z","w","viewport","KEEP","READ_FRAMEBUFFER","canvas","height"],"sources":["node_modules/three/src/renderers/webgl/WebGLState.js"],"sourcesContent":["import { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor, ConstantColorFactor, OneMinusConstantColorFactor, ConstantAlphaFactor, OneMinusConstantAlphaFactor } from '../../constants.js';\nimport { Color } from '../../math/Color.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\nconst reversedFuncs = {\n\t[ NeverDepth ]: AlwaysDepth,\n\t[ LessDepth ]: GreaterDepth,\n\t[ EqualDepth ]: NotEqualDepth,\n\t[ LessEqualDepth ]: GreaterEqualDepth,\n\n\t[ AlwaysDepth ]: NeverDepth,\n\t[ GreaterDepth ]: LessDepth,\n\t[ NotEqualDepth ]: EqualDepth,\n\t[ GreaterEqualDepth ]: LessEqualDepth,\n};\n\nfunction WebGLState( gl, extensions ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentReversed = false;\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetReversed: function ( reversed ) {\n\n\t\t\t\tif ( currentReversed !== reversed ) {\n\n\t\t\t\t\tconst ext = extensions.get( 'EXT_clip_control' );\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.ZERO_TO_ONE_EXT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.NEGATIVE_ONE_TO_ONE_EXT );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentReversed = reversed;\n\n\t\t\t\t\tconst oldDepth = currentDepthClear;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t\tthis.setClear( oldDepth );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tgetReversed: function () {\n\n\t\t\t\treturn currentReversed;\n\n\t\t\t},\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentReversed ) depthFunc = reversedFuncs[ depthFunc ];\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tif ( currentReversed ) {\n\n\t\t\t\t\t\tdepth = 1 - depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\t\t\t\tcurrentReversed = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D( ...arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D( ...arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D( ...arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D( ...arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D( ...arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D( ...arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D( ...arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D( ...arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D( ...arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D( ...arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\n\t\tdepthBuffer.setReversed( false );\n\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nexport { WebGLState };\n"],"mappings":"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","ignoreList":[]}