{"version":3,"file":"node_modules/three/src/renderers/webgl/WebGLUniforms.js","names":["CubeTexture","Texture","DataArrayTexture","Data3DTexture","DepthTexture","LessEqualCompare","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","Float32Array","mat3array","mat2array","flatten","array","nBlocks","blockSize","firstElem","n","r","undefined","toArray","i","offset","arraysEqual","a","b","length","l","copyArray","allocTexUnits","textures","Int32Array","allocateTextureUnit","setValueV1f","gl","v","cache","this","uniform1f","addr","setValueV2f","x","y","uniform2f","uniform2fv","setValueV3f","z","uniform3f","g","uniform3fv","setValueV4f","w","uniform4f","uniform4fv","setValueM2","elements","uniformMatrix2fv","set","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","type","SAMPLER_2D_SHADOW","compareFunction","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","data","size","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","constructor","id","activeInfo","setValue","PureArrayUniform","StructuredUniform","seq","map","value","u","RePathPart","addUniform","container","uniformObject","push","parseUniform","path","name","pathLength","lastIndex","match","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","setOptional","object","upload","values","needsUpdate","seqWithValue"],"sources":["node_modules/three/src/renderers/webgl/WebGLUniforms.js"],"sourcesContent":["/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataArrayTexture } from '../../textures/DataArrayTexture.js';\nimport { Data3DTexture } from '../../textures/Data3DTexture.js';\nimport { DepthTexture } from '../../textures/DepthTexture.js';\nimport { LessEqualCompare } from '../../constants.js';\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tlet emptyTexture2D;\n\n\tif ( this.type === gl.SAMPLER_2D_SHADOW ) {\n\n\t\temptyShadowTexture.compareFunction = LessEqualCompare; // #28670\n\t\temptyTexture2D = emptyShadowTexture;\n\n\t} else {\n\n\t\temptyTexture2D = emptyTexture;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nexport { WebGLUniforms };\n"],"mappings":"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","ignoreList":[]}