{"version":3,"file":"node_modules/three/src/renderers/webgpu/WebGPURenderer.js","names":["Renderer","WebGLBackend","WebGPUBackend","StandardNodeLibrary","WebGPURenderer","constructor","parameters","BackendClass","forceWebGL","getFallback","console","warn","super","this","library","isWebGPURenderer","__THREE_DEVTOOLS__","dispatchEvent","CustomEvent","detail"],"sources":["node_modules/three/src/renderers/webgpu/WebGPURenderer.js"],"sourcesContent":["import Renderer from '../common/Renderer.js';\nimport WebGLBackend from '../webgl-fallback/WebGLBackend.js';\nimport WebGPUBackend from './WebGPUBackend.js';\nimport StandardNodeLibrary from './nodes/StandardNodeLibrary.js';\n/*\nconst debugHandler = {\n\n\tget: function ( target, name ) {\n\n\t\t// Add |update\n\t\tif ( /^(create|destroy)/.test( name ) ) console.log( 'WebGPUBackend.' + name );\n\n\t\treturn target[ name ];\n\n\t}\n\n};\n*/\n\n/**\n * This renderer is the new alternative of `WebGLRenderer`. `WebGPURenderer` has the ability\n * to target different backends. By default, the renderer tries to use a WebGPU backend if the\n * browser supports WebGPU. If not, `WebGPURenderer` falls backs to a WebGL 2 backend.\n *\n * @augments Renderer\n */\nclass WebGPURenderer extends Renderer {\n\n\t/**\n\t * WebGPURenderer options.\n\t *\n\t * @typedef {Object} WebGPURenderer~Options\n\t * @property {boolean} [logarithmicDepthBuffer=false] - Whether logarithmic depth buffer is enabled or not.\n\t * @property {boolean} [alpha=true] - Whether the default framebuffer (which represents the final contents of the canvas) should be transparent or opaque.\n\t * @property {boolean} [depth=true] - Whether the default framebuffer should have a depth buffer or not.\n\t * @property {boolean} [stencil=false] - Whether the default framebuffer should have a stencil buffer or not.\n\t * @property {boolean} [antialias=false] - Whether MSAA as the default anti-aliasing should be enabled or not.\n\t * @property {number} [samples=0] - When `antialias` is `true`, `4` samples are used by default. Set this parameter to any other integer value than 0 to overwrite the default.\n\t * @property {boolean} [forceWebGL=false] - If set to `true`, the renderer uses a WebGL 2 backend no matter if WebGPU is supported or not.\n\t * @property {boolean} [multiview=false] - If set to `true`, the renderer will use multiview during WebXR rendering if supported.\n\t * @property {number} [outputType=undefined] - Texture type for output to canvas. By default, device's preferred format is used; other formats may incur overhead.\n\t * @property {number} [colorBufferType=HalfFloatType] - Defines the type of color buffers. The default `HalfFloatType` is recommend for best\n\t * quality. To save memory and bandwidth, `UnsignedByteType` might be used. This will reduce rendering quality though.\n\t */\n\n\t/**\n\t * Constructs a new WebGPU renderer.\n\t *\n\t * @param {WebGPURenderer~Options} [parameters] - The configuration parameter.\n\t */\n\tconstructor( parameters = {} ) {\n\n\t\tlet BackendClass;\n\n\t\tif ( parameters.forceWebGL ) {\n\n\t\t\tBackendClass = WebGLBackend;\n\n\t\t} else {\n\n\t\t\tBackendClass = WebGPUBackend;\n\n\t\t\tparameters.getFallback = () => {\n\n\t\t\t\tconsole.warn( 'THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend.' );\n\n\t\t\t\treturn new WebGLBackend( parameters );\n\n\t\t\t};\n\n\t\t}\n\n\t\tconst backend = new BackendClass( parameters );\n\n\t\t//super( new Proxy( backend, debugHandler ) );\n\t\tsuper( backend, parameters );\n\n\t\t/**\n\t\t * The generic default value is overwritten with the\n\t\t * standard node library for type mapping.\n\t\t *\n\t\t * @type {StandardNodeLibrary}\n\t\t */\n\t\tthis.library = new StandardNodeLibrary();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isWebGPURenderer = true;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n}\n\nexport default WebGPURenderer;\n"],"mappings":"OAAOA,aAAc,+BACdC,iBAAkB,2CAClBC,kBAAmB,4BACnBC,wBAAyB,iCAuBhC,MAAMC,uBAAuBJ,SAwB5B,WAAAK,CAAaC,EAAa,CAAC,GAE1B,IAAIC,EAECD,EAAWE,WAEfD,EAAeN,cAIfM,EAAeL,cAEfI,EAAWG,YAAc,KAExBC,QAAQC,KAAM,gFAEP,IAAIV,aAAcK,KAS3BM,MAHgB,IAAIL,EAAcD,GAGlBA,GAQhBO,KAAKC,QAAU,IAAIX,oBASnBU,KAAKE,kBAAmB,EAEW,oBAAvBC,oBAEXA,mBAAmBC,cAAe,IAAIC,YAAa,UAAW,CAAEC,OAAQN,OAI1E,iBAIcT","ignoreList":[]}