import{GPUInputStepMode}from"./WebGPUConstants.js";import{Float16BufferAttribute}from"../../../core/BufferAttribute.js";const typedArraysToVertexFormatPrefix=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]);"undefined"!=typeof Float16Array&&typedArraysToVertexFormatPrefix.set(Float16Array,["float16"]);const typedAttributeToVertexFormatPrefix=new Map([[Float16BufferAttribute,["float16"]]]),typeArraysToVertexFormatPrefixForItemSize1=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class WebGPUAttributeUtils{constructor(t){this.backend=t}createAttribute(t,e){const r=this._getBufferAttribute(t),a=this.backend,n=a.get(r);let o=n.buffer;if(void 0===o){const i=a.device;let s=r.array;if(!1===t.normalized)if(s.constructor===Int16Array||s.constructor===Int8Array)s=new Int32Array(s);else if((s.constructor===Uint16Array||s.constructor===Uint8Array)&&(s=new Uint32Array(s),e&GPUBufferUsage.INDEX))for(let t=0;t<s.length;t++)65535===s[t]&&(s[t]=4294967295);if(r.array=s,(r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute)&&3===r.itemSize){s=new s.constructor(4*r.count);for(let t=0;t<r.count;t++)s.set(r.array.subarray(3*t,3*t+3),4*t);r.itemSize=4,r.array=s,n._force3to4BytesAlignment=!0}const u=s.byteLength,f=u+(4-u%4)%4;o=i.createBuffer({label:r.name,size:f,usage:e,mappedAtCreation:!0}),new s.constructor(o.getMappedRange()).set(s),o.unmap(),n.buffer=o}}updateAttribute(t){const e=this._getBufferAttribute(t),r=this.backend,a=r.device,n=r.get(e),o=r.get(e).buffer;let i=e.array;if(!0===n._force3to4BytesAlignment){i=new i.constructor(4*e.count);for(let t=0;t<e.count;t++)i.set(e.array.subarray(3*t,3*t+3),4*t);e.array=i}const s=this._isTypedArray(i),u=e.updateRanges;if(0===u.length)a.queue.writeBuffer(o,0,i,0);else{const t=s?1:i.BYTES_PER_ELEMENT;for(let e=0,r=u.length;e<r;e++){const r=u[e];let f,c;if(!0===n._force3to4BytesAlignment){f=4*Math.floor(r.start/3)*t,c=4*Math.ceil(r.count/3)*t}else f=r.start*t,c=r.count*t;const y=f*(s?i.BYTES_PER_ELEMENT:1);a.queue.writeBuffer(o,y,i,f,c)}e.clearUpdateRanges()}}createShaderVertexBuffers(t){const e=t.getAttributes(),r=new Map;for(let t=0;t<e.length;t++){const a=e[t],n=a.array.BYTES_PER_ELEMENT,o=this._getBufferAttribute(a);let i=r.get(o);if(void 0===i){let t,e;!0===a.isInterleavedBufferAttribute?(t=a.data.stride*n,e=a.data.isInstancedInterleavedBuffer?GPUInputStepMode.Instance:GPUInputStepMode.Vertex):(t=a.itemSize*n,e=a.isInstancedBufferAttribute?GPUInputStepMode.Instance:GPUInputStepMode.Vertex),!1!==a.normalized||a.array.constructor!==Int16Array&&a.array.constructor!==Uint16Array||(t=4),i={arrayStride:t,attributes:[],stepMode:e},r.set(o,i)}const s=this._getVertexFormat(a),u=!0===a.isInterleavedBufferAttribute?a.offset*n:0;i.attributes.push({shaderLocation:t,offset:u,format:s})}return Array.from(r.values())}destroyAttribute(t){const e=this.backend;e.get(this._getBufferAttribute(t)).buffer.destroy(),e.delete(t)}async getArrayBufferAsync(t){const e=this.backend,r=e.device,a=e.get(this._getBufferAttribute(t)).buffer,n=a.size,o=r.createBuffer({label:`${t.name}_readback`,size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),i=r.createCommandEncoder({label:`readback_encoder_${t.name}`});i.copyBufferToBuffer(a,0,o,0,n);const s=i.finish();r.queue.submit([s]),await o.mapAsync(GPUMapMode.READ);const u=o.getMappedRange(),f=new t.array.constructor(u.slice(0));return o.unmap(),f.buffer}_getVertexFormat(t){const{itemSize:e,normalized:r}=t,a=t.array.constructor,n=t.constructor;let o;if(1===e)o=typeArraysToVertexFormatPrefixForItemSize1.get(a);else{const t=(typedAttributeToVertexFormatPrefix.get(n)||typedArraysToVertexFormatPrefix.get(a))[r?1:0];if(t){const r=a.BYTES_PER_ELEMENT*e,n=4*Math.floor((r+3)/4)/a.BYTES_PER_ELEMENT;if(n%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");o=`${t}x${n}`}}return o||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),o}_isTypedArray(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}_getBufferAttribute(t){return t.isInterleavedBufferAttribute&&(t=t.data),t}}export default WebGPUAttributeUtils;
//# sourceMappingURL=WebGPUAttributeUtils.js.map