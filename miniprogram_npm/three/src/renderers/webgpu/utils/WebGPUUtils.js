import{HalfFloatType,UnsignedByteType}from"../../../constants.js";import{GPUPrimitiveTopology,GPUTextureFormat}from"./WebGPUConstants.js";class WebGPUUtils{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=GPUTextureFormat.Depth24PlusStencil8:e.depth&&(t=GPUTextureFormat.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){const e=this.backend.renderer,r=e.getRenderTarget();t=r?r.samples:e.samples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;const r=t>1&&null!==e.renderTarget&&!0!==e.isDepthTexture&&!0!==e.isFramebufferTexture;return{samples:t,primarySamples:r?1:t,isMSAA:r}}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?GPUPrimitiveTopology.PointList:e.isLineSegments||e.isMesh&&!0===t.wireframe?GPUPrimitiveTopology.LineList:e.isLine?GPUPrimitiveTopology.LineStrip:e.isMesh?GPUPrimitiveTopology.TriangleList:void 0}getSampleCount(e){return e>=4?4:1}getSampleCountRenderContext(e){return null!==e.textures?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(void 0===e)return navigator.gpu.getPreferredCanvasFormat();if(e===UnsignedByteType)return GPUTextureFormat.BGRA8Unorm;if(e===HalfFloatType)return GPUTextureFormat.RGBA16Float;throw new Error("Unsupported outputType")}}export default WebGPUUtils;
//# sourceMappingURL=WebGPUUtils.js.map