import{ArrayCamera}from"../../cameras/ArrayCamera.js";import{EventDispatcher}from"../../core/EventDispatcher.js";import{PerspectiveCamera}from"../../cameras/PerspectiveCamera.js";import{Vector2}from"../../math/Vector2.js";import{Vector3}from"../../math/Vector3.js";import{Vector4}from"../../math/Vector4.js";import{RAD2DEG}from"../../math/MathUtils.js";import{WebGLAnimation}from"../webgl/WebGLAnimation.js";import{WebGLRenderTarget}from"../WebGLRenderTarget.js";import{WebXRController}from"./WebXRController.js";import{DepthTexture}from"../../textures/DepthTexture.js";import{ExternalTexture}from"../../textures/ExternalTexture.js";import{DepthFormat,DepthStencilFormat,RGBAFormat,UnsignedByteType,UnsignedIntType,UnsignedInt248Type}from"../../constants.js";import{WebXRDepthSensing}from"./WebXRDepthSensing.js";class WebXRManager extends EventDispatcher{constructor(e,t){super();const n=this;let r=null,i=1,o=null,a="local-floor",s=1,l=null,c=null,u=null,p=null,d=null,m=null;const f=new WebXRDepthSensing,h={},g=t.getContextAttributes();let x=null,v=null;const y=[],R=[],b=new Vector2;let W=null;const T=new PerspectiveCamera;T.viewport=new Vector4;const w=new PerspectiveCamera;w.viewport=new Vector4;const S=[T,w],E=new ArrayCamera;let j=null,L=null;function M(e){const t=R.indexOf(e.inputSource);if(-1===t)return;const n=y[t];void 0!==n&&(n.update(e.inputSource,e.frame,l||o),n.dispatchEvent({type:e.type,data:e.inputSource}))}function C(){r.removeEventListener("select",M),r.removeEventListener("selectstart",M),r.removeEventListener("selectend",M),r.removeEventListener("squeeze",M),r.removeEventListener("squeezestart",M),r.removeEventListener("squeezeend",M),r.removeEventListener("end",C),r.removeEventListener("inputsourceschange",D);for(let e=0;e<y.length;e++){const t=R[e];null!==t&&(R[e]=null,y[e].disconnect(t))}j=null,L=null,f.reset();for(const e in h)delete h[e];e.setRenderTarget(x),d=null,p=null,u=null,r=null,v=null,G.stop(),n.isPresenting=!1,e.setPixelRatio(W),e.setSize(b.width,b.height,!1),n.dispatchEvent({type:"sessionend"})}function D(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],r=R.indexOf(n);r>=0&&(R[r]=null,y[r].disconnect(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let r=R.indexOf(n);if(-1===r){for(let e=0;e<y.length;e++){if(e>=R.length){R.push(n),r=e;break}if(null===R[e]){R[e]=n,r=e;break}}if(-1===r)break}const i=y[r];i&&i.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=y[e];return void 0===t&&(t=new WebXRController,y[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=y[e];return void 0===t&&(t=new WebXRController,y[e]=t),t.getGripSpace()},this.getHand=function(e){let t=y[e];return void 0===t&&(t=new WebXRController,y[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){a=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==p?p:d},this.getBinding=function(){return u},this.getFrame=function(){return m},this.getSession=function(){return r},this.setSession=async function(c){if(r=c,null!==r){x=e.getRenderTarget(),r.addEventListener("select",M),r.addEventListener("selectstart",M),r.addEventListener("selectend",M),r.addEventListener("squeeze",M),r.addEventListener("squeezestart",M),r.addEventListener("squeezeend",M),r.addEventListener("end",C),r.addEventListener("inputsourceschange",D),!0!==g.xrCompatible&&await t.makeXRCompatible(),W=e.getPixelRatio(),e.getSize(b),"undefined"!=typeof XRWebGLBinding&&(u=new XRWebGLBinding(r,t));if(null!==u&&"createProjectionLayer"in XRWebGLBinding.prototype){let n=null,o=null,a=null;g.depth&&(a=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,n=g.stencil?DepthStencilFormat:DepthFormat,o=g.stencil?UnsignedInt248Type:UnsignedIntType);const s={colorFormat:t.RGBA8,depthFormat:a,scaleFactor:i};p=u.createProjectionLayer(s),r.updateRenderState({layers:[p]}),e.setPixelRatio(1),e.setSize(p.textureWidth,p.textureHeight,!1),v=new WebGLRenderTarget(p.textureWidth,p.textureHeight,{format:RGBAFormat,type:UnsignedByteType,depthTexture:new DepthTexture(p.textureWidth,p.textureHeight,o,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:!1===p.ignoreDepthValues,resolveStencilBuffer:!1===p.ignoreDepthValues})}else{const n={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:i};d=new XRWebGLLayer(r,t,n),r.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),v=new WebGLRenderTarget(d.framebufferWidth,d.framebufferHeight,{format:RGBAFormat,type:UnsignedByteType,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil,resolveDepthBuffer:!1===d.ignoreDepthValues,resolveStencilBuffer:!1===d.ignoreDepthValues})}v.isXRRenderTarget=!0,this.setFoveation(s),l=null,o=await r.requestReferenceSpace(a),G.setContext(r),G.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==r)return r.environmentBlendMode},this.getDepthTexture=function(){return f.getDepthTexture()};const F=new Vector3,P=new Vector3;function B(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;let t=e.near,n=e.far;null!==f.texture&&(f.depthNear>0&&(t=f.depthNear),f.depthFar>0&&(n=f.depthFar)),E.near=w.near=T.near=t,E.far=w.far=T.far=n,j===E.near&&L===E.far||(r.updateRenderState({depthNear:E.near,depthFar:E.far}),j=E.near,L=E.far),E.layers.mask=6|e.layers.mask,T.layers.mask=3&E.layers.mask,w.layers.mask=5&E.layers.mask;const i=e.parent,o=E.cameras;B(E,i);for(let e=0;e<o.length;e++)B(o[e],i);2===o.length?function(e,t,n){F.setFromMatrixPosition(t.matrixWorld),P.setFromMatrixPosition(n.matrixWorld);const r=F.distanceTo(P),i=t.projectionMatrix.elements,o=n.projectionMatrix.elements,a=i[14]/(i[10]-1),s=i[14]/(i[10]+1),l=(i[9]+1)/i[5],c=(i[9]-1)/i[5],u=(i[8]-1)/i[0],p=(o[8]+1)/o[0],d=a*u,m=a*p,f=r/(-u+p),h=f*-u;if(t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(h),e.translateZ(f),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),-1===i[10])e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse);else{const t=a+f,n=s+f,i=d-h,o=m+(r-h),u=l*s/n*t,p=c*s/n*t;e.projectionMatrix.makePerspective(i,o,u,p,t,n),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}}(E,T,w):E.projectionMatrix.copy(T.projectionMatrix),function(e,t,n){null===n?e.matrix.copy(t.matrixWorld):(e.matrix.copy(n.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld));e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*RAD2DEG*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,E,i)},this.getCamera=function(){return E},this.getFoveation=function(){if(null!==p||null!==d)return s},this.setFoveation=function(e){s=e,null!==p&&(p.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)},this.hasDepthSensing=function(){return null!==f.texture},this.getDepthSensingMesh=function(){return f.getMesh(E)},this.getCameraTexture=function(e){return h[e]};let V=null;const G=new WebGLAnimation;G.setAnimationLoop((function(t,i){if(c=i.getViewerPose(l||o),m=i,null!==c){const t=c.views;null!==d&&(e.setRenderTargetFramebuffer(v,d.framebuffer),e.setRenderTarget(v));let n=!1;t.length!==E.cameras.length&&(E.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){const i=t[r];let o=null;if(null!==d)o=d.getViewport(i);else{const t=u.getViewSubImage(p,i);o=t.viewport,0===r&&(e.setRenderTargetTextures(v,t.colorTexture,t.depthStencilTexture),e.setRenderTarget(v))}let a=S[r];void 0===a&&(a=new PerspectiveCamera,a.layers.enable(r),a.viewport=new Vector4,S[r]=a),a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale),a.projectionMatrix.fromArray(i.projectionMatrix),a.projectionMatrixInverse.copy(a.projectionMatrix).invert(),a.viewport.set(o.x,o.y,o.width,o.height),0===r&&(E.matrix.copy(a.matrix),E.matrix.decompose(E.position,E.quaternion,E.scale)),!0===n&&E.cameras.push(a)}const i=r.enabledFeatures;if(i&&i.includes("depth-sensing")&&"gpu-optimized"==r.depthUsage&&u){const e=u.getDepthInformation(t[0]);e&&e.isValid&&e.texture&&f.init(e,r.renderState)}if(i&&i.includes("camera-access")&&(e.state.unbindTexture(),u))for(let e=0;e<t.length;e++){const n=t[e].camera;if(n){let e=h[n];e||(e=new ExternalTexture,h[n]=e);const t=u.getCameraImage(n);e.sourceTexture=t}}}for(let e=0;e<y.length;e++){const t=R[e],n=y[e];null!==t&&void 0!==n&&n.update(t,i,l||o)}V&&V(t,i),i.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:i}),m=null})),this.setAnimationLoop=function(e){V=e},this.dispose=function(){}}}export{WebXRManager};
//# sourceMappingURL=WebXRManager.js.map