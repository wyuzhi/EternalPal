import type THREE from 'three';
import { ArProcessor, MaskType } from './ArProcessor';
interface FootAlgResult {
    left: number[][];
    right: number[][];
    leftMask: Uint8Array;
    rightMask: Uint8Array;
    maskWidth: number;
    maskHeight: number;
}
interface FootModels {
    left: THREE.Object3D;
    right: THREE.Object3D;
}
interface ArFootProcessorParams {
    three: typeof THREE;
}
interface UpdateModelsParams {
    algResult?: FootAlgResult;
    models: FootModels;
}
export declare class ArFootProcessor implements ArProcessor {
    private three;
    name: string;
    maskTextures: THREE.DataTexture[];
    threshold: number;
    maskType: MaskType;
    constructor({ three }: ArFootProcessorParams);
    private updateMesh;
    updateModels({ algResult, models }: UpdateModelsParams): void;
}
export {};
