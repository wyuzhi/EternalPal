var e;!function(e){e[e.remove=0]="remove",e[e.reveal=1]="reveal"}(e||(e={}));var t=function(){function t(t){var r=t.three;this.three=void 0,this.name=void 0,this.maskTextures=void 0,this.threshold=0,this.maskType=e.remove,this.name="ArFootProcessor",this.three=r,this.threshold=1,this.maskTextures=[new this.three.DataTexture(new Uint8Array(1),1,1,this.three.AlphaFormat),new this.three.DataTexture(new Uint8Array(1),1,1,this.three.AlphaFormat)]}var r=t.prototype;return r.updateMesh=function(e,t){for(var r=new this.three.Vector3,a=new this.three.Quaternion,i=new this.three.Vector3(1,1,1),n=new this.three.Matrix4,s=0;s<e.length;s++)n.elements[s]=e[s];n.decompose(r,a,i),t.position.copy(r),t.scale.copy(i),t.quaternion.copy(a)},r.updateModels=function(e){var t=e.algResult,r=e.models;if(null==t)return r.left.visible=!1,void(r.right.visible=!1);0!==t.left.length?(this.updateMesh(t.left[0],r.left),r.left.visible=!0):r.left.visible=!1,0!==t.right.length?(this.updateMesh(t.right[0],r.right),r.right.visible=!0):r.right.visible=!1,1===this.maskTextures[0].image.width?(this.maskTextures[0].copy(new this.three.DataTexture(t.leftMask,t.maskWidth,t.maskHeight,this.three.AlphaFormat)),this.maskTextures[1].copy(new this.three.DataTexture(t.rightMask,t.maskWidth,t.maskHeight,this.three.AlphaFormat))):(this.maskTextures[0].image.data.set(t.leftMask),this.maskTextures[1].image.data.set(t.rightMask)),this.maskTextures[0].needsUpdate=!0,this.maskTextures[1].needsUpdate=!0},t}();function r(e,t,r){return"\n    vec4 "+t+" = texture2D("+e+", vUv);\n    "+t+".a = "+t+".a >= "+(null==r.threshold?0:r.threshold).toPrecision(2)+" ? 1.0 : 0.0;\n"}var a=function(){function t(t){var a=t.three,i=t.processors,n=t.cameraTexture,s=t.modelTexture,o=t.mixedTextureWidth,h=t.mixedTextureHeight;this.mixedRenderTarget=void 0,this.maskScene=void 0,this.maskCamera=void 0,this.three=void 0,this.mixedTexture=void 0,this.processors=void 0,this.three=a,this.processors=i;var l=function(t,a,i){for(var n="",s="",o="",h={texCamera:{value:t},texModel:{value:a}},l=[],u=[],m=0;m<i.length;m++){var d=i[m],v=d.maskTextures,c=d.maskType;if(null!=v&&null!=c)for(var x=""+i[m].name[0].toLocaleLowerCase()+i[m].name.slice(1),g=0;g<v.length;g++){var p=x+"MaskTextures"+String(g),T=x+"MaskTexel"+String(g);switch(n+="uniform sampler2D "+p+";\n",h[p]={value:v[g]},c){case e.remove:s+=r(p,T,i[m]),u.push(T);break;case e.reveal:o+=r(p,T,i[m]),l.push(T)}}}return 0!==u.length&&(s+="    removeMaskTexel = "+u.join(" + ")+";\n\n\n    if(removeMaskTexel.a >= 1.0) {\n      model.a = 0.0;\n    }\n    if(model.a == 0.0) {\n      result = camera;\n    }\n    else {\n      result = model;\n    }\n"),0!==l.length&&(o+="    revealMaskTexel = "+l.join(" + ")+";\n\n\n    if(revealMaskTexel.a < 1.0) {\n      model.a = 0.0;\n    }\n    if(model.a == 0.0) {\n      result = camera;\n    }\n    else {\n      result = model;\n    }\n"),{shaderUniforms:h,fsCode:n+"\nuniform sampler2D texModel;\nuniform sampler2D texCamera;\n\nvarying vec2 vUv;\nvoid main(void) {\n    vec4 model = texture2D(texModel, vUv);\n    vec4 camera = texture2D(texCamera, vUv);\n    vec4 result = camera;\n\n    vec4 removeMaskTexel;\n    vec4 revealMaskTexel;\n\n"+s+o+"\n    gl_FragColor = vec4(result);\n}"}}(n,s,this.processors),u=new this.three.ShaderMaterial({uniforms:l.shaderUniforms,vertexShader:"\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n}\n",fragmentShader:l.fsCode}),m=new this.three.PlaneGeometry(o,h);this.mixedRenderTarget=new this.three.WebGLRenderTarget(o,h);var d=new this.three.Mesh(m,u);d.position.z=-10,this.maskScene=new this.three.Scene,this.maskScene.add(d),this.maskCamera=new this.three.OrthographicCamera(o/-2,o/2,h/2,h/-2,1,1e3),this.mixedTexture=this.mixedRenderTarget.texture}return t.prototype.render=function(e){var t=e.renderer,r=t.getRenderTarget();t.setRenderTarget(this.mixedRenderTarget),t.render(this.maskScene,this.maskCamera),t.setRenderTarget(r)},t}();function i(e){var t=e.nailModel,r=e.keyPoints,a=e.cameraWidth,i=e.cameraHeight,n=e.THREE,s=function(e){for(var t,r,a,i,n,s,o,h,l,u=e.keyPoints,m=e.cameraWidth,d=e.cameraHeight,v=new Array,c={x:u.get(7).x*m-m/2,y:u.get(7).y*d-d/2,z:-10},x=0,g=0,p=0,T=0;T<8;T++){var f=u.get(T);v.push({x:f.x*m-m/2,y:f.y*d-d/2,z:-10}),T>0&&7!==T&&(a=(r={p0:v[T-1],p1:v[T],p2:c}).p0,i=r.p1,n=r.p2,s=Math.abs(a.x-n.x),o=Math.abs(i.x-n.x),h=Math.abs(a.y-n.y),l=Math.abs(i.y-n.y),x+=(t={area:.5*Math.abs(s*l-o*h),centroid:{x:(n.x+a.x+i.x)/3,y:(n.y+a.y+i.y)/3}}).area,g+=t.centroid.x*t.area,p+=t.centroid.y*t.area)}return{x:g/=x,y:p/=x}}({keyPoints:r,cameraWidth:a,cameraHeight:i}),o=new Float32Array(t.geometry.attributes.position.array.length);if(t.geometry.attributes.position instanceof n.BufferAttribute){for(var h=0;h<8;h++){var l={x:r.get(h).x*a-a/2,y:r.get(h).y*i-i/2},u=l.y-s.y;o[3*h]=l.x+.2*(l.x-s.x),o[3*h+1]=l.y+.2*u,o[3*h+2]=-10}t.geometry.attributes.position.array=o}t.visible=!0,t.geometry.attributes.position.needsUpdate=!0}var n=function(){function t(t){var r=t.three;this.three=void 0,this.name=void 0,this.maskTextures=void 0,this.threshold=0,this.maskType=e.reveal,this.name="ArNailProcessor",this.three=r,this.threshold=.5,this.maskTextures=[new this.three.DataTexture(new Uint8Array(1),1,1,this.three.AlphaFormat)],this.maskTextures[0].needsUpdate=!0}return t.prototype.updateModels=function(e){var t=e.algResult,r=e.models,a=e.cameraWidth,n=e.cameraHeight;null!=t&&(1===this.maskTextures[0].image.width?this.maskTextures[0].copy(new this.three.DataTexture(t.nailMaskResult.nailMask,t.nailMaskResult.width,t.nailMaskResult.height,this.three.AlphaFormat)):this.maskTextures[0].image.data.set(t.nailMaskResult.nailMask),this.maskTextures[0].needsUpdate=!0,function(e){for(var t=e.algResult,r=e.nailModelGroup,a=e.cameraWidth,n=e.cameraHeight,s=e.THREE,o=0;o<5;o++)r.children[o].visible=!1;for(var h=0;h<t.nailMaskResult.nailNum;h++){var l=t.nailKeypointResults[h].nailType-1;l<0||i({nailModel:r.children[l],keyPoints:t.nailKeypointResults[h].keyPoints,cameraWidth:a,cameraHeight:n,THREE:s})}}({algResult:t,nailModelGroup:r,cameraWidth:a,cameraHeight:n,THREE:this.three}))},t}(),s=new Float32Array([1/6,1/4,7/24,1/8,.5,1/12,17/24,1/8,5/6,1/4,17/24,5/6,.5,11/12,7/24,5/6]),o=[0,1,4,1,2,4,2,3,4],h=[7,0,6,0,1,6,1,2,6,2,3,6,3,4,6,4,5,6];function l(e){for(var t=e.THREE,r=e.highLightTexture,a=new Float32Array(24),i=0;i<24;i++)a[i]=i;var n=new t.BufferGeometry;n.setAttribute("position",new t.BufferAttribute(a,3)),n.setAttribute("uv",new t.BufferAttribute(s,2)),n.setIndex(h);var o=new t.ShaderMaterial({uniforms:{highLightTexture:{value:r}},vertexShader:"\n    varying vec2 vUv;\n\n    void main()\n    {\n        vUv = uv;\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n        gl_Position = projectionMatrix * mvPosition;\n    }\n  ",fragmentShader:"\n    uniform sampler2D highLightTexture;\n\n    varying vec2 vUv;\n    void main(void) {\n        vec4 tex = texture2D(highLightTexture, vUv);\n        gl_FragColor = vec4(tex.r, tex.g, tex.b, 1.0);\n    }\n  "});return o.side=t.DoubleSide,new t.Mesh(n,o)}function u(e){for(var t=e.THREE,r=e.highLightTexture,a=new t.Group,i=0;i<5;i++)a.add(l({THREE:t,highLightTexture:r}));return a}var m={getNailModelGroupByColor:function(e){var t=e.THREE,r=e.renderer,a=e.color;a instanceof t.Color||(a=new t.Color(a));var i=function(e){var t=e.THREE,r=e.renderer,a=e.color,i=new Float32Array([-87.04,128,1,-107.52,35.84,1,-107.52,-15.36,1,-81.92,-112.64,1,-71.68,10.24,1]),n=new t.Scene,s=new t.OrthographicCamera(-256,256,256,-256,1,1e3),h=new t.WebGLRenderTarget(512,512),l=new t.BufferGeometry;l.setAttribute("position",new t.BufferAttribute(i,3)),l.setIndex(o);var u=new t.MeshBasicMaterial({color:new t.Color(16777215)}),m=new t.Mesh(l,u);m.position.z=-10,n.add(m),r.setRenderTarget(h);var d=new t.Color;return r.getClearColor(d),r.setClearColor(a),r.render(n,s),r.setClearColor(d,r.getClearAlpha()),r.setRenderTarget(null),h.texture}({THREE:t,renderer:r,color:a});return u({THREE:t,highLightTexture:i})},getNailModelGroupByTexture:function(e){return u({THREE:e.THREE,highLightTexture:e.texture})}};export{t as ArFootProcessor,a as ArMixer,n as ArNailProcessor,m as ArNailUtils};
//# sourceMappingURL=index.module.js.map
